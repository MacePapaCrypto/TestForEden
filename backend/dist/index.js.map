{"version":3,"file":"index.js","sources":["../node_modules/regenerator-runtime/runtime.js","../node_modules/@arr/every/module.js","../node_modules/matchit/lib/matchit.mjs","../node_modules/trouter/index.js","../node_modules/@polka/url/index.js","../node_modules/polka/index.js","../node_modules/cassandra-driver/lib/errors.js","../node_modules/cassandra-driver/lib/promise-utils.js","../node_modules/cassandra-driver/lib/utils.js","../node_modules/cassandra-driver/lib/policies/address-resolution.js","../node_modules/long/dist/Long.js","../node_modules/cassandra-driver/lib/types/uuid.js","../node_modules/cassandra-driver/lib/types/time-uuid.js","../node_modules/cassandra-driver/lib/types/version-number.js","../node_modules/cassandra-driver/lib/types/protocol-version.js","../node_modules/cassandra-driver/lib/types/integer.js","../node_modules/cassandra-driver/lib/types/big-decimal.js","../node_modules/cassandra-driver/lib/types/duration.js","../node_modules/cassandra-driver/lib/types/inet-address.js","../node_modules/cassandra-driver/lib/types/local-date.js","../node_modules/cassandra-driver/lib/types/local-time.js","../node_modules/cassandra-driver/lib/types/result-set.js","../node_modules/cassandra-driver/lib/types/result-stream.js","../node_modules/cassandra-driver/lib/types/row.js","../node_modules/cassandra-driver/lib/types/tuple.js","../node_modules/cassandra-driver/lib/types/index.js","../node_modules/cassandra-driver/lib/policies/load-balancing.js","../node_modules/cassandra-driver/lib/policies/reconnection.js","../node_modules/cassandra-driver/lib/policies/retry.js","../node_modules/cassandra-driver/lib/policies/speculative-execution.js","../node_modules/cassandra-driver/lib/policies/timestamp-generation.js","../node_modules/cassandra-driver/lib/policies/index.js","../node_modules/cassandra-driver/lib/tracker/request-tracker.js","../node_modules/cassandra-driver/lib/tracker/request-logger.js","../node_modules/cassandra-driver/lib/tracker/index.js","../node_modules/cassandra-driver/lib/metrics/client-metrics.js","../node_modules/cassandra-driver/lib/metrics/default-metrics.js","../node_modules/cassandra-driver/lib/metrics/index.js","../node_modules/cassandra-driver/lib/auth/provider.js","../node_modules/cassandra-driver/lib/auth/plain-text-auth-provider.js","../node_modules/cassandra-driver/lib/auth/base-dse-authenticator.js","../node_modules/cassandra-driver/lib/auth/gssapi-client.js","../node_modules/cassandra-driver/lib/auth/dse-gssapi-auth-provider.js","../node_modules/cassandra-driver/lib/auth/dse-plain-text-auth-provider.js","../node_modules/cassandra-driver/lib/auth/no-auth-provider.js","../node_modules/cassandra-driver/lib/auth/index.js","../node_modules/cassandra-driver/lib/client-options.js","../node_modules/cassandra-driver/lib/execution-profile.js","../node_modules/cassandra-driver/lib/writers.js","../node_modules/cassandra-driver/lib/execution-options.js","../node_modules/cassandra-driver/lib/requests.js","../node_modules/cassandra-driver/lib/metadata/client-state.js","../node_modules/cassandra-driver/lib/types/mutable-long.js","../node_modules/cassandra-driver/lib/token.js","../node_modules/cassandra-driver/lib/datastax/search/date-range.js","../node_modules/cassandra-driver/lib/datastax/search/index.js","../node_modules/cassandra-driver/lib/geometry/geometry.js","../node_modules/cassandra-driver/lib/geometry/point.js","../node_modules/cassandra-driver/lib/geometry/line-string.js","../node_modules/cassandra-driver/lib/geometry/polygon.js","../node_modules/cassandra-driver/lib/geometry/index.js","../node_modules/cassandra-driver/lib/encoder.js","../node_modules/cassandra-driver/lib/readers.js","../node_modules/cassandra-driver/lib/streams.js","../node_modules/cassandra-driver/lib/stream-id-stack.js","../node_modules/cassandra-driver/lib/operation-state.js","../node_modules/cassandra-driver/lib/connection.js","../node_modules/cassandra-driver/lib/host-connection-pool.js","../node_modules/cassandra-driver/lib/prepare-handler.js","../node_modules/cassandra-driver/lib/host.js","../node_modules/cassandra-driver/lib/tokenizer.js","../node_modules/cassandra-driver/lib/metadata/data-collection.js","../node_modules/cassandra-driver/lib/metadata/table-metadata.js","../node_modules/cassandra-driver/lib/metadata/aggregate.js","../node_modules/cassandra-driver/lib/metadata/schema-function.js","../node_modules/cassandra-driver/lib/metadata/schema-index.js","../node_modules/cassandra-driver/lib/metadata/materialized-view.js","../node_modules/cassandra-driver/lib/metadata/schema-parser.js","../node_modules/cassandra-driver/lib/metadata/index.js","../node_modules/cassandra-driver/lib/metadata/event-debouncer.js","../node_modules/cassandra-driver/lib/control-connection.js","../node_modules/cassandra-driver/lib/request-execution.js","../node_modules/cassandra-driver/lib/request-handler.js","../node_modules/cassandra-driver/lib/insights-client.js","../node_modules/adm-zip/util/fileSystem.js","../node_modules/adm-zip/util/constants.js","../node_modules/adm-zip/util/utils.js","../node_modules/adm-zip/util/errors.js","../node_modules/adm-zip/util/fattr.js","../node_modules/adm-zip/util/index.js","../node_modules/adm-zip/headers/entryHeader.js","../node_modules/adm-zip/headers/mainHeader.js","../node_modules/adm-zip/headers/index.js","../node_modules/adm-zip/methods/deflater.js","../node_modules/adm-zip/methods/inflater.js","../node_modules/adm-zip/methods/zipcrypto.js","../node_modules/adm-zip/methods/index.js","../node_modules/adm-zip/zipEntry.js","../node_modules/adm-zip/zipFile.js","../node_modules/adm-zip/adm-zip.js","../node_modules/cassandra-driver/lib/datastax/cloud/index.js","../node_modules/cassandra-driver/lib/datastax/graph/result-set.js","../node_modules/cassandra-driver/lib/datastax/graph/wrappers.js","../node_modules/cassandra-driver/lib/datastax/graph/complex-type-helper.js","../node_modules/cassandra-driver/lib/datastax/graph/structure.js","../node_modules/cassandra-driver/lib/datastax/graph/custom-type-serializers.js","../node_modules/cassandra-driver/lib/datastax/graph/index.js","../node_modules/cassandra-driver/lib/datastax/graph/type-serializers.js","../node_modules/cassandra-driver/lib/datastax/graph/graph-serializer.js","../node_modules/cassandra-driver/lib/datastax/graph/options.js","../node_modules/cassandra-driver/lib/datastax/graph/graph-executor.js","../node_modules/cassandra-driver/lib/client.js","../node_modules/cassandra-driver/lib/mapping/tree.js","../node_modules/cassandra-driver/lib/mapping/q.js","../node_modules/cassandra-driver/lib/mapping/cache.js","../node_modules/cassandra-driver/lib/mapping/model-batch-item.js","../node_modules/cassandra-driver/lib/mapping/model-batch-mapper.js","../node_modules/cassandra-driver/lib/mapping/model-mapper.js","../node_modules/cassandra-driver/lib/mapping/query-generator.js","../node_modules/cassandra-driver/lib/mapping/result-mapper.js","../node_modules/cassandra-driver/lib/mapping/result.js","../node_modules/cassandra-driver/lib/mapping/object-selector.js","../node_modules/cassandra-driver/lib/mapping/doc-info-adapter.js","../node_modules/cassandra-driver/lib/mapping/mapping-handler.js","../node_modules/cassandra-driver/lib/mapping/table-mappings.js","../node_modules/cassandra-driver/lib/mapping/model-mapping-info.js","../node_modules/cassandra-driver/lib/mapping/mapper.js","../node_modules/cassandra-driver/lib/mapping/index.js","../node_modules/cassandra-driver/lib/concurrent/index.js","../node_modules/cassandra-driver/lib/datastax/index.js","../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export default function (arr, cb) {\n\tvar i=0, len=arr.length;\n\n\tfor (; i < len; i++) {\n\t\tif (!cb(arr[i], i, arr)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n","'use strict';\n\nimport every from '@arr/every';\n\nconst SEP = '/';\n// Types ~> static, param, any, optional\nconst STYPE=0, PTYPE=1, ATYPE=2, OTYPE=3;\n// Char Codes ~> / : *\nconst SLASH=47, COLON=58, ASTER=42, QMARK=63;\n\nfunction strip(str) {\n\tif (str === SEP) return str;\n\t(str.charCodeAt(0) === SLASH) && (str=str.substring(1));\n\tvar len = str.length - 1;\n\treturn str.charCodeAt(len) === SLASH ? str.substring(0, len) : str;\n}\n\nfunction split(str) {\n\treturn (str=strip(str)) === SEP ? [SEP] : str.split(SEP);\n}\n\nfunction isMatch(arr, obj, idx) {\n\tidx = arr[idx];\n\treturn (obj.val === idx && obj.type === STYPE) || (idx === SEP ? obj.type > PTYPE : obj.type !== STYPE && (idx || '').endsWith(obj.end));\n}\n\nexport function match(str, all) {\n\tvar i=0, tmp, segs=split(str), len=segs.length, l;\n\tvar fn = isMatch.bind(isMatch, segs);\n\n\tfor (; i < all.length; i++) {\n\t\ttmp = all[i];\n\t\tif ((l=tmp.length) === len || (l < len && tmp[l-1].type === ATYPE) || (l > len && tmp[l-1].type === OTYPE)) {\n\t\t\tif (every(tmp, fn)) return tmp;\n\t\t}\n\t}\n\n\treturn [];\n}\n\nexport function parse(str) {\n\tif (str === SEP) {\n\t\treturn [{ old:str, type:STYPE, val:str, end:'' }];\n\t}\n\n\tvar c, x, t, sfx, nxt=strip(str), i=-1, j=0, len=nxt.length, out=[];\n\n\twhile (++i < len) {\n\t\tc = nxt.charCodeAt(i);\n\n\t\tif (c === COLON) {\n\t\t\tj = i + 1; // begining of param\n\t\t\tt = PTYPE; // set type\n\t\t\tx = 0; // reset mark\n\t\t\tsfx = '';\n\n\t\t\twhile (i < len && nxt.charCodeAt(i) !== SLASH) {\n\t\t\t\tc = nxt.charCodeAt(i);\n\t\t\t\tif (c === QMARK) {\n\t\t\t\t\tx=i; t=OTYPE;\n\t\t\t\t} else if (c === 46 && sfx.length === 0) {\n\t\t\t\t\tsfx = nxt.substring(x=i);\n\t\t\t\t}\n\t\t\t\ti++; // move on\n\t\t\t}\n\n\t\t\tout.push({\n\t\t\t\told: str,\n\t\t\t\ttype: t,\n\t\t\t\tval: nxt.substring(j, x||i),\n\t\t\t\tend: sfx\n\t\t\t});\n\n\t\t\t// shorten string & update pointers\n\t\t\tnxt=nxt.substring(i); len-=i; i=0;\n\n\t\t\tcontinue; // loop\n\t\t} else if (c === ASTER) {\n\t\t\tout.push({\n\t\t\t\told: str,\n\t\t\t\ttype: ATYPE,\n\t\t\t\tval: nxt.substring(i),\n\t\t\t\tend: ''\n\t\t\t});\n\t\t\tcontinue; // loop\n\t\t} else {\n\t\t\tj = i;\n\t\t\twhile (i < len && nxt.charCodeAt(i) !== SLASH) {\n\t\t\t\t++i; // skip to next slash\n\t\t\t}\n\t\t\tout.push({\n\t\t\t\told: str,\n\t\t\t\ttype: STYPE,\n\t\t\t\tval: nxt.substring(j, i),\n\t\t\t\tend: ''\n\t\t\t});\n\t\t\t// shorten string & update pointers\n\t\t\tnxt=nxt.substring(i); len-=i; i=j=0;\n\t\t}\n\t}\n\n\treturn out;\n}\n\nexport function exec(str, arr) {\n\tvar i=0, x, y, segs=split(str), out={};\n\tfor (; i < arr.length; i++) {\n\t\tx=segs[i]; y=arr[i];\n\t\tif (x === SEP) continue;\n\t\tif (x !== void 0 && y.type | 2 === OTYPE) {\n\t\t\tout[ y.val ] = x.replace(y.end, '');\n\t\t}\n\t}\n\treturn out;\n}\n","const { exec, match, parse } = require('matchit');\n\nclass Trouter {\n\tconstructor(opts) {\n\t\tthis.opts = opts || {};\n\t\tthis.routes = {};\n\t\tthis.handlers = {};\n\n\t\tthis.all = this.add.bind(this, '*');\n\t\tthis.get = this.add.bind(this, 'GET');\n\t\tthis.head = this.add.bind(this, 'HEAD');\n\t\tthis.patch = this.add.bind(this, 'PATCH');\n\t\tthis.options = this.add.bind(this, 'OPTIONS');\n    this.connect = this.add.bind(this, 'CONNECT');\n\t\tthis.delete = this.add.bind(this, 'DELETE');\n    this.trace = this.add.bind(this, 'TRACE');\n\t\tthis.post = this.add.bind(this, 'POST');\n\t\tthis.put = this.add.bind(this, 'PUT');\n\t}\n\n\tadd(method, pattern, ...fns) {\n\t\t// Save decoded pattern info\n\t\tif (this.routes[method] === void 0) this.routes[method]=[];\n\t\tthis.routes[method].push(parse(pattern));\n\t\t// Save route handler(s)\n\t\tif (this.handlers[method] === void 0) this.handlers[method]={};\n\t\tthis.handlers[method][pattern] = fns;\n\t\t// Allow chainable\n\t\treturn this;\n\t}\n\n\tfind(method, url) {\n\t\tlet arr = match(url, this.routes[method] || []);\n\t\tif (arr.length === 0) {\n\t\t\tarr = match(url, this.routes[method='*'] || []);\n\t\t\tif (!arr.length) return false;\n\t\t}\n\t\treturn {\n\t\t\tparams: exec(url, arr),\n\t\t\thandlers: this.handlers[method][arr[0].old]\n\t\t};\n\t}\n}\n\nmodule.exports = Trouter;\n","module.exports = function (req) {\n\tlet url = req.url;\n\tif (url === void 0) return url;\n\n\tlet obj = req._parsedUrl;\n\tif (obj && obj._raw === url) return obj;\n\n\tobj = {};\n\tobj.query = obj.search = null;\n\tobj.href = obj.path = obj.pathname = url;\n\n\tlet idx = url.indexOf('?', 1);\n\tif (idx !== -1) {\n\t\tobj.search = url.substring(idx);\n\t\tobj.query = obj.search.substring(1);\n\t\tobj.pathname = url.substring(0, idx);\n\t}\n\n\tobj._raw = url;\n\n\treturn (req._parsedUrl = obj);\n}\n","const http = require('http');\nconst Router = require('trouter');\nconst { parse } = require('querystring');\nconst parser = require('@polka/url');\n\nfunction lead(x) {\n\treturn x.charCodeAt(0) === 47 ? x : ('/' + x);\n}\n\nfunction value(x) {\n  let y = x.indexOf('/', 1);\n  return y > 1 ? x.substring(0, y) : x;\n}\n\nfunction mutate(str, req) {\n\treq.url = req.url.substring(str.length) || '/';\n\treq.path = req.path.substring(str.length) || '/';\n}\n\nfunction onError(err, req, res, next) {\n\tlet code = (res.statusCode = err.code || err.status || 500);\n\tres.end(err.length && err || err.message || http.STATUS_CODES[code]);\n}\n\nclass Polka extends Router {\n\tconstructor(opts={}) {\n\t\tsuper(opts);\n\t\tthis.apps = {};\n\t\tthis.wares = [];\n\t\tthis.bwares = {};\n\t\tthis.parse = parser;\n\t\tthis.server = opts.server;\n\t\tthis.handler = this.handler.bind(this);\n\t\tthis.onError = opts.onError || onError; // catch-all handler\n\t\tthis.onNoMatch = opts.onNoMatch || this.onError.bind(null, { code:404 });\n\t}\n\n\tadd(method, pattern, ...fns) {\n\t\tlet base = lead(value(pattern));\n\t\tif (this.apps[base] !== void 0) throw new Error(`Cannot mount \".${method.toLowerCase()}('${lead(pattern)}')\" because a Polka application at \".use('${base}')\" already exists! You should move this handler into your Polka application instead.`);\n\t\treturn super.add(method, pattern, ...fns);\n\t}\n\n\tuse(base, ...fns) {\n\t\tif (typeof base === 'function') {\n\t\t\tthis.wares = this.wares.concat(base, fns);\n\t\t} else if (base === '/') {\n\t\t\tthis.wares = this.wares.concat(fns);\n\t\t} else {\n\t\t\tbase = lead(base);\n\t\t\tfns.forEach(fn => {\n\t\t\t\tif (fn instanceof Polka) {\n\t\t\t\t\tthis.apps[base] = fn;\n\t\t\t\t} else {\n\t\t\t\t\tlet arr = this.bwares[base] || [];\n\t\t\t\t\tarr.length > 0 || arr.push((r, _, nxt) => (mutate(base, r),nxt()));\n\t\t\t\t\tthis.bwares[base] = arr.concat(fn);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this; // chainable\n\t}\n\n\tlisten() {\n\t\t(this.server = this.server || http.createServer()).on('request', this.handler);\n\t\tthis.server.listen.apply(this.server, arguments);\n\t\treturn this;\n\t}\n\n\thandler(req, res, info) {\n\t\tinfo = info || this.parse(req);\n\t\tlet fns=[], arr=this.wares, obj=this.find(req.method, info.pathname);\n\t\treq.originalUrl = req.originalUrl || req.url;\n\t\tlet base = value(req.path = info.pathname);\n\t\tif (this.bwares[base] !== void 0) {\n\t\t\tarr = arr.concat(this.bwares[base]);\n\t\t}\n\t\tif (obj) {\n\t\t\tfns = obj.handlers;\n\t\t\treq.params = obj.params;\n\t\t} else if (this.apps[base] !== void 0) {\n\t\t\tmutate(base, req); info.pathname=req.path; //=> updates\n\t\t\tfns.push(this.apps[base].handler.bind(null, req, res, info));\n\t\t} else if (fns.length === 0) {\n\t\t\tfns.push(this.onNoMatch);\n\t\t}\n\t\t// Grab addl values from `info`\n\t\treq.search = info.search;\n\t\treq.query = parse(info.query);\n\t\t// Exit if only a single function\n\t\tlet i=0, len=arr.length, num=fns.length;\n\t\tif (len === i && num === 1) return fns[0](req, res);\n\t\t// Otherwise loop thru all middlware\n\t\tlet next = err => err ? this.onError(err, req, res, next) : loop();\n\t\tlet loop = _ => res.finished || (i < len) && arr[i++](req, res, next);\n\t\tarr = arr.concat(fns);\n\t\tlen += num;\n\t\tloop(); // init\n\t}\n}\n\nmodule.exports = opts => new Polka(opts);\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\n/**\n * Contains the error classes exposed by the driver.\n * @module errors\n */\n\n/**\n * Base Error\n * @private\n */\nfunction DriverError (message) {\n  Error.call(this, message);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = this.constructor.name;\n  this.info = 'Cassandra Driver Error';\n  // Explicitly set the message property as the Error.call() doesn't set the property on v8\n  this.message = message;\n}\n\nutil.inherits(DriverError, Error);\n\n/**\n * Represents an error when a query cannot be performed because no host is available or could be reached by the driver.\n * @param {Object} innerErrors An object map containing the error per host tried\n * @param {String} [message]\n * @constructor\n */\nfunction NoHostAvailableError(innerErrors, message) {\n  DriverError.call(this, message);\n  this.innerErrors = innerErrors;\n  this.info = 'Represents an error when a query cannot be performed because no host is available or could be reached by the driver.';\n  if (!message) {\n    this.message = 'All host(s) tried for query failed.';\n    if (innerErrors) {\n      const hostList = Object.keys(innerErrors);\n      if (hostList.length > 0) {\n        const host = hostList[0];\n        this.message += util.format(' First host tried, %s: %s. See innerErrors.', host, innerErrors[host]);\n      }\n    }\n  }\n}\n\nutil.inherits(NoHostAvailableError, DriverError);\n\n/**\n * Represents an error message from the server\n * @param {Number} code Cassandra exception code\n * @param {String} message\n * @constructor\n */\nfunction ResponseError(code, message) {\n  DriverError.call(this, message);\n  /**\n   * The error code as defined in [responseErrorCodes]{@link module:types~responseErrorCodes}.\n   * @type {Number}\n   */\n  this.code = code;\n  this.info = 'Represents an error message from the server';\n}\n\nutil.inherits(ResponseError, DriverError);\n\n/**\n * Represents a bug inside the driver or in a Cassandra host.\n * @param {String} message\n * @constructor\n */\nfunction DriverInternalError(message) {\n  DriverError.call(this, message);\n  this.info = 'Represents a bug inside the driver or in a Cassandra host.';\n}\n\nutil.inherits(DriverInternalError, DriverError);\n\n/**\n * Represents an error when trying to authenticate with auth-enabled host\n * @param {String} message\n * @constructor\n */\nfunction AuthenticationError(message) {\n  DriverError.call(this, message);\n  this.info = 'Represents an authentication error from the driver or from a Cassandra node.';\n}\n\nutil.inherits(AuthenticationError, DriverError);\n\n/**\n * Represents an error that is raised when one of the arguments provided to a method is not valid\n * @param {String} message\n * @constructor\n */\nfunction ArgumentError(message) {\n  DriverError.call(this, message);\n  this.info = 'Represents an error that is raised when one of the arguments provided to a method is not valid.';\n}\n\nutil.inherits(ArgumentError, DriverError);\n\n/**\n * Represents a client-side error that is raised when the client didn't hear back from the server within\n * {@link ClientOptions.socketOptions.readTimeout}.\n * @param {String} message The error message.\n * @param {String} [host] Address of the server host that caused the operation to time out.\n * @constructor\n */\nfunction OperationTimedOutError(message, host) {\n  DriverError.call(this, message, this.constructor);\n  this.info = 'Represents a client-side error that is raised when the client did not hear back from the server ' +\n    'within socketOptions.readTimeout';\n\n  /**\n   * When defined, it gets the address of the host that caused the operation to time out.\n   * @type {String|undefined}\n   */\n  this.host = host;\n}\n\nutil.inherits(OperationTimedOutError, DriverError);\n\n/**\n * Represents an error that is raised when a feature is not supported in the driver or in the current Cassandra version.\n * @param message\n * @constructor\n */\nfunction NotSupportedError(message) {\n  DriverError.call(this, message, this.constructor);\n  this.info = 'Represents a feature that is not supported in the driver or in the Cassandra version.';\n}\n\nutil.inherits(NotSupportedError, DriverError);\n\n/**\n * Represents a client-side error indicating that all connections to a certain host have reached\n * the maximum amount of in-flight requests supported.\n * @param {String} address\n * @param {Number} maxRequestsPerConnection\n * @param {Number} connectionLength\n * @constructor\n */\nfunction BusyConnectionError(address, maxRequestsPerConnection, connectionLength) {\n  const message = util.format('All connections to host %s are busy, %d requests are in-flight on %s',\n    address, maxRequestsPerConnection, connectionLength === 1 ? 'a single connection': 'each connection');\n  DriverError.call(this, message, this.constructor);\n  this.info = 'Represents a client-side error indicating that all connections to a certain host have reached ' +\n    'the maximum amount of in-flight requests supported (pooling.maxRequestsPerConnection)';\n}\n\nutil.inherits(BusyConnectionError, DriverError);\n\nexports.ArgumentError = ArgumentError;\nexports.AuthenticationError = AuthenticationError;\nexports.BusyConnectionError = BusyConnectionError;\nexports.DriverError = DriverError;\nexports.OperationTimedOutError = OperationTimedOutError;\nexports.DriverInternalError = DriverInternalError;\nexports.NoHostAvailableError = NoHostAvailableError;\nexports.NotSupportedError = NotSupportedError;\nexports.ResponseError = ResponseError;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\n/**\n * Creates a non-clearable timer that resolves the promise once elapses.\n * @param {number} ms\n * @returns {Promise<void>}\n */\nfunction delay(ms) {\n  return new Promise(r => setTimeout(r, ms || 0));\n}\n\n/**\n * Creates a Promise that gets resolved or rejected based on an event.\n * @param {object} emitter\n * @param {string} eventName\n * @returns {Promise}\n */\nfunction fromEvent(emitter, eventName) {\n  return new Promise((resolve, reject) =>\n    emitter.once(eventName, (err, result) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(result);\n      }\n    }));\n}\n\n/**\n * Creates a Promise from a callback based function.\n * @param {Function} fn\n * @returns {Promise}\n */\nfunction fromCallback(fn) {\n  return new Promise((resolve, reject) =>\n    fn((err, result) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(result);\n      }\n    }));\n}\n\n/**\n * Gets a function that has the signature of a callback that invokes the appropriate promise handler parameters.\n * @param {Function} resolve\n * @param {Function} reject\n * @returns {Function}\n */\nfunction getCallback(resolve, reject) {\n  return function (err, result) {\n    if (err) {\n      reject(err);\n    } else {\n      resolve(result);\n    }\n  };\n}\n\nasync function invokeSequentially(info, length, fn) {\n  let index;\n  while ((index = info.counter++) < length) {\n    await fn(index);\n  }\n}\n\n/**\n * Invokes the new query plan of the load balancing policy and returns a Promise.\n * @param {LoadBalancingPolicy} lbp The load balancing policy.\n * @param {String} keyspace Name of currently logged keyspace at <code>Client</code> level.\n * @param {ExecutionOptions|null} executionOptions The information related to the execution of the request.\n * @returns {Promise<Iterator>}\n */\nfunction newQueryPlan(lbp, keyspace, executionOptions) {\n  return new Promise((resolve, reject) => {\n    lbp.newQueryPlan(keyspace, executionOptions, (err, iterator) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(iterator);\n      }\n    });\n  });\n}\n\n/**\n * Method that handles optional callbacks (dual promise and callback support).\n * When callback is undefined it returns the promise.\n * When using a callback, it will use it as handlers of the continuation of the promise.\n * @param {Promise} promise\n * @param {Function?} callback\n * @returns {Promise|undefined}\n */\nfunction optionalCallback(promise, callback) {\n  if (!callback) {\n    return promise;\n  }\n\n  toCallback(promise, callback);\n}\n\n/**\n * Invokes the provided function multiple times, considering the concurrency level limit.\n * @param {Number} count\n * @param {Number} limit\n * @param {Function} fn\n * @returns {Promise}\n */\nfunction times(count, limit, fn) {\n  if (limit > count) {\n    limit = count;\n  }\n\n  const promises = new Array(limit);\n\n  const info = {\n    counter: 0\n  };\n\n  for (let i = 0; i < limit; i++) {\n    promises[i] = invokeSequentially(info, count, fn);\n  }\n\n  return Promise.all(promises);\n}\n\n/**\n * Deals with unexpected rejections in order to avoid the unhandled promise rejection warning or failure.\n * @param {Promise} promise\n * @returns {undefined}\n */\nfunction toBackground(promise) {\n  promise.catch(() => {});\n}\n\n/**\n * Invokes the callback once outside the promise chain the promise is resolved or rejected.\n * @param {Promise} promise\n * @param {Function?} callback\n * @returns {undefined}\n */\nfunction toCallback(promise, callback) {\n  promise\n    .then(\n      result => process.nextTick(() => callback(null, result)),\n      // Avoid marking the promise as rejected\n      err => process.nextTick(() => callback(err)));\n}\n\nmodule.exports = {\n  delay,\n  fromCallback,\n  fromEvent,\n  getCallback,\n  newQueryPlan,\n  optionalCallback,\n  times,\n  toBackground,\n  toCallback\n};","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst util = require('util');\nconst net = require('net');\nconst { EventEmitter } = require('events');\n\nconst errors = require('./errors');\nconst promiseUtils = require('./promise-utils');\n\n/**\n * Max int that can be accurately represented with 64-bit Number (2^53)\n * @type {number}\n * @const\n */\nconst maxInt = 9007199254740992;\n\nconst maxInt32 = 0x7fffffff;\n\nconst emptyObject = Object.freeze({});\n\nconst emptyArray = Object.freeze([]);\n\nfunction noop() {}\n\n/**\n * Forward-compatible allocation of buffer, filled with zeros.\n * @type {Function}\n */\nconst allocBuffer = Buffer.alloc || allocBufferFillDeprecated;\n\n/**\n * Forward-compatible unsafe allocation of buffer.\n * @type {Function}\n */\nconst allocBufferUnsafe = Buffer.allocUnsafe || allocBufferDeprecated;\n\n/**\n * Forward-compatible allocation of buffer to contain a string.\n * @type {Function}\n */\nconst allocBufferFromString = (Int8Array.from !== Buffer.from && Buffer.from) || allocBufferFromStringDeprecated;\n\n/**\n * Forward-compatible allocation of buffer from an array of bytes\n * @type {Function}\n */\nconst allocBufferFromArray = (Int8Array.from !== Buffer.from && Buffer.from) || allocBufferFromArrayDeprecated;\n\nfunction allocBufferDeprecated(size) {\n  // eslint-disable-next-line\n  return new Buffer(size);\n}\n\nfunction allocBufferFillDeprecated(size) {\n  const b = allocBufferDeprecated(size);\n  b.fill(0);\n  return b;\n}\n\nfunction allocBufferFromStringDeprecated(text, encoding) {\n  if (typeof text !== 'string') {\n    throw new TypeError('Expected string, obtained ' + util.inspect(text));\n  }\n  // eslint-disable-next-line\n  return new Buffer(text, encoding);\n}\n\nfunction allocBufferFromArrayDeprecated(arr) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('Expected Array, obtained ' + util.inspect(arr));\n  }\n  // eslint-disable-next-line\n  return new Buffer(arr);\n}\n\n/**\n * @returns {Function} Returns a wrapper function that invokes the underlying callback only once.\n * @param {Function} callback\n */\nfunction callbackOnce(callback) {\n  let cb = callback;\n\n  return (function wrapperCallback(err, result) {\n    cb(err, result);\n    cb = noop;\n  });\n}\n\n/**\n * Creates a copy of a buffer\n */\nfunction copyBuffer(buf) {\n  const targetBuffer = allocBufferUnsafe(buf.length);\n  buf.copy(targetBuffer);\n  return targetBuffer;\n}\n\n/**\n * Appends the original stack trace to the error after a tick of the event loop\n */\nfunction fixStack(stackTrace, error) {\n  if (stackTrace) {\n    error.stack += '\\n  (event loop)\\n' + stackTrace.substr(stackTrace.indexOf(\"\\n\") + 1);\n  }\n  return error;\n}\n\n/**\n * Uses the logEmitter to emit log events\n * @param {String} type\n * @param {String} info\n * @param [furtherInfo]\n */\nfunction log(type, info, furtherInfo) {\n  if (!this.logEmitter) {\n    if (!this.options || !this.options.logEmitter) {\n      throw new Error('Log emitter not defined');\n    }\n    this.logEmitter = this.options.logEmitter;\n  }\n  this.logEmitter('log', type, this.constructor.name, info, furtherInfo || '');\n}\n\n/**\n * Gets the sum of the length of the items of an array\n */\nfunction totalLength (arr) {\n  if (arr.length === 1) {\n    return arr[0].length;\n  }\n  let total = 0;\n  arr.forEach(function (item) {\n    let length = item.length;\n    length = length ? length : 0;\n    total += length;\n  });\n  return total;\n}\n\n/**\n * Merge the contents of two or more objects together into the first object. Similar to jQuery.extend / Object.assign.\n * The main difference between this method is that declared properties with an <code>undefined</code> value are not set\n * to the target.\n */\nfunction extend(target) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n    const keys = Object.keys(source);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const value = source[key];\n      if (value === undefined) {\n        continue;\n      }\n      target[key] = value;\n    }\n  });\n  return target;\n}\n\n/**\n * Returns a new object with the property names set to lowercase.\n */\nfunction toLowerCaseProperties(obj) {\n  const keys = Object.keys(obj);\n  const result = {};\n  for (let i = 0; i < keys.length; i++) {\n    const k = keys[i];\n    result[k.toLowerCase()] = obj[k];\n  }\n  return result;\n}\n\n/**\n * Extends the target by the most inner props of sources\n * @param {Object} target\n * @returns {Object}\n */\nfunction deepExtend(target) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    for (const prop in source) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (!source.hasOwnProperty(prop)) {\n        continue;\n      }\n      const targetProp = target[prop];\n      const targetType = (typeof targetProp);\n      //target prop is\n      // a native single type\n      // or not existent\n      // or is not an anonymous object (not class instance)\n      if (!targetProp ||\n        targetType === 'number' ||\n        targetType === 'string' ||\n        Array.isArray(targetProp) ||\n        util.isDate(targetProp) ||\n        targetProp.constructor.name !== 'Object') {\n        target[prop] = source[prop];\n      }\n      else {\n        //inner extend\n        target[prop] = deepExtend({}, targetProp, source[prop]);\n      }\n    }\n  });\n  return target;\n}\n\nfunction propCompare(propName) {\n  return function (a, b) {\n    if (a[propName] > b[propName]) {\n      return 1;\n    }\n    if (a[propName] < b[propName]) {\n      return -1;\n    }\n    return 0;\n  };\n}\n\nfunction funcCompare(name, argArray) {\n  return (function (a, b) {\n    if (typeof a[name] === 'undefined') {\n      return 0;\n    }\n    const valA = a[name].apply(a, argArray);\n    const valB = b[name].apply(b, argArray);\n    if (valA > valB) {\n      return 1;\n    }\n    if (valA < valB) {\n      return -1;\n    }\n    return 0;\n  });\n}\n/**\n * Uses the iterator protocol to go through the items of the Array\n * @param {Array} arr\n * @returns {Iterator}\n */\nfunction arrayIterator (arr) {\n  return arr[Symbol.iterator]();\n}\n\n/**\n * Convert the iterator values into an array\n * @param iterator\n * @returns {Array}\n */\nfunction iteratorToArray(iterator) {\n  const values = [];\n  let item = iterator.next();\n  while (!item.done) {\n    values.push(item.value);\n    item = iterator.next();\n  }\n  return values;\n}\n\n/**\n * Searches the specified Array for the provided key using the binary\n * search algorithm.  The Array must be sorted.\n * @param {Array} arr\n * @param key\n * @param {function} compareFunc\n * @returns {number} The position of the key in the Array, if it is found.\n * If it is not found, it returns a negative number which is the bitwise complement of the index of the first element that is larger than key.\n */\nfunction binarySearch(arr, key, compareFunc) {\n  let low = 0;\n  let high = arr.length-1;\n\n  while (low <= high) {\n    const mid = (low + high) >>> 1;\n    const midVal = arr[mid];\n    const cmp = compareFunc(midVal, key);\n    if (cmp < 0) {\n      low = mid + 1;\n    }\n    else if (cmp > 0) {\n      high = mid - 1;\n    }\n    else\n    {\n      //The key was found in the Array\n      return mid;\n    }\n  }\n  // key not found\n  return ~low;\n}\n\n/**\n * Inserts the value in the position determined by its natural order determined by the compare func\n * @param {Array} arr\n * @param item\n * @param {function} compareFunc\n */\nfunction insertSorted(arr, item, compareFunc) {\n  if (arr.length === 0) {\n    return arr.push(item);\n  }\n  let position = binarySearch(arr, item, compareFunc);\n  if (position < 0) {\n    position = ~position;\n  }\n  arr.splice(position, 0, item);\n}\n\n/**\n * Validates the provided parameter is of type function.\n * @param {Function} fn The instance to validate.\n * @param {String} [name] Name of the function to use in the error message. Defaults to 'callback'.\n * @returns {Function}\n */\nfunction validateFn(fn, name) {\n  if (typeof fn !== 'function') {\n    throw new errors.ArgumentError(util.format('%s is not a function', name || 'callback'));\n  }\n  return fn;\n}\n\n/**\n * Adapts the parameters based on the prepared metadata.\n * If the params are passed as an associative array (Object),\n * it adapts the object into an array with the same order as columns\n * @param {Array|Object} params\n * @param {Array} columns\n * @returns {Array} Returns an array of parameters.\n * @throws {Error} In case a parameter with a specific name is not defined\n */\nfunction adaptNamedParamsPrepared(params, columns) {\n  if (!params || Array.isArray(params) || !columns || columns.length === 0) {\n    // params is an array or there aren't parameters\n    return params;\n  }\n  const paramsArray = new Array(columns.length);\n  params = toLowerCaseProperties(params);\n  const keys = {};\n  for (let i = 0; i < columns.length; i++) {\n    const name = columns[i].name;\n    // eslint-disable-next-line no-prototype-builtins\n    if (!params.hasOwnProperty(name)) {\n      throw new errors.ArgumentError(util.format('Parameter \"%s\" not defined', name));\n    }\n    paramsArray[i] = params[name];\n    keys[name] = i;\n  }\n  return paramsArray;\n}\n\n/**\n * Adapts the associative-array of parameters and hints for simple statements\n * into Arrays based on the (arbitrary) position of the keys.\n * @param {Array|Object} params\n * @param {ExecutionOptions} execOptions\n * @returns {{ params: Array<{name, value}>, namedParameters: boolean, keyIndexes: object }} Returns an array of\n * parameters and the keys as an associative array.\n */\nfunction adaptNamedParamsWithHints(params, execOptions) {\n  if (!params || Array.isArray(params)) {\n    //The parameters is an Array or there isn't parameter\n    return { params: params, namedParameters: false, keyIndexes: null };\n  }\n\n  const keys = Object.keys(params);\n  const paramsArray = new Array(keys.length);\n  const hints = new Array(keys.length);\n  const userHints = execOptions.getHints() || emptyObject;\n  const keyIndexes = {};\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    // As lower cased identifiers\n    paramsArray[i] = { name: key.toLowerCase(), value: params[key]};\n    hints[i] = userHints[key];\n    keyIndexes[key] = i;\n  }\n\n  execOptions.setHints(hints);\n\n  return { params: paramsArray, namedParameters: true, keyIndexes };\n}\n\n/**\n * Returns a string with a value repeated n times\n * @param {String} val\n * @param {Number} times\n * @returns {String}\n */\nfunction stringRepeat(val, times) {\n  if (!times || times < 0) {\n    return null;\n  }\n  if (times === 1) {\n    return val;\n  }\n  return new Array(times + 1).join(val);\n}\n\n/**\n * Returns an array containing the values of the Object, similar to Object.values().\n * If obj is null or undefined, it will return an empty array.\n * @param {Object} obj\n * @returns {Array}\n */\nfunction objectValues(obj) {\n  if (!obj) {\n    return emptyArray;\n  }\n  const keys = Object.keys(obj);\n  const values = new Array(keys.length);\n  for (let i = 0; i < keys.length; i++) {\n    values[i] = obj[keys[i]];\n  }\n  return values;\n}\n\n/**\n * Wraps the callback-based method. When no originalCallback is not defined, it returns a Promise.\n * @param {ClientOptions} options\n * @param {Function} originalCallback\n * @param {Function} handler\n * @returns {Promise|undefined}\n */\nfunction promiseWrapper(options, originalCallback, handler) {\n  if (typeof originalCallback === 'function') {\n    // Callback-based invocation\n    handler.call(this, originalCallback);\n    return undefined;\n  }\n  const factory = options.promiseFactory || defaultPromiseFactory;\n  const self = this;\n  return factory(function handlerWrapper(callback) {\n    handler.call(self, callback);\n  });\n}\n\n/**\n * @param {Function} handler\n * @returns {Promise}\n */\nfunction defaultPromiseFactory(handler) {\n  return new Promise(function executor(resolve, reject) {\n    handler(function handlerCallback(err, result) {\n      if (err) {\n        return reject(err);\n      }\n      resolve(result);\n    });\n  });\n}\n\n/**\n * Returns the first not undefined param\n */\nfunction ifUndefined(v1, v2) {\n  return v1 !== undefined ? v1 : v2;\n}\n\n/**\n * Returns the first not undefined param\n */\nfunction ifUndefined3(v1, v2, v3) {\n  if (v1 !== undefined) {\n    return v1;\n  }\n  return v2 !== undefined ? v2 : v3;\n}\n\n/**\n * Shuffles an Array in-place.\n * @param {Array} arr\n * @returns {Array}\n * @private\n */\nfunction shuffleArray(arr) {\n  // Fisher–Yates algorithm\n  for (let i = arr.length - 1; i > 0; i--) {\n    // Math.random() has an extremely short permutation cycle length but we don't care about collisions\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n\n  return arr;\n}\n\n// Classes\n\n/**\n * Represents a unique set of values.\n * @constructor\n */\nfunction HashSet() {\n  this.length = 0;\n  this.items = {};\n}\n\n/**\n * Adds a new item to the set.\n * @param {Object} key\n * @returns {boolean} Returns true if it was added to the set; false if the key is already present.\n */\nHashSet.prototype.add = function (key) {\n  if (this.contains(key)) {\n    return false;\n  }\n  this.items[key] = true;\n  this.length++;\n  return true;\n};\n\n/**\n * @returns {boolean} Returns true if the key is present in the set.\n */\nHashSet.prototype.contains = function (key) {\n  return this.length > 0 && this.items[key] === true;\n};\n\n/**\n * Removes the item from set.\n * @param key\n * @return {boolean} Returns true if the key existed and was removed, otherwise it returns false.\n */\nHashSet.prototype.remove = function (key) {\n  if (!this.contains(key)) {\n    return false;\n  }\n  delete this.items[key];\n  this.length--;\n};\n\n/**\n * Returns an array containing the set items.\n * @returns {Array}\n */\nHashSet.prototype.toArray = function () {\n  return Object.keys(this.items);\n};\n\n/**\n * Utility class that resolves host names into addresses.\n */\nclass AddressResolver {\n\n  /**\n   * Creates a new instance of the resolver.\n   * @param {Object} options\n   * @param {String} options.nameOrIp\n   * @param {Object} [options.dns]\n   */\n  constructor(options) {\n    if (!options || !options.nameOrIp || !options.dns) {\n      throw new Error('nameOrIp and dns lib must be provided as part of the options');\n    }\n\n    this._resolve4 = util.promisify(options.dns.resolve4);\n    this._nameOrIp = options.nameOrIp;\n    this._isIp = net.isIP(options.nameOrIp);\n    this._index = 0;\n    this._addresses = null;\n    this._refreshing = null;\n  }\n\n  /**\n   * Resolves the addresses for the host name.\n   */\n  async init() {\n    if (this._isIp) {\n      return;\n    }\n\n    await this._resolve();\n  }\n\n  /**\n   * Tries to resolve the addresses for the host name.\n   */\n  async refresh() {\n    if (this._isIp) {\n      return;\n    }\n\n    if (this._refreshing) {\n      return await promiseUtils.fromEvent(this._refreshing, 'finished');\n    }\n\n    this._refreshing = new EventEmitter().setMaxListeners(0);\n\n    try {\n      await this._resolve();\n    } catch (err) {\n      // Ignore the possible resolution error\n    }\n\n    this._refreshing.emit('finished');\n    this._refreshing = null;\n  }\n\n  async _resolve() {\n    const arr = await this._resolve4(this._nameOrIp);\n\n    if (!arr || arr.length === 0) {\n      throw new Error(`${this._nameOrIp} could not be resolved`);\n    }\n\n    this._addresses = arr;\n  }\n\n  /**\n   * Returns resolved ips in a round-robin fashion.\n   */\n  getIp() {\n    if (this._isIp) {\n      return this._nameOrIp;\n    }\n\n    const item = this._addresses[this._index % this._addresses.length];\n    this._index = (this._index !== maxInt32) ? (this._index + 1) : 0;\n\n    return item;\n  }\n}\n\n/**\n * @param {Array} arr\n * @param {Function} fn\n * @param {Function} [callback]\n */\nfunction each(arr, fn, callback) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('First parameter is not an Array');\n  }\n  callback = callback || noop;\n  const length = arr.length;\n  if (length === 0) {\n    return callback();\n  }\n  let completed = 0;\n  for (let i = 0; i < length; i++) {\n    fn(arr[i], next);\n  }\n  function next(err) {\n    if (err) {\n      const cb = callback;\n      callback = noop;\n      cb(err);\n      return;\n    }\n    if (++completed !== length) {\n      return;\n    }\n    callback();\n  }\n}\n\n/**\n * @param {Array} arr\n * @param {Function} fn\n * @param {Function} [callback]\n */\nfunction eachSeries(arr, fn, callback) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('First parameter is not an Array');\n  }\n  callback = callback || noop;\n  const length = arr.length;\n  if (length === 0) {\n    return callback();\n  }\n  let sync;\n  let index = 1;\n  fn(arr[0], next);\n  if (sync === undefined) {\n    sync = false;\n  }\n\n  function next(err) {\n    if (err) {\n      return callback(err);\n    }\n    if (index >= length) {\n      return callback();\n    }\n    if (sync === undefined) {\n      sync = true;\n    }\n    if (sync) {\n      return process.nextTick(function () {\n        fn(arr[index++], next);\n      });\n    }\n    fn(arr[index++], next);\n  }\n}\n\n/**\n * @param {Array} arr\n * @param {Function} fn\n * @param {Function} [callback]\n */\nfunction forEachOf(arr, fn, callback) {\n  return mapEach(arr, fn, true, callback);\n}\n\n/**\n * @param {Array} arr\n * @param {Function} fn\n * @param {Function} [callback]\n */\nfunction map(arr, fn, callback) {\n  return mapEach(arr, fn, false, callback);\n}\n\nfunction mapEach(arr, fn, useIndex, callback) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('First parameter must be an Array');\n  }\n  callback = callback || noop;\n  const length = arr.length;\n  if (length === 0) {\n    return callback(null, []);\n  }\n  const result = new Array(length);\n  let completed = 0;\n  const invoke = useIndex ? invokeWithIndex : invokeWithoutIndex;\n  for (let i = 0; i < length; i++) {\n    invoke(i);\n  }\n\n  function invokeWithoutIndex(i) {\n    fn(arr[i], function mapItemCallback(err, transformed) {\n      result[i] = transformed;\n      next(err);\n    });\n  }\n\n  function invokeWithIndex(i) {\n    fn(arr[i], i, function mapItemCallback(err, transformed) {\n      result[i] = transformed;\n      next(err);\n    });\n  }\n\n  function next(err) {\n    if (err) {\n      const cb = callback;\n      callback = noop;\n      cb(err);\n      return;\n    }\n    if (++completed !== length) {\n      return;\n    }\n    callback(null, result);\n  }\n}\n\n/**\n * @param {Array} arr\n * @param {Function} fn\n * @param {Function} [callback]\n */\nfunction mapSeries(arr, fn, callback) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('First parameter must be an Array');\n  }\n  callback = callback || noop;\n  const length = arr.length;\n  if (length === 0) {\n    return callback(null, []);\n  }\n  const result = new Array(length);\n  let index = 0;\n  let sync;\n  invoke(0);\n  if (sync === undefined) {\n    sync = false;\n  }\n\n  function invoke(i) {\n    fn(arr[i], function mapItemCallback(err, transformed) {\n      result[i] = transformed;\n      next(err);\n    });\n  }\n\n  function next(err) {\n    if (err) {\n      return callback(err);\n    }\n    if (++index === length) {\n      return callback(null, result);\n    }\n    if (sync === undefined) {\n      sync = true;\n    }\n    const i = index;\n    if (sync) {\n      return process.nextTick(function () {\n        invoke(i);\n      });\n    }\n    invoke(index);\n  }\n}\n\n/**\n * @param {Array.<Function>} arr\n * @param {Function} [callback]\n */\nfunction parallel(arr, callback) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('First parameter must be an Array');\n  }\n  callback = callback || noop;\n  const length = arr.length;\n  let completed = 0;\n  for (let i = 0; i < length; i++) {\n    arr[i](next);\n  }\n  function next(err) {\n    if (err) {\n      const cb = callback;\n      callback = noop;\n      return cb(err);\n    }\n    if (++completed !== length) {\n      return;\n    }\n    callback();\n  }\n}\n\n/**\n * Similar to async.series(), but instead accumulating the result in an Array, it callbacks with the result of the last\n * function in the array.\n * @param {Array.<Function>} arr\n * @param {Function} [callback]\n */\nfunction series(arr, callback) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('First parameter must be an Array');\n  }\n  callback = callback || noop;\n  let index = 0;\n  let sync;\n  next();\n  function next(err, result) {\n    if (err) {\n      return callback(err);\n    }\n    if (index === arr.length) {\n      return callback(null, result);\n    }\n    if (sync) {\n      return process.nextTick(function () {\n        sync = true;\n        arr[index++](next);\n        sync = false;\n      });\n    }\n    sync = true;\n    arr[index++](next);\n    sync = false;\n  }\n}\n\n/**\n * @param {Number} count\n * @param {Function} iteratorFunc\n * @param {Function} [callback]\n */\nfunction times(count, iteratorFunc, callback) {\n  callback = callback || noop;\n  count = +count;\n  if (isNaN(count) || count === 0) {\n    return callback();\n  }\n  let completed = 0;\n  for (let i = 0; i < count; i++) {\n    iteratorFunc(i, next);\n  }\n  function next(err) {\n    if (err) {\n      const cb = callback;\n      callback = noop;\n      return cb(err);\n    }\n    if (++completed !== count) {\n      return;\n    }\n    callback();\n  }\n}\n\n/**\n * @param {Number} count\n * @param {Number} limit\n * @param {Function} iteratorFunc\n * @param {Function} [callback]\n */\nfunction timesLimit(count, limit, iteratorFunc, callback) {\n  let sync = undefined;\n  callback = callback || noop;\n  limit = Math.min(limit, count);\n  let index = limit - 1;\n  let i;\n  let completed = 0;\n  for (i = 0; i < limit; i++) {\n    iteratorFunc(i, next);\n  }\n  i = -1;\n  function next(err) {\n    if (err) {\n      const cb = callback;\n      callback = noop;\n      cb(err);\n      return;\n    }\n    if (++completed === count) {\n      return callback();\n    }\n    index++;\n    if (index >= count) {\n      return;\n    }\n    if (sync === undefined) {\n      sync = (i >= 0);\n    }\n    if (sync) {\n      const captureIndex = index;\n      return process.nextTick(function () {\n        iteratorFunc(captureIndex, next);\n      });\n    }\n    iteratorFunc(index, next);\n  }\n}\n\n/**\n * @param {Number} count\n * @param {Function} iteratorFunction\n * @param {Function} callback\n */\nfunction timesSeries(count, iteratorFunction, callback) {\n  count = +count;\n  if (isNaN(count) || count < 1) {\n    return callback();\n  }\n  let index = 1;\n  let sync;\n  iteratorFunction(0, next);\n  if (sync === undefined) {\n    sync = false;\n  }\n  function next(err) {\n    if (err) {\n      return callback(err);\n    }\n    if (index === count) {\n      return callback();\n    }\n    if (sync === undefined) {\n      sync = true;\n    }\n    const i = index++;\n    if (sync) {\n      //Prevent \"Maximum call stack size exceeded\"\n      return process.nextTick(function () {\n        iteratorFunction(i, next);\n      });\n    }\n    //do a sync call as the callback is going to call on a future tick\n    iteratorFunction(i, next);\n  }\n}\n\n/**\n * @param {Function} condition\n * @param {Function} fn\n * @param {Function} callback\n */\nfunction whilst(condition, fn, callback) {\n  let sync = 0;\n  next();\n  function next(err) {\n    if (err) {\n      return callback(err);\n    }\n    if (!condition()) {\n      return callback();\n    }\n    if (sync === 0) {\n      sync = 1;\n      fn(function (err) {\n        if (sync === 1) {\n          //sync function\n          sync = 4;\n        }\n        next(err);\n      });\n      if (sync === 1) {\n        //async function\n        sync = 2;\n      }\n      return;\n    }\n    if (sync === 4) {\n      //Prevent \"Maximum call stack size exceeded\"\n      return process.nextTick(function () {\n        fn(next);\n      });\n    }\n    //do a sync call as the callback is going to call on a future tick\n    fn(next);\n  }\n}\n\nexports.adaptNamedParamsPrepared = adaptNamedParamsPrepared;\nexports.adaptNamedParamsWithHints = adaptNamedParamsWithHints;\nexports.AddressResolver = AddressResolver;\nexports.allocBuffer = allocBuffer;\nexports.allocBufferUnsafe = allocBufferUnsafe;\nexports.allocBufferFromArray = allocBufferFromArray;\nexports.allocBufferFromString = allocBufferFromString;\nexports.arrayIterator = arrayIterator;\nexports.binarySearch = binarySearch;\nexports.callbackOnce = callbackOnce;\nexports.copyBuffer = copyBuffer;\nexports.deepExtend = deepExtend;\nexports.each = each;\nexports.eachSeries = eachSeries;\n/** @const */\nexports.emptyArray = Object.freeze([]);\n/** @const */\nexports.emptyObject = emptyObject;\nexports.extend = extend;\nexports.fixStack = fixStack;\nexports.forEachOf = forEachOf;\nexports.funcCompare = funcCompare;\nexports.ifUndefined = ifUndefined;\nexports.ifUndefined3 = ifUndefined3;\nexports.insertSorted = insertSorted;\nexports.iteratorToArray = iteratorToArray;\nexports.log = log;\nexports.map = map;\nexports.mapSeries = mapSeries;\nexports.maxInt = maxInt;\nexports.noop = noop;\nexports.objectValues = objectValues;\nexports.parallel = parallel;\nexports.promiseWrapper = promiseWrapper;\nexports.propCompare = propCompare;\nexports.series = series;\nexports.shuffleArray = shuffleArray;\nexports.stringRepeat = stringRepeat;\nexports.times = times;\nexports.timesLimit = timesLimit;\nexports.timesSeries = timesSeries;\nexports.totalLength = totalLength;\nexports.validateFn = validateFn;\nexports.whilst = whilst;\nexports.HashSet = HashSet;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst dns = require('dns');\nconst util = require('util');\nconst utils = require('../utils');\n/** @module policies/addressResolution */\n/**\n * @class\n * @classdesc\n * Translates IP addresses received from Cassandra nodes into locally queryable\n * addresses.\n * <p>\n * The driver auto-detects new Cassandra nodes added to the cluster through server\n * side pushed notifications and through checking the system tables. For each\n * node, the address received will correspond to the address set as\n * <code>rpc_address</code> in the node yaml file. In most case, this is the correct\n * address to use by the driver and that is what is used by default. However,\n * sometimes the addresses received through this mechanism will either not be\n * reachable directly by the driver or should not be the preferred address to use\n * to reach the node (for instance, the <code>rpc_address</code> set on Cassandra nodes\n * might be a private IP, but some clients  may have to use a public IP, or\n * pass by a router to reach that node). This interface allows to deal with\n * such cases, by allowing to translate an address as sent by a Cassandra node\n * to another address to be used by the driver for connection.\n * <p>\n * Please note that the contact points addresses provided while creating the\n * {@link Client} instance are not \"translated\", only IP address retrieve from or sent\n * by Cassandra nodes to the driver are.\n * @constructor\n */\nfunction AddressTranslator() {\n\n}\n\n/**\n * Translates a Cassandra <code>rpc_address</code> to another address if necessary.\n * @param {String} address the address of a node as returned by Cassandra.\n * <p>\n * Note that if the <code>rpc_address</code> of a node has been configured to <code>0.0.0.0</code>\n * server side, then the provided address will be the node <code>listen_address</code>,\n * *not* <code>0.0.0.0</code>.\n * </p>\n * @param {Number} port The port number, as specified in the [protocolOptions]{@link ClientOptions} at Client instance creation (9042 by default).\n * @param {Function} callback Callback to invoke with endpoint as first parameter.\n * The endpoint is an string composed of the IP address and the port number in the format <code>ipAddress:port</code>.\n */\nAddressTranslator.prototype.translate = function (address, port, callback) {\n  callback(address + ':' + port);\n};\n\n/**\n * @class\n * @classdesc\n * {@link AddressTranslator} implementation for multi-region EC2 deployments <strong>where clients are also deployed in EC2</strong>.\n * <p>\n * Its distinctive feature is that it translates addresses according to the location of the Cassandra host:\n * </p>\n * <ul>\n *  <li>addresses in different EC2 regions (than the client) are unchanged</li>\n *  <li>addresses in the same EC2 region are <strong>translated to private IPs</strong></li>\n * </ul>\n * <p>\n * This optimizes network costs, because Amazon charges more for communication over public IPs.\n * </p>\n * @constructor\n */\nfunction EC2MultiRegionTranslator() {\n\n}\n\nutil.inherits(EC2MultiRegionTranslator, AddressTranslator);\n\n/**\n * Addresses in the same EC2 region are translated to private IPs and addresses in\n * different EC2 regions (than the client) are unchanged\n */\nEC2MultiRegionTranslator.prototype.translate = function (address, port, callback) {\n  let newAddress = address;\n  const self = this;\n  let name;\n  utils.series([\n    function resolve(next) {\n      dns.reverse(address, function (err, hostNames) {\n        if (err) {\n          return next(err);\n        }\n        if (!hostNames) {\n          return next();\n        }\n        name = hostNames[0];\n        next();\n      });\n    },\n    function lookup(next) {\n      if (!name) {\n        return next();\n      }\n      dns.lookup(name, function (err, lookupAddress) {\n        if (err) {\n          return next(err);\n        }\n        newAddress = lookupAddress;\n        next();\n      });\n    }], function (err) {\n    if (err) {\n      //there was an issue while doing dns resolution\n      self.logError(address, err);\n    }\n    callback(newAddress + ':' + port);\n  });\n};\n\n/**\n * Log method called to log errors that occurred while performing dns resolution.\n * You can assign your own method to the class instance to do proper logging.\n * @param {String} address\n * @param {Error} err\n */\nEC2MultiRegionTranslator.prototype.logError = function (address, err) {\n  //Do nothing by default\n};\n\nexports.AddressTranslator = AddressTranslator;\nexports.EC2MultiRegionTranslator = EC2MultiRegionTranslator;","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license Long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/Long.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\r\n\r\n})(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         * @expose\r\n         */\r\n        this.low = low|0;\r\n\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         * @expose\r\n         */\r\n        this.high = high|0;\r\n\r\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     * @private\r\n     */\r\n    Long.__isLong__;\r\n\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.isLong = function isLong(obj) {\r\n        return (obj && obj[\"__isLong__\"]) === true;\r\n    };\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     * @expose\r\n     */\r\n    Long.fromInt = function fromInt(value, unsigned) {\r\n        var obj, cachedObj;\r\n        if (!unsigned) {\r\n            value = value | 0;\r\n            if (-128 <= value && value < 128) {\r\n                cachedObj = INT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = new Long(value, value < 0 ? -1 : 0, false);\r\n            if (-128 <= value && value < 128)\r\n                INT_CACHE[value] = obj;\r\n            return obj;\r\n        } else {\r\n            value = value >>> 0;\r\n            if (0 <= value && value < 256) {\r\n                cachedObj = UINT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = new Long(value, (value | 0) < 0 ? -1 : 0, true);\r\n            if (0 <= value && value < 256)\r\n                UINT_CACHE[value] = obj;\r\n            return obj;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     * @expose\r\n     */\r\n    Long.fromNumber = function fromNumber(value, unsigned) {\r\n        unsigned = !!unsigned;\r\n        if (isNaN(value) || !isFinite(value))\r\n            return Long.ZERO;\r\n        if (!unsigned && value <= -TWO_PWR_63_DBL)\r\n            return Long.MIN_VALUE;\r\n        if (!unsigned && value + 1 >= TWO_PWR_63_DBL)\r\n            return Long.MAX_VALUE;\r\n        if (unsigned && value >= TWO_PWR_64_DBL)\r\n            return Long.MAX_UNSIGNED_VALUE;\r\n        if (value < 0)\r\n            return Long.fromNumber(-value, unsigned).negate();\r\n        return new Long((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     * @expose\r\n     */\r\n    Long.fromBits = function fromBits(lowBits, highBits, unsigned) {\r\n        return new Long(lowBits, highBits, unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     * @expose\r\n     */\r\n    Long.fromString = function fromString(str, unsigned, radix) {\r\n        if (str.length === 0)\r\n            throw Error('number format error: empty string');\r\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n            return Long.ZERO;\r\n        if (typeof unsigned === 'number') // For goog.math.long compatibility\r\n            radix = unsigned,\r\n            unsigned = false;\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw Error('radix out of range: ' + radix);\r\n\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0)\r\n            throw Error('number format error: interior \"-\" character: ' + str);\r\n        else if (p === 0)\r\n            return Long.fromString(str.substring(1), unsigned, radix).negate();\r\n\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = Long.fromNumber(Math.pow(radix, 8));\r\n\r\n        var result = Long.ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i);\r\n            var value = parseInt(str.substring(i, i + size), radix);\r\n            if (size < 8) {\r\n                var power = Long.fromNumber(Math.pow(radix, size));\r\n                result = result.multiply(power).add(Long.fromNumber(value));\r\n            } else {\r\n                result = result.multiply(radixToPower);\r\n                result = result.add(Long.fromNumber(value));\r\n            }\r\n        }\r\n        result.unsigned = unsigned;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    Long.fromValue = function fromValue(val) {\r\n        if (val /* is compatible */ instanceof Long)\r\n            return val;\r\n        if (typeof val === 'number')\r\n            return Long.fromNumber(val);\r\n        if (typeof val === 'string')\r\n            return Long.fromString(val);\r\n        // Throws for non-objects, converts non-instanceof Long:\r\n        return new Long(val.low, val.high, val.unsigned);\r\n    };\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = Long.fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.ZERO = Long.fromInt(0);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.UZERO = Long.fromInt(0, true);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.ONE = Long.fromInt(1);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.UONE = Long.fromInt(1, true);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.NEG_ONE = Long.fromInt(-1);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.MAX_VALUE = Long.fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = Long.fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.MIN_VALUE = Long.fromBits(0, 0x80000000|0, false);\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    Long.prototype.toInt = function toInt() {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    Long.prototype.toNumber = function toNumber() {\r\n        if (this.unsigned) {\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        }\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     * @expose\r\n     */\r\n    Long.prototype.toString = function toString(radix) {\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix out of range: ' + radix);\r\n        if (this.isZero())\r\n            return '0';\r\n        var rem;\r\n        if (this.isNegative()) { // Unsigned Longs are never negative\r\n            if (this.equals(Long.MIN_VALUE)) {\r\n                // We need to change the Long value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixLong = Long.fromNumber(radix);\r\n                var div = this.divide(radixLong);\r\n                rem = div.multiply(radixLong).subtract(this);\r\n                return div.toString(radix) + rem.toInt().toString(radix);\r\n            } else\r\n                return '-' + this.negate().toString(radix);\r\n        }\r\n\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = Long.fromNumber(Math.pow(radix, 6), this.unsigned);\r\n        rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.divide(radixToPower),\r\n                intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0,\r\n                digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     * @expose\r\n     */\r\n    Long.prototype.getHighBits = function getHighBits() {\r\n        return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     * @expose\r\n     */\r\n    Long.prototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n        return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     * @expose\r\n     */\r\n    Long.prototype.getLowBits = function getLowBits() {\r\n        return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     * @expose\r\n     */\r\n    Long.prototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n        return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    Long.prototype.getNumBitsAbs = function getNumBitsAbs() {\r\n        if (this.isNegative()) // Unsigned Longs are never negative\r\n            return this.equals(Long.MIN_VALUE) ? 64 : this.negate().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.isZero = function isZero() {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.isNegative = function isNegative() {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.isPositive = function isPositive() {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.isOdd = function isOdd() {\r\n        return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.isEven = function isEven() {\r\n        return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.equals = function equals(other) {\r\n        if (!Long.isLong(other))\r\n            other = Long.fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.eq = Long.prototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.notEquals = function notEquals(other) {\r\n        return !this.equals(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.neq = Long.prototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.lessThan = function lessThan(other) {\r\n        return this.compare(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.lt = Long.prototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n        return this.compare(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.lte = Long.prototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.greaterThan = function greaterThan(other) {\r\n        return this.compare(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.gt = Long.prototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n        return this.compare(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.gte = Long.prototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     * @expose\r\n     */\r\n    Long.prototype.compare = function compare(other) {\r\n        if (!Long.isLong(other))\r\n            other = Long.fromValue(other);\r\n        if (this.equals(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(),\r\n            otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        // At this point the sign bits are the same\r\n        if (!this.unsigned)\r\n            return this.subtract(other).isNegative() ? -1 : 1;\r\n        // Both are positive if at least one is unsigned\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     * @expose\r\n     */\r\n    Long.prototype.negate = function negate() {\r\n        if (!this.unsigned && this.equals(Long.MIN_VALUE))\r\n            return Long.MIN_VALUE;\r\n        return this.not().add(Long.ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     * @expose\r\n     */\r\n    Long.prototype.neg = Long.prototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     * @expose\r\n     */\r\n    Long.prototype.add = function add(addend) {\r\n        if (!Long.isLong(addend))\r\n            addend = Long.fromValue(addend);\r\n\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     * @expose\r\n     */\r\n    Long.prototype.subtract = function subtract(subtrahend) {\r\n        if (!Long.isLong(subtrahend))\r\n            subtrahend = Long.fromValue(subtrahend);\r\n        return this.add(subtrahend.negate());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     * @expose\r\n     */\r\n    Long.prototype.sub = Long.prototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     * @expose\r\n     */\r\n    Long.prototype.multiply = function multiply(multiplier) {\r\n        if (this.isZero())\r\n            return Long.ZERO;\r\n        if (!Long.isLong(multiplier))\r\n            multiplier = Long.fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return Long.ZERO;\r\n        if (this.equals(Long.MIN_VALUE))\r\n            return multiplier.isOdd() ? Long.MIN_VALUE : Long.ZERO;\r\n        if (multiplier.equals(Long.MIN_VALUE))\r\n            return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\r\n\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.negate().multiply(multiplier.negate());\r\n            else\r\n                return this.negate().multiply(multiplier).negate();\r\n        } else if (multiplier.isNegative())\r\n            return this.multiply(multiplier.negate()).negate();\r\n\r\n        // If both longs are small, use float multiplication\r\n        if (this.lessThan(TWO_PWR_24) && multiplier.lessThan(TWO_PWR_24))\r\n            return Long.fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     * @expose\r\n     */\r\n    Long.prototype.mul = Long.prototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     * @expose\r\n     */\r\n    Long.prototype.divide = function divide(divisor) {\r\n        if (!Long.isLong(divisor))\r\n            divisor = Long.fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw(new Error('division by zero'));\r\n        if (this.isZero())\r\n            return this.unsigned ? Long.UZERO : Long.ZERO;\r\n        var approx, rem, res;\r\n        if (this.equals(Long.MIN_VALUE)) {\r\n            if (divisor.equals(Long.ONE) || divisor.equals(Long.NEG_ONE))\r\n                return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.equals(Long.MIN_VALUE))\r\n                return Long.ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shiftRight(1);\r\n                approx = halfThis.divide(divisor).shiftLeft(1);\r\n                if (approx.equals(Long.ZERO)) {\r\n                    return divisor.isNegative() ? Long.ONE : Long.NEG_ONE;\r\n                } else {\r\n                    rem = this.subtract(divisor.multiply(approx));\r\n                    res = approx.add(rem.divide(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.equals(Long.MIN_VALUE))\r\n            return this.unsigned ? Long.UZERO : Long.ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.negate().divide(divisor.negate());\r\n            return this.negate().divide(divisor).negate();\r\n        } else if (divisor.isNegative())\r\n            return this.divide(divisor.negate()).negate();\r\n\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        res = Long.ZERO;\r\n        rem = this;\r\n        while (rem.greaterThanOrEqual(divisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n                delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48),\r\n\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n                approxRes = Long.fromNumber(approx),\r\n                approxRem = approxRes.multiply(divisor);\r\n            while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\r\n                approx -= delta;\r\n                approxRes = Long.fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.multiply(divisor);\r\n            }\r\n\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero())\r\n                approxRes = Long.ONE;\r\n\r\n            res = res.add(approxRes);\r\n            rem = rem.subtract(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     * @expose\r\n     */\r\n    Long.prototype.div = Long.prototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     * @expose\r\n     */\r\n    Long.prototype.modulo = function modulo(divisor) {\r\n        if (!Long.isLong(divisor))\r\n            divisor = Long.fromValue(divisor);\r\n        return this.subtract(this.divide(divisor).multiply(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     * @expose\r\n     */\r\n    Long.prototype.mod = Long.prototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    Long.prototype.not = function not() {\r\n        return Long.fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    Long.prototype.and = function and(other) {\r\n        if (!Long.isLong(other))\r\n            other = Long.fromValue(other);\r\n        return Long.fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    Long.prototype.or = function or(other) {\r\n        if (!Long.isLong(other))\r\n            other = Long.fromValue(other);\r\n        return Long.fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    Long.prototype.xor = function xor(other) {\r\n        if (!Long.isLong(other))\r\n            other = Long.fromValue(other);\r\n        return Long.fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    Long.prototype.shiftLeft = function shiftLeft(numBits) {\r\n        if (Long.isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return Long.fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return Long.fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    Long.prototype.shl = Long.prototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    Long.prototype.shiftRight = function shiftRight(numBits) {\r\n        if (Long.isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return Long.fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return Long.fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    Long.prototype.shr = Long.prototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    Long.prototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n        if (Long.isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits &= 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            } else if (numBits === 32)\r\n                return Long.fromBits(high, 0, this.unsigned);\r\n            else\r\n                return Long.fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    Long.prototype.shru = Long.prototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     * @expose\r\n     */\r\n    Long.prototype.toSigned = function toSigned() {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return new Long(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     * @expose\r\n     */\r\n    Long.prototype.toUnsigned = function toUnsigned() {\r\n        if (this.unsigned)\r\n            return this;\r\n        return new Long(this.low, this.high, true);\r\n    };\r\n\r\n    return Long;\r\n});\r\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst crypto = require('crypto');\nconst utils = require('../utils');\n\n/** @module types */\n\n/**\n * Creates a new instance of Uuid based on a Buffer\n * @class\n * @classdesc Represents an immutable universally unique identifier (UUID). A UUID represents a 128-bit value.\n * @param {Buffer} buffer The 16-length buffer.\n * @constructor\n */\nfunction Uuid(buffer) {\n  if (!buffer || buffer.length !== 16) {\n    throw new Error('You must provide a buffer containing 16 bytes');\n  }\n  this.buffer = buffer;\n}\n\n/**\n * Parses a string representation of a Uuid\n * @param {String} value\n * @returns {Uuid}\n */\nUuid.fromString = function (value) {\n  //36 chars: 32 + 4 hyphens\n  if (typeof value !== 'string' || value.length !== 36) {\n    throw new Error('Invalid string representation of Uuid, it should be in the 00000000-0000-0000-0000-000000000000');\n  }\n  return new Uuid(utils.allocBufferFromString(value.replace(/-/g, ''), 'hex'));\n};\n\n/**\n * Creates a new random (version 4) Uuid.\n * @param {function} [callback] Optional callback to be invoked with the error as first parameter and the created Uuid as\n * second parameter.\n * @returns {Uuid}\n */\nUuid.random = function (callback) {\n  if (callback) {\n    getRandomBytes(function(err, buffer) {\n      if (err) {\n        return callback(err);\n      }\n      return callback(null, createUuidFromBuffer(buffer));\n    });\n  } else {\n    const buffer = getRandomBytes();\n    return createUuidFromBuffer(buffer);\n  }\n};\n\n/**\n * Gets the bytes representation of a Uuid\n * @returns {Buffer}\n */\nUuid.prototype.getBuffer = function () {\n  return this.buffer;\n};\n/**\n * Compares this object to the specified object.\n * The result is true if and only if the argument is not null, is a UUID object, and contains the same value, bit for bit, as this UUID.\n * @param {Uuid} other The other value to test for equality.\n */\nUuid.prototype.equals = function (other) {\n  return other instanceof Uuid && this.buffer.equals(other.buffer);\n};\n\n/**\n * Returns a string representation of the value of this Uuid instance.\n * 32 hex separated by hyphens, in the form of 00000000-0000-0000-0000-000000000000.\n * @returns {String}\n */\nUuid.prototype.toString = function () {\n  //32 hex representation of the Buffer\n  const hexValue = getHex(this);\n  return (\n    hexValue.substr(0, 8) + '-' +\n    hexValue.substr(8, 4) + '-' +\n    hexValue.substr(12, 4) + '-' +\n    hexValue.substr(16, 4) + '-' +\n    hexValue.substr(20, 12));\n};\n\n/**\n * Provide the name of the constructor and the string representation\n * @returns {string}\n */\nUuid.prototype.inspect = function () {\n  return this.constructor.name + ': ' + this.toString();\n};\n\n/**\n * Returns the string representation.\n * Method used by the native JSON.stringify() to serialize this instance.\n */\nUuid.prototype.toJSON = function () {\n  return this.toString();\n};\n\n\n/**\n * Returns new Uuid\n * @private\n * @returns {Uuid}\n */\nfunction createUuidFromBuffer (buffer) {\n  //clear the version\n  buffer[6] &= 0x0f;\n  //set the version 4\n  buffer[6] |= 0x40;\n  //clear the variant\n  buffer[8] &= 0x3f;\n  //set the IETF variant\n  buffer[8] |= 0x80;\n  return new Uuid(buffer);\n}\n\n/**\n * @private\n * @returns {String} 32 hex representation of the instance, without separators\n */\nfunction getHex (uuid) {\n  return uuid.buffer.toString('hex');\n}\n\n/**\n * Gets a crypto generated 16 bytes\n * @private\n * @returns {Buffer}\n */\nfunction getRandomBytes (cb) {\n  return crypto.randomBytes(16, cb);\n}\n\nmodule.exports = Uuid;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\nconst crypto = require('crypto');\nconst Long = require('long');\n\nconst Uuid = require('./uuid');\nconst utils = require('../utils');\n\n/** @module types */\n/**\n * Oct 15, 1582 in milliseconds since unix epoch\n * @const\n * @private\n */\nconst _unixToGregorian = 12219292800000;\n/**\n * 10,000 ticks in a millisecond\n * @const\n * @private\n */\nconst _ticksInMs = 10000;\n\nconst minNodeId = utils.allocBufferFromString('808080808080', 'hex');\nconst minClockId = utils.allocBufferFromString('8080', 'hex');\nconst maxNodeId = utils.allocBufferFromString('7f7f7f7f7f7f', 'hex');\nconst maxClockId = utils.allocBufferFromString('7f7f', 'hex');\n\n/**\n * Counter used to generate up to 10000 different timeuuid values with the same Date\n * @private\n * @type {number}\n */\nlet _ticks = 0;\n/**\n * Counter used to generate ticks for the current time\n * @private\n * @type {number}\n */\nlet _ticksForCurrentTime = 0;\n/**\n * Remember the last time when a ticks for the current time so that it can be reset\n * @private\n * @type {number}\n */\nlet _lastTimestamp = 0;\n\n/**\n * Creates a new instance of Uuid based on the parameters provided according to rfc4122.\n * If any of the arguments is not provided, it will be randomly generated, except for the date that will use the current\n * date.\n * <p>\n *   Note that when nodeId and/or clockId portions are not provided, the constructor will generate them using\n *   <code>crypto.randomBytes()</code>. As it's possible that <code>crypto.randomBytes()</code> might block, it's\n *   recommended that you use the callback-based version of the static methods <code>fromDate()</code> or\n *   <code>now()</code> in that case.\n * </p>\n * @class\n * @classdesc Represents an immutable version 1 universally unique identifier (UUID). A UUID represents a 128-bit value.\n * <p>Usage: <code>TimeUuid.now()</code></p>\n * @extends module:types~Uuid\n * @param {Date} [value] The datetime for the instance, if not provided, it will use the current Date.\n * @param {Number} [ticks] A number from 0 to 10000 representing the 100-nanoseconds units for this instance to fill in the information not available in the Date,\n * as Ecmascript Dates have only milliseconds precision.\n * @param {String|Buffer} [nodeId] A 6-length Buffer or string of 6 ascii characters representing the node identifier, ie: 'host01'.\n * @param {String|Buffer} [clockId] A 2-length Buffer or string of 6 ascii characters representing the clock identifier.\n * @constructor\n */\nfunction TimeUuid(value, ticks, nodeId, clockId) {\n  let buffer;\n  if (value instanceof Buffer) {\n    if (value.length !== 16) {\n      throw new Error('Buffer for v1 uuid not valid');\n    }\n    buffer = value;\n  }\n  else {\n    buffer = generateBuffer(value, ticks, nodeId, clockId);\n  }\n  Uuid.call(this, buffer);\n}\n\nutil.inherits(TimeUuid, Uuid);\n\n/**\n * Generates a TimeUuid instance based on the Date provided using random node and clock values.\n * @param {Date} date Date to generate the v1 uuid.\n * @param {Number} [ticks] A number from 0 to 10000 representing the 100-nanoseconds units for this instance to fill in the information not available in the Date,\n * as Ecmascript Dates have only milliseconds precision.\n * @param {String|Buffer} [nodeId] A 6-length Buffer or string of 6 ascii characters representing the node identifier, ie: 'host01'.\n * If not provided, a random nodeId will be generated.\n * @param {String|Buffer} [clockId] A 2-length Buffer or string of 6 ascii characters representing the clock identifier.\n * If not provided a random clockId will be generated.\n * @param {Function} [callback] An optional callback to be invoked with the error as first parameter and the created\n * <code>TimeUuid</code> as second parameter. When a callback is provided, the random portions of the\n * <code>TimeUuid</code> instance are created asynchronously.\n * <p>\n *   When nodeId and/or clockId portions are not provided, this method will generate them using\n *   <code>crypto.randomBytes()</code>. As it's possible that <code>crypto.randomBytes()</code> might block, it's\n *   recommended that you use the callback-based version of this method in that case.\n * </p>\n * @example <caption>Generate a TimeUuid from a ECMAScript Date</caption>\n * const timeuuid = TimeUuid.fromDate(new Date());\n * @example <caption>Generate a TimeUuid from a Date with ticks portion</caption>\n * const timeuuid = TimeUuid.fromDate(new Date(), 1203);\n * @example <caption>Generate a TimeUuid from a Date without any random portion</caption>\n * const timeuuid = TimeUuid.fromDate(new Date(), 1203, 'host01', '02');\n * @example <caption>Generate a TimeUuid from a Date with random node and clock identifiers</caption>\n * TimeUuid.fromDate(new Date(), 1203, function (err, timeuuid) {\n *   // do something with the generated timeuuid\n * });\n */\nTimeUuid.fromDate = function (date, ticks, nodeId, clockId, callback) {\n  if (typeof ticks === 'function') {\n    callback = ticks;\n    ticks = nodeId = clockId = null;\n  } else if (typeof nodeId === 'function') {\n    callback = nodeId;\n    nodeId = clockId = null;\n  } else if (typeof clockId === 'function') {\n    callback = clockId;\n    clockId = null;\n  }\n\n  if (!callback) {\n    return new TimeUuid(date, ticks, nodeId, clockId);\n  }\n\n  utils.parallel([\n    next => getOrGenerateRandom(nodeId, 6, (err, buffer) => next(err, nodeId = buffer)),\n    next => getOrGenerateRandom(clockId, 2, (err, buffer) => next(err, clockId = buffer)),\n  ], (err) => {\n    if (err) {\n      return callback(err);\n    }\n\n    let timeUuid;\n    try {\n      timeUuid = new TimeUuid(date, ticks, nodeId, clockId);\n    }\n    catch (e) {\n      return callback(e);\n    }\n\n    callback(null, timeUuid);\n  });\n};\n\n/**\n * Parses a string representation of a TimeUuid\n * @param {String} value\n * @returns {TimeUuid}\n */\nTimeUuid.fromString = function (value) {\n  return new TimeUuid(Uuid.fromString(value).getBuffer());\n};\n\n/**\n * Returns the smaller possible type 1 uuid with the provided Date.\n */\nTimeUuid.min = function (date, ticks) {\n  return new TimeUuid(date, ticks, minNodeId, minClockId);\n};\n\n/**\n * Returns the biggest possible type 1 uuid with the provided Date.\n */\nTimeUuid.max = function (date, ticks) {\n  return new TimeUuid(date, ticks, maxNodeId, maxClockId);\n};\n\n/**\n * Generates a TimeUuid instance based on the current date using random node and clock values.\n * @param {String|Buffer} [nodeId] A 6-length Buffer or string of 6 ascii characters representing the node identifier, ie: 'host01'.\n * If not provided, a random nodeId will be generated.\n * @param {String|Buffer} [clockId] A 2-length Buffer or string of 6 ascii characters representing the clock identifier.\n * If not provided a random clockId will be generated.\n * @param {Function} [callback] An optional callback to be invoked with the error as first parameter and the created\n * <code>TimeUuid</code> as second parameter. When a callback is provided, the random portions of the\n * <code>TimeUuid</code> instance are created asynchronously.\n * <p>\n *   When nodeId and/or clockId portions are not provided, this method will generate them using\n *   <code>crypto.randomBytes()</code>. As it's possible that <code>crypto.randomBytes()</code> might block, it's\n *   recommended that you use the callback-based version of this method in that case.\n * </p>\n * @example <caption>Generate a TimeUuid from a Date without any random portion</caption>\n * const timeuuid = TimeUuid.now('host01', '02');\n * @example <caption>Generate a TimeUuid with random node and clock identifiers</caption>\n * TimeUuid.now(function (err, timeuuid) {\n *   // do something with the generated timeuuid\n * });\n * @example <caption>Generate a TimeUuid based on the current date (might block)</caption>\n * const timeuuid = TimeUuid.now();\n */\nTimeUuid.now = function (nodeId, clockId, callback) {\n  return TimeUuid.fromDate(null, null, nodeId, clockId, callback);\n};\n\n\n/**\n * Gets the Date and 100-nanoseconds units representation of this instance.\n * @returns {{date: Date, ticks: Number}}\n */\nTimeUuid.prototype.getDatePrecision = function () {\n  const timeLow = this.buffer.readUInt32BE(0);\n\n  let timeHigh = 0;\n  timeHigh |= ( this.buffer[4] & 0xff ) << 8;\n  timeHigh |= this.buffer[5] & 0xff;\n  timeHigh |= ( this.buffer[6] & 0x0f ) << 24;\n  timeHigh |= ( this.buffer[7] & 0xff ) << 16;\n\n  const val = Long.fromBits(timeLow, timeHigh);\n  const ticksInMsLong = Long.fromNumber(_ticksInMs);\n  const ticks = val.modulo(ticksInMsLong);\n  const time = val\n    .div(ticksInMsLong)\n    .subtract(Long.fromNumber(_unixToGregorian));\n  return { date: new Date(time.toNumber()), ticks: ticks.toNumber()};\n};\n\n/**\n * Gets the Date representation of this instance.\n * @returns {Date}\n */\nTimeUuid.prototype.getDate = function () {\n  return this.getDatePrecision().date;\n};\n\n/**\n * Returns the node id this instance\n * @returns {Buffer}\n */\nTimeUuid.prototype.getNodeId = function () {\n  return this.buffer.slice(10);\n};\n\n/**\n * Returns the clock id this instance, with the variant applied (first 2 msb being 1 and 0).\n * @returns {Buffer}\n */\nTimeUuid.prototype.getClockId = function () {\n  return this.buffer.slice(8, 10);\n};\n\n/**\n * Returns the node id this instance as an ascii string\n * @returns {String}\n */\nTimeUuid.prototype.getNodeIdString = function () {\n  return this.buffer.slice(10).toString('ascii');\n};\n\nfunction writeTime(buffer, time, ticks) {\n  //value time expressed in ticks precision\n  const val = Long\n    .fromNumber(time + _unixToGregorian)\n    .multiply(Long.fromNumber(10000))\n    .add(Long.fromNumber(ticks));\n  const timeHigh = val.getHighBitsUnsigned();\n  buffer.writeUInt32BE(val.getLowBitsUnsigned(), 0);\n  buffer.writeUInt16BE(timeHigh & 0xffff, 4);\n  buffer.writeUInt16BE(timeHigh >>> 16 & 0xffff, 6);\n}\n\n/**\n * Returns a buffer of length 2 representing the clock identifier\n * @param {String|Buffer} clockId\n * @returns {Buffer}\n * @private\n */\nfunction getClockId(clockId) {\n  let buffer = clockId;\n  if (typeof clockId === 'string') {\n    buffer = utils.allocBufferFromString(clockId, 'ascii');\n  }\n  if (!(buffer instanceof Buffer)) {\n    //Generate\n    buffer = getRandomBytes(2);\n  }\n  else if (buffer.length !== 2) {\n    throw new Error('Clock identifier must have 2 bytes');\n  }\n  return buffer;\n}\n\n/**\n * Returns a buffer of length 6 representing the clock identifier\n * @param {String|Buffer} nodeId\n * @returns {Buffer}\n * @private\n */\nfunction getNodeId(nodeId) {\n  let buffer = nodeId;\n  if (typeof nodeId === 'string') {\n    buffer = utils.allocBufferFromString(nodeId, 'ascii');\n  }\n  if (!(buffer instanceof Buffer)) {\n    //Generate\n    buffer = getRandomBytes(6);\n  }\n  else if (buffer.length !== 6) {\n    throw new Error('Node identifier must have 6 bytes');\n  }\n  return buffer;\n}\n\n/**\n * Returns the ticks portion of a timestamp.  If the ticks are not provided an internal counter is used that gets reset at 10000.\n * @private\n * @param {Number} [ticks] \n * @returns {Number} \n */\nfunction getTicks(ticks) {\n  if (typeof ticks !== 'number'|| ticks >= _ticksInMs) {\n    _ticks++;\n    if (_ticks >= _ticksInMs) {\n      _ticks = 0;\n    }\n    ticks = _ticks;\n  }\n  return ticks;\n}\n\n/**\n * Returns an object with the time representation of the date expressed in milliseconds since unix epoch \n * and a ticks property for the 100-nanoseconds precision.\n * @private\n * @returns {{time: Number, ticks: Number}} \n */\nfunction getTimeWithTicks(date, ticks) {\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\n    // time with ticks for the current time\n    date = new Date();\n    const time = date.getTime();\n    _ticksForCurrentTime++;\n    if(_ticksForCurrentTime > _ticksInMs || time > _lastTimestamp) {\n      _ticksForCurrentTime = 0;\n      _lastTimestamp = time;\n    }\n    ticks = _ticksForCurrentTime;\n  }\n  return {\n    time: date.getTime(),\n    ticks: getTicks(ticks)\n  };\n}\n\nfunction getRandomBytes(length) {\n  return crypto.randomBytes(length);\n}\n\nfunction getOrGenerateRandom(id, length, callback) {\n  if (id) {\n    return callback(null, id);\n  }\n  crypto.randomBytes(length, callback);\n}\n\n/**\n * Generates a 16-length Buffer instance\n * @private\n * @param {Date} date\n * @param {Number} ticks\n * @param {String|Buffer} nodeId\n * @param {String|Buffer} clockId\n * @returns {Buffer}\n */\nfunction generateBuffer(date, ticks, nodeId, clockId) {\n  const timeWithTicks = getTimeWithTicks(date, ticks);\n  nodeId = getNodeId(nodeId);\n  clockId = getClockId(clockId);\n  const buffer = utils.allocBufferUnsafe(16);\n  //Positions 0-7 Timestamp\n  writeTime(buffer, timeWithTicks.time, timeWithTicks.ticks);\n  //Position 8-9 Clock\n  clockId.copy(buffer, 8, 0);\n  //Positions 10-15 Node\n  nodeId.copy(buffer, 10, 0);\n  //Version Byte: Time based\n  //0001xxxx\n  //turn off first 4 bits\n  buffer[6] = buffer[6] & 0x0f;\n  //turn on fifth bit\n  buffer[6] = buffer[6] | 0x10;\n\n  //IETF Variant Byte: 1.0.x\n  //10xxxxxx\n  //turn off first 2 bits\n  buffer[8] = buffer[8] & 0x3f;\n  //turn on first bit\n  buffer[8] = buffer[8] | 0x80;\n  return buffer;\n}\n\nmodule.exports = TimeUuid;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst _versionPattern = /(\\d+)\\.(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+)?)?(?:[-~]([\\w+]*(?:-\\w[.\\w]*)*))?(?:\\+([.\\w]+))?/;\n\n/**\n * Represents a version number in the form of X.Y.Z with optional pre-release and build metadata.\n *\n * Version numbers compare the usual way, the major version number (X) is compared first, then\n * the minor one (Y) and then the patch level one (Z).  If pre-release or other build metadata\n * is present for a version, that version is considered less than an otherwise equivalent version\n * that doesn't have these labels, otherwise they are considered equal.\n *\n * As of initial implementation versions are only compared against those with at most patch versions\n * more refined comparisons are not needed.\n *\n * @property {Number} major The major version, X of X.Y.Z.\n * @property {Number} minor The minor version, Y of X.Y.Z.\n * @property {Number} patch The patch version, Z of X.Y.Z.\n * @property {Number} dsePatch The dsePatch version, A of X.Y.Z.A or undefined if not present.\n * @property {String[]} preReleases Prerelease indicators if present, i.e. SNAPSHOT of X.Y.Z-SNAPSHOT.\n * @property {String} build Build string if present, i.e. build1 of X.Y.Z+build1.\n *\n * @ignore\n */\nclass VersionNumber {\n  constructor(major, minor, patch, dsePatch, preReleases, build) {\n    this.major = major;\n    this.minor = minor;\n    this.patch = patch;\n    this.dsePatch = dsePatch;\n    this.preReleases = preReleases;\n    this.build = build;\n  }\n\n  /**\n   * @return {String} String representation of this version.\n   */\n  toString() {\n    let str = this.major + '.' + this.minor;\n    if (this.patch !== undefined) {\n      str += '.' + this.patch;\n    }\n    if (this.dsePatch !== undefined) {\n      str += '.' + this.dsePatch;\n    }\n    if (this.preReleases !== undefined) {\n      this.preReleases.forEach((preRelease) => {\n        str += '-' + preRelease;\n      });\n    }\n    if (this.build) {\n      str += '+' + this.build;\n    }\n    return str;\n  }\n\n  /**\n   * Compares this version with the provided version. \n   * @param {VersionNumber} other \n   * @return {Number} -1 if less than other, 0 if equal, 1 if greater than.\n   */\n  compare(other) {\n    if (this.major < other.major) {\n      return -1;\n    } else if (this.major > other.major) {\n      return 1;\n    } else if (this.minor < other.minor) {\n      return -1;\n    } else if (this.minor > other.minor) {\n      return 1;\n    }\n\n    // sanitize patch by setting to 0 if undefined.\n    const thisPatch = this.patch || 0;\n    const otherPatch = other.patch || 0;\n    if (thisPatch < otherPatch) {\n      return -1;\n    } else if (thisPatch > otherPatch) {\n      return 1;\n    }\n\n    // if dsePatch is set in one case, but not other, consider the one where it is set as greater.\n    if (this.dsePatch === undefined) {\n      if (other.dsePatch !== undefined) {\n        return -1;\n      }\n    } else if (other.dsePatch === undefined) {\n      return 1;\n    } else {\n      if (this.dsePatch < other.dsePatch) {\n        return -1;\n      } else if (this.dsePatch > other.dsePatch) {\n        return 1;\n      }\n    }\n\n    // If prereleases are present, consider less than those that don't have any.\n    if (this.preReleases === undefined) {\n      if (other.preReleases !== undefined) {\n        return 1;\n      }\n    } else if (other.preReleases === undefined) {\n      return -1;\n    }\n   \n    // Don't consider build.\n    return 0;\n  }\n\n  static parse(version) {\n    if (!version) {\n      return null;\n    }\n\n    const match = version.match(_versionPattern);\n    if (match) {\n      const major = parseInt(match[1], 10);\n      const minor = parseInt(match[2], 10);\n      const patch = match[3] ? parseInt(match[3], 10) : undefined;\n      const dsePatch = match[4] ? parseInt(match[4], 10) : undefined;\n      const preReleases = match[5] ? match[5].split('-') : undefined;\n      const build = match[6];\n      return new VersionNumber(major, minor, patch, dsePatch, preReleases, build);\n    }\n    throw new TypeError('Could not extract version from \\'' + version + '\\'');\n  }\n}\n\nmodule.exports = VersionNumber;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst utils = require('../utils');\nconst VersionNumber = require('./version-number');\nconst v200 = VersionNumber.parse('2.0.0');\nconst v210 = VersionNumber.parse('2.1.0');\nconst v220 = VersionNumber.parse('2.2.0');\nconst v300 = VersionNumber.parse('3.0.0');\nconst v510 = VersionNumber.parse('5.1.0');\nconst v600 = VersionNumber.parse('6.0.0');\n\n/**\n * Contains information for the different protocol versions supported by the driver.\n * @type {Object}\n * @property {Number} v1 Cassandra protocol v1, supported in Apache Cassandra 1.2-->2.2.\n * @property {Number} v2 Cassandra protocol v2, supported in Apache Cassandra 2.0-->2.2.\n * @property {Number} v3 Cassandra protocol v3, supported in Apache Cassandra 2.1-->3.x.\n * @property {Number} v4 Cassandra protocol v4, supported in Apache Cassandra 2.2-->3.x.\n * @property {Number} v5 Cassandra protocol v5, in beta from Apache Cassandra 3.x+. Currently not supported by the\n * driver.\n * @property {Number} dseV1 DataStax Enterprise protocol v1, DSE 5.1+\n * @property {Number} dseV2 DataStax Enterprise protocol v2, DSE 6.0+\n * @property {Number} maxSupported Returns the higher protocol version that is supported by this driver.\n * @property {Number} minSupported Returns the lower protocol version that is supported by this driver.\n * @property {Function} isSupported A function that returns a boolean determining whether a given protocol version\n * is supported.\n * @alias module:types~protocolVersion\n */\nconst protocolVersion = {\n  // Strict equality operators to compare versions are allowed, other comparison operators are discouraged. Instead,\n  // use a function that checks if a functionality is present on a certain version, for maintainability purposes.\n  v1: 0x01,\n  v2: 0x02,\n  v3: 0x03,\n  v4: 0x04,\n  v5: 0x05,\n  v6: 0x06,\n  dseV1: 0x41,\n  dseV2: 0x42,\n  maxSupported: 0x42,\n  minSupported: 0x01,\n\n  /**\n   * Determines whether the protocol version is a DSE-specific protocol version.\n   * @param {Number} version\n   * @returns {Boolean}\n   * @ignore\n   */\n  isDse: function(version) {\n    return ((version >= this.dseV1 && version <= this.dseV2));\n  },\n  /**\n   * Returns true if the protocol version represents a version of Cassandra\n   * supported by this driver, false otherwise\n   * @param {Number} version\n   * @returns {Boolean}\n   * @ignore\n   */\n  isSupportedCassandra: function(version) {\n    return (version <= 0x04 && version >= 0x01);\n  },\n  /**\n   * Determines whether the protocol version is supported by this driver.\n   * @param {Number} version\n   * @returns {Boolean}\n   * @ignore\n   */\n  isSupported: function (version) {\n    return (this.isDse(version) || this.isSupportedCassandra(version));\n  },\n\n  /**\n   * Determines whether the protocol includes flags for PREPARE messages.\n   * @param {Number} version\n   * @returns {Boolean}\n   * @ignore\n   */\n  supportsPrepareFlags: function (version) {\n    return (version === this.dseV2);\n  },\n  /**\n   * Determines whether the protocol supports sending the keyspace as part of PREPARE, QUERY, EXECUTE, and BATCH.\n   * @param {Number} version\n   * @returns {Boolean}\n   * @ignore\n   */\n  supportsKeyspaceInRequest: function (version) {\n    return (version === this.dseV2);\n  },\n  /**\n   * Determines whether the protocol supports result_metadata_id on `prepared` response and\n   * and `execute` request.\n   * @param {Number} version\n   * @returns {Boolean}\n   * @ignore\n   */\n  supportsResultMetadataId: function (version) {\n    return (version === this.dseV2);\n  },\n  /**\n   * Determines whether the protocol supports partition key indexes in the `prepared` RESULT responses.\n   * @param {Number} version\n   * @returns {Boolean}\n   * @ignore\n   */\n  supportsPreparedPartitionKey: function (version) {\n    return (version >= this.v4);\n  },\n  /**\n   * Determines whether the protocol supports up to 4 strings (ie: change_type, target, keyspace and table) in the\n   * schema change responses.\n   * @param version\n   * @return {boolean}\n   * @ignore\n   */\n  supportsSchemaChangeFullMetadata: function (version) {\n    return (version >= this.v3);\n  },\n  /**\n   * Determines whether the protocol supports continuous paging.\n   * @param version\n   * @return {boolean}\n   * @ignore\n   */\n  supportsContinuousPaging: function (version) {\n    return (this.isDse(version));\n  },\n  /**\n   * Determines whether the protocol supports paging state and serial consistency parameters in QUERY and EXECUTE\n   * requests.\n   * @param version\n   * @return {boolean}\n   * @ignore\n   */\n  supportsPaging: function (version) {\n    return (version >= this.v2);\n  },\n  /**\n   * Determines whether the protocol supports timestamps parameters in BATCH, QUERY and EXECUTE requests.\n   * @param {Number} version\n   * @return {boolean}\n   * @ignore\n   */\n  supportsTimestamp: function (version) {\n    return (version >= this.v3);\n  },\n  /**\n   * Determines whether the protocol supports named parameters in QUERY and EXECUTE requests.\n   * @param {Number} version\n   * @return {boolean}\n   * @ignore\n   */\n  supportsNamedParameters: function (version) {\n    return (version >= this.v3);\n  },\n  /**\n   * Determines whether the protocol supports unset parameters.\n   * @param {Number} version\n   * @return {boolean}\n   * @ignore\n   */\n  supportsUnset: function (version) {\n    return (version >= this.v4);\n  },\n  /**\n   * Determines whether the protocol provides a reason map for read and write failure errors.\n   * @param version\n   * @return {boolean}\n   * @ignore\n   */\n  supportsFailureReasonMap: function (version) {\n    return (version >= this.v5);\n  },\n  /**\n   * Determines whether the protocol supports timestamp and serial consistency parameters in BATCH requests.\n   * @param {Number} version\n   * @return {boolean}\n   * @ignore\n   */\n  uses2BytesStreamIds: function (version) {\n    return (version >= this.v3);\n  },\n  /**\n   * Determines whether the collection length is encoded using 32 bits.\n   * @param {Number} version\n   * @return {boolean}\n   * @ignore\n   */\n  uses4BytesCollectionLength: function (version) {\n    return (version >= this.v3);\n  },\n  /**\n   * Determines whether the QUERY, EXECUTE and BATCH flags are encoded using 32 bits.\n   * @param {Number} version\n   * @return {boolean}\n   * @ignore\n   */\n  uses4BytesQueryFlags: function (version) {\n    return (this.isDse(version));\n  },\n  /**\n   * Startup responses using protocol v4+ can be a SERVER_ERROR wrapping a ProtocolException, this method returns true\n   * when is possible to receive such error.\n   * @param {Number} version\n   * @return {boolean}\n   * @ignore\n   */\n  canStartupResponseErrorBeWrapped: function (version) {\n    return (version >= this.v4);\n  },\n  /**\n   * Gets the first version number that is supported, lower than the one provided.\n   * Returns zero when there isn't a lower supported version.\n   * @param {Number} version\n   * @return {Number}\n   * @ignore\n   */\n  getLowerSupported: function (version) {\n    if (version >= this.v5) {\n      return this.v4;\n    }\n    if (version <= this.v1) {\n      return 0;\n    }\n    return version - 1;\n  },\n\n  /**\n   * Computes the highest supported protocol version collectively by the given hosts.\n   *\n   * Considers the cassandra_version of the input hosts to determine what protocol versions\n   * are supported and uses the highest common protocol version among them.\n   *\n   * If hosts >= C* 3.0 are detected, any hosts older than C* 2.1 will not be considered\n   * as those cannot be connected to.  In general this will not be a problem as C* does\n   * not support clusters with nodes that have versions that are more than one major\n   * version away from each other.\n   * @param {Connection} connection Connection hosts were discovered from.\n   * @param {Array.<Host>} hosts The hosts to determine highest protocol version from.\n   * @return {Number} Highest supported protocol version among hosts.\n   */\n  getHighestCommon: function(connection, hosts) {\n    const log = connection.log ? connection.log.bind(connection) : utils.noop;\n    let maxVersion = connection.protocolVersion;\n    // whether or not protocol v3 is required (nodes detected that don't support < 3).\n    let v3Requirement = false;\n    // track the common protocol version >= v3 in case we encounter older versions.\n    let maxVersionWith3OrMore = maxVersion;\n    hosts.forEach(h => {\n      let dseVersion = null;\n      if (h.dseVersion) {\n        // As of DSE 5.1, DSE has it's own specific protocol versions.  If we detect 5.1+\n        // consider those protocol versions.\n        dseVersion = VersionNumber.parse(h.dseVersion);\n        log('verbose', `Encountered host ${h.address} with dse version ${dseVersion}`);\n        if (dseVersion.compare(v510) >= 0) {\n          v3Requirement = true;\n          if (dseVersion.compare(v600) >= 0) {\n            maxVersion = Math.min(this.dseV2, maxVersion);\n          } else {\n            maxVersion = Math.min(this.dseV1, maxVersion);\n          }\n          maxVersionWith3OrMore = maxVersion;\n          return;\n        }\n        // If DSE < 5.1, we fall back on the cassandra protocol logic.\n      }\n\n      if (!h.cassandraVersion || h.cassandraVersion.length === 0) {\n        log('warning', 'Encountered host ' + h.address + ' with no cassandra version,' +\n          ' skipping as part of protocol version evaluation');\n        return;\n      }\n\n      try {\n        const cassandraVersion = VersionNumber.parse(h.cassandraVersion);\n        if (!dseVersion) {\n          log('verbose', 'Encountered host ' + h.address + ' with cassandra version ' + cassandraVersion);\n        }\n        if (cassandraVersion.compare(v300) >= 0) {\n          // Anything 3.0.0+ has a max protocol version of V4 and requires at least V3.\n          v3Requirement = true;\n          maxVersion = Math.min(this.v4, maxVersion);\n          maxVersionWith3OrMore = maxVersion;\n        } else if (cassandraVersion.compare(v220) >= 0) {\n          // Cassandra 2.2.x has a max protocol version of V4.\n          maxVersion = Math.min(this.v4, maxVersion);\n          maxVersionWith3OrMore = maxVersion;\n        } else if (cassandraVersion.compare(v210) >= 0) {\n          // Cassandra 2.1.x has a max protocol version of V3.\n          maxVersion = Math.min(this.v3, maxVersion);\n          maxVersionWith3OrMore = maxVersion;\n        } else if (cassandraVersion.compare(v200) >= 0) {\n          // Cassandra 2.0.x has a max protocol version of V2.\n          maxVersion = Math.min(this.v2, maxVersion);\n        } else {\n          // Anything else is < 2.x and requires protocol version V1.\n          maxVersion = this.v1;\n        }\n      } catch (e) {\n        log('warning', 'Encountered host ' + h.address + ' with unparseable cassandra version ' + h.cassandraVersion\n          + ' skipping as part of protocol version evaluation');\n      }\n    });\n\n    if (v3Requirement && maxVersion < this.v3) {\n      const addendum = '. This should not be possible as nodes within a cluster can\\'t be separated by more than one major version';\n      if (maxVersionWith3OrMore < this.v3) {\n        log('error', 'Detected hosts that require at least protocol version 0x3, but currently connected to '\n         + connection.address + ':' + connection.port + ' using protocol version 0x' + maxVersionWith3OrMore\n         + '. Will not be able to connect to these hosts' + addendum);\n      } else {\n        log('error', 'Detected hosts with maximum protocol version of 0x' + maxVersion.toString(16)\n          + ' but there are some hosts that require at least version 0x3. Will not be able to connect to these older hosts'\n          + addendum);\n      }\n      maxVersion = maxVersionWith3OrMore;\n    }\n\n    log('verbose', 'Resolved protocol version 0x' + maxVersion.toString(16) + ' as the highest common protocol version among hosts');\n    return maxVersion;\n  },\n\n  /**\n   * Determines if the protocol is a BETA version of the protocol.\n   * @param {Number} version\n   * @return {Number}\n   */\n  isBeta: function (version) {\n    return version === this.v5;\n  }\n};\n\nmodule.exports = protocolVersion;","// Copyright 2009 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @module types */\n\nvar utils = require('../utils');\n\n/**\n * Constructs a two's-complement integer an array containing bits of the\n * integer in 32-bit (signed) pieces, given in little-endian order (i.e.,\n * lowest-order bits in the first piece), and the sign of -1 or 0.\n *\n * See the from* functions below for other convenient ways of constructing\n * Integers.\n *\n * The internal representation of an integer is an array of 32-bit signed\n * pieces, along with a sign (0 or -1) that indicates the contents of all the\n * other 32-bit pieces out to infinity.  We use 32-bit pieces because these are\n * the size of integers on which Javascript performs bit-operations.  For\n * operations like addition and multiplication, we split each number into 16-bit\n * pieces, which can easily be multiplied within Javascript's floating-point\n * representation without overflow or change in sign.\n *\n * @constructor\n * @param {Array.<number>} bits Array containing the bits of the number.\n * @param {number} sign The sign of the number: -1 for negative and 0 positive.\n * @final\n */\nfunction Integer (bits, sign) {\n  /**\n   * @type {!Array.<number>}\n   * @private\n   */\n  this.bits_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.sign_ = sign;\n\n  // Copy the 32-bit signed integer values passed in.  We prune out those at the\n  // top that equal the sign since they are redundant.\n  var top = true;\n  for (var i = bits.length - 1; i >= 0; i--) {\n    var val = bits[i] | 0;\n    if (!top || val != sign) {\n      this.bits_[i] = val;\n      top = false;\n    }\n  }\n}\n\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Integer representations of small integer values.\n * @type {!Object}\n * @private\n */\nInteger.IntCache_ = {};\n\n\n/**\n * Returns an Integer representing the given (32-bit) integer value.\n * @param {number} value A 32-bit integer value.\n * @return {!Integer} The corresponding Integer value.\n */\nInteger.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Integer.IntCache_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Integer([value | 0], value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Integer.IntCache_[value] = obj;\n  }\n  return obj;\n};\n\n\n/**\n * Returns an Integer representing the given value, provided that it is a finite\n * number.  Otherwise, zero is returned.\n * @param {number} value The value in question.\n * @return {!Integer} The corresponding Integer value.\n */\nInteger.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Integer.ZERO;\n  } else if (value < 0) {\n    return Integer.fromNumber(-value).negate();\n  } else {\n    var bits = [];\n    var pow = 1;\n    for (var i = 0; value >= pow; i++) {\n      bits[i] = (value / pow) | 0;\n      pow *= Integer.TWO_PWR_32_DBL_;\n    }\n    return new Integer(bits, 0);\n  }\n};\n\n\n/**\n * Returns a Integer representing the value that comes by concatenating the\n * given entries, each is assumed to be 32 signed bits, given in little-endian\n * order (lowest order bits in the lowest index), and sign-extending the highest\n * order 32-bit value.\n * @param {Array.<number>} bits The bits of the number, in 32-bit signed pieces,\n *     in little-endian order.\n * @return {!Integer} The corresponding Integer value.\n */\nInteger.fromBits = function(bits) {\n  var high = bits[bits.length - 1];\n  //noinspection JSBitwiseOperatorUsage\n  return new Integer(bits, high & (1 << 31) ? -1 : 0);\n};\n\n\n/**\n * Returns an Integer representation of the given string, written using the\n * given radix.\n * @param {string} str The textual representation of the Integer.\n * @param {number=} opt_radix The radix in which the text is written.\n * @return {!Integer} The corresponding Integer value.\n */\nInteger.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw TypeError('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Integer.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw TypeError('number format error: interior \"-\" character');\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Integer.fromNumber(Math.pow(radix, 8));\n\n  var result = Integer.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Integer.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Integer.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Integer.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n/**\n * Returns an Integer representation of a given big endian Buffer.\n * The internal representation of bits contains bytes in groups of 4\n * @param {Buffer} buf\n * @returns {Integer}\n */\nInteger.fromBuffer = function (buf) {\n  var bits = new Array(Math.ceil(buf.length / 4));\n  //noinspection JSBitwiseOperatorUsage\n  var sign = buf[0] & (1 << 7) ? -1 : 0;\n  for (var i = 0; i < bits.length; i++) {\n    var offset = buf.length - ((i + 1) * 4);\n    var value;\n    if (offset < 0) {\n      //The buffer length is not multiple of 4\n      offset = offset + 4;\n      value = 0;\n      for (var j = 0; j < offset; j++) {\n        var byte = buf[j];\n        if (sign === -1) {\n          //invert the bits\n          byte = ~byte & 0xff;\n        }\n        value = value | (byte << (offset - j - 1) * 8);\n      }\n      if (sign === -1) {\n        //invert all the bits\n        value = ~value;\n      }\n    }\n    else {\n      value = buf.readInt32BE(offset);\n    }\n    bits[i] = value;\n  }\n  return new Integer(bits, sign);\n};\n\n/**\n * Returns a big endian buffer representation of an Integer.\n * Internally the bits are represented using 4 bytes groups (numbers),\n * in the Buffer representation there might be the case where we need less than the 4 bytes.\n * For example: 0x00000001 -> '01', 0xFFFFFFFF -> 'FF', 0xFFFFFF01 -> 'FF01'\n * @param {Integer} value\n * @returns {Buffer}\n*/\nInteger.toBuffer = function (value) {\n  var sign = value.sign_;\n  var bits = value.bits_;\n  if (bits.length === 0) {\n    //[0] or [0xffffffff]\n    return utils.allocBufferFromArray([value.sign_]);\n  }\n  //the high bits might need to be represented in less than 4 bytes\n  var highBits = bits[bits.length-1];\n  if (sign === -1) {\n    highBits = ~highBits;\n  }\n  var high = [];\n  if (highBits >>> 24 > 0) {\n    high.push((highBits >> 24) & 0xff);\n  }\n  if (highBits >>> 16 > 0) {\n    high.push((highBits >> 16) & 0xff);\n  }\n  if (highBits >>> 8 > 0) {\n    high.push((highBits >> 8) & 0xff);\n  }\n  high.push(highBits & 0xff);\n  if (sign === -1) {\n    //The byte containing the sign bit got removed\n    if (high[0] >> 7 !== 0) {\n      //it is going to be negated\n      high.unshift(0);\n    }\n  }\n  else if (high[0] >> 7 !== 0) {\n    //its positive but it lost the byte containing the sign bit\n    high.unshift(0);\n  }\n  var buf = utils.allocBufferUnsafe(high.length + ((bits.length-1) * 4));\n  for (var j = 0; j < high.length; j++) {\n    var b = high[j];\n    if (sign === -1) {\n      buf[j] = ~b;\n    }\n    else {\n      buf[j] = b;\n    }\n  }\n  for (var i = 0; i < bits.length - 1; i++) {\n    var group = bits[bits.length - 2 - i];\n    var offset = high.length + i * 4;\n    buf.writeInt32BE(group, offset);\n  }\n  return buf;\n};\n\n\n/**\n * A number used repeatedly in calculations.  This must appear before the first\n * call to the from* functions below.\n * @type {number}\n * @private\n */\nInteger.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);\n\n\n/** @type {!Integer} */\nInteger.ZERO = Integer.fromInt(0);\n\n\n/** @type {!Integer} */\nInteger.ONE = Integer.fromInt(1);\n\n\n/**\n * @type {!Integer}\n * @private\n */\nInteger.TWO_PWR_24_ = Integer.fromInt(1 << 24);\n\n\n/**\n * Returns the value, assuming it is a 32-bit integer.\n * @return {number} The corresponding int value.\n */\nInteger.prototype.toInt = function() {\n  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;\n};\n\n\n/** @return {number} The closest floating-point representation to this value. */\nInteger.prototype.toNumber = function() {\n  if (this.isNegative()) {\n    return -this.negate().toNumber();\n  } else {\n    var val = 0;\n    var pow = 1;\n    for (var i = 0; i < this.bits_.length; i++) {\n      val += this.getBitsUnsigned(i) * pow;\n      pow *= Integer.TWO_PWR_32_DBL_;\n    }\n    return val;\n  }\n};\n\n\n/**\n * @param {number=} opt_radix The radix in which the text should be written.\n * @return {string} The textual representation of this value.\n * @override\n */\nInteger.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  } else if (this.isNegative()) {\n    return '-' + this.negate().toString(radix);\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Integer.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.divide(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n\n/**\n * Returns the index-th 32-bit (signed) piece of the Integer according to\n * little-endian order (i.e., index 0 contains the smallest bits).\n * @param {number} index The index in question.\n * @return {number} The requested 32-bits as a signed number.\n */\nInteger.prototype.getBits = function(index) {\n  if (index < 0) {\n    return 0;  // Allowing this simplifies bit shifting operations below...\n  } else if (index < this.bits_.length) {\n    return this.bits_[index];\n  } else {\n    return this.sign_;\n  }\n};\n\n\n/**\n * Returns the index-th 32-bit piece as an unsigned number.\n * @param {number} index The index in question.\n * @return {number} The requested 32-bits as an unsigned number.\n */\nInteger.prototype.getBitsUnsigned = function(index) {\n  var val = this.getBits(index);\n  return val >= 0 ? val : Integer.TWO_PWR_32_DBL_ + val;\n};\n\n\n/** @return {number} The sign bit of this number, -1 or 0. */\nInteger.prototype.getSign = function() {\n  return this.sign_;\n};\n\n\n/** @return {boolean} Whether this value is zero. */\nInteger.prototype.isZero = function() {\n  if (this.sign_ != 0) {\n    return false;\n  }\n  for (var i = 0; i < this.bits_.length; i++) {\n    if (this.bits_[i] != 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/** @return {boolean} Whether this value is negative. */\nInteger.prototype.isNegative = function() {\n  return this.sign_ == -1;\n};\n\n\n/** @return {boolean} Whether this value is odd. */\nInteger.prototype.isOdd = function() {\n  return (this.bits_.length == 0) && (this.sign_ == -1) ||\n    (this.bits_.length > 0) && ((this.bits_[0] & 1) != 0);\n};\n\n\n/**\n * @param {Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer equals the other.\n */\nInteger.prototype.equals = function(other) {\n  if (this.sign_ != other.sign_) {\n    return false;\n  }\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  for (var i = 0; i < len; i++) {\n    if (this.getBits(i) != other.getBits(i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * @param {Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer does not equal the other.\n */\nInteger.prototype.notEquals = function(other) {\n  return !this.equals(other);\n};\n\n\n/**\n * @param {Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is greater than the other.\n */\nInteger.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n\n/**\n * @param {Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is greater than or equal to the other.\n */\nInteger.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n\n/**\n * @param {Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is less than the other.\n */\nInteger.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n\n/**\n * @param {Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is less than or equal to the other.\n */\nInteger.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n\n/**\n * Compares this Integer with the given one.\n * @param {Integer} other Integer to compare against.\n * @return {number} 0 if they are the same, 1 if the this is greater, and -1\n *     if the given one is greater.\n */\nInteger.prototype.compare = function(other) {\n  var diff = this.subtract(other);\n  if (diff.isNegative()) {\n    return -1;\n  } else if (diff.isZero()) {\n    return 0;\n  } else {\n    return +1;\n  }\n};\n\n\n/**\n * Returns an integer with only the first numBits bits of this value, sign\n * extended from the final bit.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!Integer} The shorted integer value.\n */\nInteger.prototype.shorten = function(numBits) {\n  var arr_index = (numBits - 1) >> 5;\n  var bit_index = (numBits - 1) % 32;\n  var bits = [];\n  for (var i = 0; i < arr_index; i++) {\n    bits[i] = this.getBits(i);\n  }\n  var sigBits = bit_index == 31 ? 0xFFFFFFFF : (1 << (bit_index + 1)) - 1;\n  var val = this.getBits(arr_index) & sigBits;\n  //noinspection JSBitwiseOperatorUsage\n  if (val & (1 << bit_index)) {\n    val |= 0xFFFFFFFF - sigBits;\n    bits[arr_index] = val;\n    return new Integer(bits, -1);\n  } else {\n    bits[arr_index] = val;\n    return new Integer(bits, 0);\n  }\n};\n\n\n/** @return {!Integer} The negation of this value. */\nInteger.prototype.negate = function() {\n  return this.not().add(Integer.ONE);\n};\n\n\n/**\n * Returns the sum of this and the given Integer.\n * @param {Integer} other The Integer to add to this.\n * @return {!Integer} The Integer result.\n */\nInteger.prototype.add = function(other) {\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  var carry = 0;\n\n  for (var i = 0; i <= len; i++) {\n    var a1 = this.getBits(i) >>> 16;\n    var a0 = this.getBits(i) & 0xFFFF;\n\n    var b1 = other.getBits(i) >>> 16;\n    var b0 = other.getBits(i) & 0xFFFF;\n\n    var c0 = carry + a0 + b0;\n    var c1 = (c0 >>> 16) + a1 + b1;\n    carry = c1 >>> 16;\n    c0 &= 0xFFFF;\n    c1 &= 0xFFFF;\n    arr[i] = (c1 << 16) | c0;\n  }\n  return Integer.fromBits(arr);\n};\n\n\n/**\n * Returns the difference of this and the given Integer.\n * @param {Integer} other The Integer to subtract from this.\n * @return {!Integer} The Integer result.\n */\nInteger.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n\n/**\n * Returns the product of this and the given Integer.\n * @param {Integer} other The Integer to multiply against this.\n * @return {!Integer} The product of this and the other.\n */\nInteger.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Integer.ZERO;\n  } else if (other.isZero()) {\n    return Integer.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both numbers are small, use float multiplication\n  if (this.lessThan(Integer.TWO_PWR_24_) &&\n    other.lessThan(Integer.TWO_PWR_24_)) {\n    return Integer.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Fill in an array of 16-bit products.\n  var len = this.bits_.length + other.bits_.length;\n  var arr = [];\n  for (var i = 0; i < 2 * len; i++) {\n    arr[i] = 0;\n  }\n  for (var i = 0; i < this.bits_.length; i++) {\n    for (var j = 0; j < other.bits_.length; j++) {\n      var a1 = this.getBits(i) >>> 16;\n      var a0 = this.getBits(i) & 0xFFFF;\n\n      var b1 = other.getBits(j) >>> 16;\n      var b0 = other.getBits(j) & 0xFFFF;\n\n      arr[2 * i + 2 * j] += a0 * b0;\n      Integer.carry16_(arr, 2 * i + 2 * j);\n      arr[2 * i + 2 * j + 1] += a1 * b0;\n      Integer.carry16_(arr, 2 * i + 2 * j + 1);\n      arr[2 * i + 2 * j + 1] += a0 * b1;\n      Integer.carry16_(arr, 2 * i + 2 * j + 1);\n      arr[2 * i + 2 * j + 2] += a1 * b1;\n      Integer.carry16_(arr, 2 * i + 2 * j + 2);\n    }\n  }\n\n  // Combine the 16-bit values into 32-bit values.\n  for (var i = 0; i < len; i++) {\n    arr[i] = (arr[2 * i + 1] << 16) | arr[2 * i];\n  }\n  for (var i = len; i < 2 * len; i++) {\n    arr[i] = 0;\n  }\n  return new Integer(arr, 0);\n};\n\n\n/**\n * Carries any overflow from the given index into later entries.\n * @param {Array.<number>} bits Array of 16-bit values in little-endian order.\n * @param {number} index The index in question.\n * @private\n */\nInteger.carry16_ = function(bits, index) {\n  while ((bits[index] & 0xFFFF) != bits[index]) {\n    bits[index + 1] += bits[index] >>> 16;\n    bits[index] &= 0xFFFF;\n  }\n};\n\n\n/**\n * Returns this Integer divided by the given one.\n * @param {Integer} other Th Integer to divide this by.\n * @return {!Integer} This value divided by the given one.\n */\nInteger.prototype.divide = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Integer.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().divide(other.negate());\n    } else {\n      return this.negate().divide(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.divide(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Integer.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Integer.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Integer.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Integer.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n\n/**\n * Returns this Integer modulo the given one.\n * @param {Integer} other The Integer by which to mod.\n * @return {!Integer} This value modulo the given one.\n */\nInteger.prototype.modulo = function(other) {\n  return this.subtract(this.divide(other).multiply(other));\n};\n\n\n/** @return {!Integer} The bitwise-NOT of this value. */\nInteger.prototype.not = function() {\n  var len = this.bits_.length;\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = ~this.bits_[i];\n  }\n  return new Integer(arr, ~this.sign_);\n};\n\n\n/**\n * Returns the bitwise-AND of this Integer and the given one.\n * @param {Integer} other The Integer to AND with this.\n * @return {!Integer} The bitwise-AND of this and the other.\n */\nInteger.prototype.and = function(other) {\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = this.getBits(i) & other.getBits(i);\n  }\n  return new Integer(arr, this.sign_ & other.sign_);\n};\n\n\n/**\n * Returns the bitwise-OR of this Integer and the given one.\n * @param {Integer} other The Integer to OR with this.\n * @return {!Integer} The bitwise-OR of this and the other.\n */\nInteger.prototype.or = function(other) {\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = this.getBits(i) | other.getBits(i);\n  }\n  return new Integer(arr, this.sign_ | other.sign_);\n};\n\n\n/**\n * Returns the bitwise-XOR of this Integer and the given one.\n * @param {Integer} other The Integer to XOR with this.\n * @return {!Integer} The bitwise-XOR of this and the other.\n */\nInteger.prototype.xor = function(other) {\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = this.getBits(i) ^ other.getBits(i);\n  }\n  return new Integer(arr, this.sign_ ^ other.sign_);\n};\n\n\n/**\n * Returns this value with bits shifted to the left by the given amount.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!Integer} This shifted to the left by the given amount.\n */\nInteger.prototype.shiftLeft = function(numBits) {\n  var arr_delta = numBits >> 5;\n  var bit_delta = numBits % 32;\n  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    if (bit_delta > 0) {\n      arr[i] = (this.getBits(i - arr_delta) << bit_delta) |\n      (this.getBits(i - arr_delta - 1) >>> (32 - bit_delta));\n    } else {\n      arr[i] = this.getBits(i - arr_delta);\n    }\n  }\n  return new Integer(arr, this.sign_);\n};\n\n\n/**\n * Returns this value with bits shifted to the right by the given amount.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!Integer} This shifted to the right by the given amount.\n */\nInteger.prototype.shiftRight = function(numBits) {\n  var arr_delta = numBits >> 5;\n  var bit_delta = numBits % 32;\n  var len = this.bits_.length - arr_delta;\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    if (bit_delta > 0) {\n      arr[i] = (this.getBits(i + arr_delta) >>> bit_delta) |\n      (this.getBits(i + arr_delta + 1) << (32 - bit_delta));\n    } else {\n      arr[i] = this.getBits(i + arr_delta);\n    }\n  }\n  return new Integer(arr, this.sign_);\n};\n\n/**\n * Provide the name of the constructor and the string representation\n * @returns {string}\n */\nInteger.prototype.inspect = function () {\n  return this.constructor.name + ': ' + this.toString();\n};\n\n/**\n * Returns a Integer whose value is the absolute value of this\n * @returns {Integer}\n */\nInteger.prototype.abs = function () {\n  return this.sign_ === 0 ? this : this.negate();\n};\n\n/**\n * Returns the string representation.\n * Method used by the native JSON.stringify() to serialize this instance.\n */\nInteger.prototype.toJSON = function () {\n  return this.toString();\n};\n\nmodule.exports = Integer;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst Integer = require('./integer');\nconst utils = require('../utils');\n\n/** @module types */\n/**\n * Constructs an immutable arbitrary-precision signed decimal number.\n * A <code>BigDecimal</code> consists of an [arbitrary precision integer]{@link module:types~Integer}\n * <i>unscaled value</i> and a 32-bit integer <i>scale</i>.  If zero\n * or positive, the scale is the number of digits to the right of the\n * decimal point.  If negative, the unscaled value of the number is\n * multiplied by ten to the power of the negation of the scale.  The\n * value of the number represented by the <code>BigDecimal</code> is\n * therefore <tt>(unscaledValue &times; 10<sup>-scale</sup>)</tt>.\n * @class\n * @classdesc The <code>BigDecimal</code> class provides operations for\n * arithmetic, scale manipulation, rounding, comparison and\n * format conversion.  The {@link #toString} method provides a\n * canonical representation of a <code>BigDecimal</code>.\n * @param {Integer|Number} unscaledValue The integer part of the decimal.\n * @param {Number} scale The scale of the decimal.\n * @constructor\n */\nfunction BigDecimal(unscaledValue, scale) {\n  if (typeof unscaledValue === 'number') {\n    unscaledValue = Integer.fromNumber(unscaledValue);\n  }\n  /**\n   * @type {Integer}\n   * @private\n   */\n  this._intVal = unscaledValue;\n  /**\n   * @type {Number}\n   * @private\n   */\n  this._scale = scale;\n}\n\n/**\n * Returns the BigDecimal representation of a buffer composed of the scale (int32BE) and the unsigned value (varint BE)\n * @param {Buffer} buf\n * @returns {BigDecimal}\n */\nBigDecimal.fromBuffer = function (buf) {\n  const scale = buf.readInt32BE(0);\n  const unscaledValue = Integer.fromBuffer(buf.slice(4));\n  return new BigDecimal(unscaledValue, scale);\n};\n\n/**\n * Returns a buffer representation composed of the scale as a BE int 32 and the unsigned value as a BE varint\n * @param {BigDecimal} value\n * @returns {Buffer}\n */\nBigDecimal.toBuffer = function (value) {\n  const unscaledValueBuffer = Integer.toBuffer(value._intVal);\n  const scaleBuffer = utils.allocBufferUnsafe(4);\n  scaleBuffer.writeInt32BE(value._scale, 0);\n  return Buffer.concat([scaleBuffer, unscaledValueBuffer], scaleBuffer.length + unscaledValueBuffer.length);\n};\n\n/**\n * Returns a BigDecimal representation of the string\n * @param {String} value\n * @returns {BigDecimal}\n */\nBigDecimal.fromString = function (value) {\n  if (!value) {\n    throw new TypeError('Invalid null or undefined value');\n  }\n  value = value.trim();\n  const scaleIndex = value.indexOf('.');\n  let scale = 0;\n  if (scaleIndex >= 0) {\n    scale = value.length - 1 - scaleIndex;\n    value = value.substr(0, scaleIndex) + value.substr(scaleIndex + 1);\n  }\n  return new BigDecimal(Integer.fromString(value), scale);\n};\n\n/**\n * Returns a BigDecimal representation of the Number\n * @param {Number} value\n * @returns {BigDecimal}\n */\nBigDecimal.fromNumber = function (value) {\n  if (isNaN(value)) {\n    return new BigDecimal(Integer.ZERO, 0);\n  }\n  let textValue = value.toString();\n  if (textValue.indexOf('e') >= 0) {\n    //get until scale 20\n    textValue = value.toFixed(20);\n  }\n  return BigDecimal.fromString(textValue);\n};\n\n/**\n * Returns true if the value of the BigDecimal instance and other are the same\n * @param {BigDecimal} other\n * @returns {Boolean}\n */\nBigDecimal.prototype.equals = function (other) {\n  return ((other instanceof BigDecimal) && this.compare(other) === 0);\n};\n\nBigDecimal.prototype.inspect = function () {\n  return this.constructor.name + ': ' + this.toString();\n};\n\n/**\n * @param {BigDecimal} other\n * @returns {boolean}\n */\nBigDecimal.prototype.notEquals = function (other) {\n  return !this.equals(other);\n};\n\n/**\n * Compares this BigDecimal with the given one.\n * @param {BigDecimal} other Integer to compare against.\n * @return {number} 0 if they are the same, 1 if the this is greater, and -1\n *     if the given one is greater.\n */\nBigDecimal.prototype.compare = function (other) {\n  const diff = this.subtract(other);\n  if (diff.isNegative()) {\n    return -1;\n  }\n  if (diff.isZero()) {\n    return 0;\n  }\n  return +1;\n};\n\n/**\n * Returns the difference of this and the given BigDecimal.\n * @param {BigDecimal} other The BigDecimal to subtract from this.\n * @return {!BigDecimal} The BigDecimal result.\n */\nBigDecimal.prototype.subtract = function (other) {\n  const first = this;\n  if (first._scale === other._scale) {\n    return new BigDecimal(first._intVal.subtract(other._intVal), first._scale);\n  }\n  let diffScale;\n  let unscaledValue;\n  if (first._scale < other._scale) {\n    //The scale of this is lower\n    diffScale = other._scale - first._scale;\n    //multiple this unScaledValue to compare in the same scale\n    unscaledValue = first._intVal\n      .multiply(Integer.fromNumber(Math.pow(10, diffScale)))\n      .subtract(other._intVal);\n    return new BigDecimal(unscaledValue, other._scale);\n  }\n  //The scale of this is higher\n  diffScale = first._scale - other._scale;\n  //multiple this unScaledValue to compare in the same scale\n  unscaledValue = first._intVal\n    .subtract(\n      other._intVal.multiply(Integer.fromNumber(Math.pow(10, diffScale))));\n  return new BigDecimal(unscaledValue, first._scale);\n};\n\n/**\n * Returns the sum of this and the given <code>BigDecimal</code>.\n * @param {BigDecimal} other The BigDecimal to sum to this.\n * @return {!BigDecimal} The BigDecimal result.\n */\nBigDecimal.prototype.add = function (other) {\n  const first = this;\n  if (first._scale === other._scale) {\n    return new BigDecimal(first._intVal.add(other._intVal), first._scale);\n  }\n  let diffScale;\n  let unscaledValue;\n  if (first._scale < other._scale) {\n    //The scale of this is lower\n    diffScale = other._scale - first._scale;\n    //multiple this unScaledValue to compare in the same scale\n    unscaledValue = first._intVal\n      .multiply(Integer.fromNumber(Math.pow(10, diffScale)))\n      .add(other._intVal);\n    return new BigDecimal(unscaledValue, other._scale);\n  }\n  //The scale of this is higher\n  diffScale = first._scale - other._scale;\n  //multiple this unScaledValue to compare in the same scale\n  unscaledValue = first._intVal\n    .add(\n      other._intVal.multiply(Integer.fromNumber(Math.pow(10, diffScale))));\n  return new BigDecimal(unscaledValue, first._scale);\n};\n\n/**\n * Returns true if the current instance is greater than the other\n * @param {BigDecimal} other\n * @returns {boolean}\n */\nBigDecimal.prototype.greaterThan = function (other) {\n  return this.compare(other) === 1;\n};\n\n/** @return {boolean} Whether this value is negative. */\nBigDecimal.prototype.isNegative = function () {\n  return this._intVal.isNegative();\n};\n\n/** @return {boolean} Whether this value is zero. */\nBigDecimal.prototype.isZero = function () {\n  return this._intVal.isZero();\n};\n\n/**\n * Returns the string representation of this <code>BigDecimal</code>\n * @returns {string}\n */\nBigDecimal.prototype.toString = function () {\n  let intString = this._intVal.toString();\n  if (this._scale === 0) {\n    return intString;\n  }\n  let signSymbol = '';\n  if (intString.charAt(0) === '-') {\n    signSymbol = '-';\n    intString = intString.substr(1);\n  }\n  let separatorIndex = intString.length - this._scale;\n  if (separatorIndex <= 0) {\n    //add zeros at the beginning, plus an additional zero\n    intString = utils.stringRepeat('0', (-separatorIndex) + 1) + intString;\n    separatorIndex = intString.length - this._scale;\n  }\n  return signSymbol + intString.substr(0, separatorIndex) + '.' + intString.substr(separatorIndex);\n};\n\n/**\n * Returns a Number representation of this <code>BigDecimal</code>.\n * @returns {Number}\n */\nBigDecimal.prototype.toNumber = function () {\n  return parseFloat(this.toString());\n};\n\n/**\n * Returns the string representation.\n * Method used by the native JSON.stringify() to serialize this instance.\n */\nBigDecimal.prototype.toJSON = function () {\n  return this.toString();\n};\n\n\nmodule.exports = BigDecimal;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst Long = require('long');\nconst util = require('util');\nconst utils = require('../utils');\n\n/** @module types */\n\n// Reuse the same buffers that should perform slightly better than built-in buffer pool\nconst reusableBuffers = {\n  months: utils.allocBuffer(9),\n  days: utils.allocBuffer(9),\n  nanoseconds: utils.allocBuffer(9)\n};\n\nconst maxInt32 = 0x7FFFFFFF;\nconst longOneThousand = Long.fromInt(1000);\nconst nanosPerMicro = longOneThousand;\nconst nanosPerMilli = longOneThousand.multiply(nanosPerMicro);\nconst nanosPerSecond = longOneThousand.multiply(nanosPerMilli);\nconst nanosPerMinute = Long.fromInt(60).multiply(nanosPerSecond);\nconst nanosPerHour = Long.fromInt(60).multiply(nanosPerMinute);\nconst daysPerWeek = 7;\nconst monthsPerYear = 12;\nconst standardRegex = /(\\d+)(y|mo|w|d|h|s|ms|us|µs|ns|m)/gi;\nconst iso8601Regex = /P((\\d+)Y)?((\\d+)M)?((\\d+)D)?(T((\\d+)H)?((\\d+)M)?((\\d+)S)?)?/;\nconst iso8601WeekRegex = /P(\\d+)W/;\nconst iso8601AlternateRegex = /P(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})/;\n\n/**\n * Creates a new instance of {@link Duration}.\n * @classdesc\n * Represents a duration. A duration stores separately months, days, and seconds due to the fact that the number of\n * days in a month varies, and a day can have 23 or 25 hours if a daylight saving is involved.\n * @param {Number} months The number of months.\n * @param {Number} days The number of days.\n * @param {Number|Long} nanoseconds The number of nanoseconds.\n * @constructor\n */\nfunction Duration(months, days, nanoseconds) {\n  /**\n   * Gets the number of months.\n   * @type {Number}\n   */\n  this.months = months;\n  /**\n   * Gets the number of days.\n   * @type {Number}\n   */\n  this.days = days;\n  /**\n   * Gets the number of nanoseconds represented as a <code>int64</code>.\n   * @type {Long}\n   */\n  this.nanoseconds = typeof nanoseconds === 'number' ? Long.fromNumber(nanoseconds) : nanoseconds;\n}\n\nDuration.prototype.equals = function (other) {\n  if (!(other instanceof Duration)) {\n    return false;\n  }\n  return this.months === other.months &&\n    this.days === other.days &&\n    this.nanoseconds.equals(other.nanoseconds);\n};\n\n/**\n * Serializes the duration and returns the representation of the value in bytes.\n * @returns {Buffer}\n */\nDuration.prototype.toBuffer = function () {\n  const lengthMonths = VIntCoding.writeVInt(Long.fromNumber(this.months), reusableBuffers.months);\n  const lengthDays = VIntCoding.writeVInt(Long.fromNumber(this.days), reusableBuffers.days);\n  const lengthNanoseconds = VIntCoding.writeVInt(this.nanoseconds, reusableBuffers.nanoseconds);\n  const buffer = utils.allocBufferUnsafe(lengthMonths + lengthDays + lengthNanoseconds);\n  reusableBuffers.months.copy(buffer, 0, 0, lengthMonths);\n  let offset = lengthMonths;\n  reusableBuffers.days.copy(buffer, offset, 0, lengthDays);\n  offset += lengthDays;\n  reusableBuffers.nanoseconds.copy(buffer, offset, 0, lengthNanoseconds);\n  return buffer;\n};\n\n/**\n * Returns the string representation of the value.\n * @return {string}\n */\nDuration.prototype.toString = function () {\n  let value = '';\n  function append(dividend, divisor, unit) {\n    if (dividend === 0 || dividend < divisor) {\n      return dividend;\n    }\n    // string concatenation is supposed to be fasted than join()\n    value += (dividend / divisor).toFixed(0) + unit;\n    return dividend % divisor;\n  }\n  function append64(dividend, divisor, unit) {\n    if (dividend.equals(Long.ZERO) || dividend.lessThan(divisor)) {\n      return dividend;\n    }\n    // string concatenation is supposed to be fasted than join()\n    value += dividend.divide(divisor).toString() + unit;\n    return dividend.modulo(divisor);\n  }\n  if (this.months < 0 || this.days < 0 || this.nanoseconds.isNegative()) {\n    value = '-';\n  }\n  let remainder = append(Math.abs(this.months), monthsPerYear, \"y\");\n  append(remainder, 1, \"mo\");\n  append(Math.abs(this.days), 1, \"d\");\n\n  if (!this.nanoseconds.equals(Long.ZERO)) {\n    const nanos = this.nanoseconds.isNegative() ? this.nanoseconds.negate() : this.nanoseconds;\n    remainder = append64(nanos, nanosPerHour, \"h\");\n    remainder = append64(remainder, nanosPerMinute, \"m\");\n    remainder = append64(remainder, nanosPerSecond, \"s\");\n    remainder = append64(remainder, nanosPerMilli, \"ms\");\n    remainder = append64(remainder, nanosPerMicro, \"us\");\n    append64(remainder, Long.ONE, \"ns\");\n  }\n  return value;\n};\n\n/**\n * Creates a new {@link Duration} instance from the binary representation of the value.\n * @param {Buffer} buffer\n * @returns {Duration}\n */\nDuration.fromBuffer = function (buffer) {\n  const offset = { value: 0 };\n  const months = VIntCoding.readVInt(buffer, offset).toNumber();\n  const days = VIntCoding.readVInt(buffer, offset).toNumber();\n  const nanoseconds = VIntCoding.readVInt(buffer, offset);\n  return new Duration(months, days, nanoseconds);\n};\n\n/**\n * Creates a new {@link Duration} instance from the string representation of the value.\n * <p>\n *   Accepted formats:\n * </p>\n * <ul>\n * <li>multiple digits followed by a time unit like: 12h30m where the time unit can be:\n *   <ul>\n *     <li>{@code y}: years</li>\n *     <li>{@code m}: months</li>\n *     <li>{@code w}: weeks</li>\n *     <li>{@code d}: days</li>\n *     <li>{@code h}: hours</li>\n *     <li>{@code m}: minutes</li>\n *     <li>{@code s}: seconds</li>\n *     <li>{@code ms}: milliseconds</li>\n *     <li>{@code us} or {@code µs}: microseconds</li>\n *     <li>{@code ns}: nanoseconds</li>\n *   </ul>\n * </li>\n * <li>ISO 8601 format:  <code>P[n]Y[n]M[n]DT[n]H[n]M[n]S or P[n]W</code></li>\n * <li>ISO 8601 alternative format: <code>P[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss]</code></li>\n * </ul>\n * @param {String} input\n * @returns {Duration}\n */\nDuration.fromString = function (input) {\n  const isNegative = input.charAt(0) === '-';\n  const source = isNegative ? input.substr(1) : input;\n  if (source.charAt(0) === 'P') {\n    if (source.charAt(source.length - 1) === 'W') {\n      return parseIso8601WeekFormat(isNegative, source);\n    }\n    if (source.indexOf('-') > 0) {\n      return parseIso8601AlternativeFormat(isNegative, source);\n    }\n    return parseIso8601Format(isNegative, source);\n  }\n  return parseStandardFormat(isNegative, source);\n};\n\n/**\n * @param {Boolean} isNegative\n * @param {String} source\n * @returns {Duration}\n * @private\n */\nfunction parseStandardFormat(isNegative, source) {\n  const builder = new Builder(isNegative);\n  standardRegex.lastIndex = 0;\n  let matches;\n  while ((matches = standardRegex.exec(source)) && matches.length <= 3) {\n    builder.add(matches[1], matches[2]);\n  }\n  return builder.build();\n}\n\n/**\n * @param {Boolean} isNegative\n * @param {String} source\n * @returns {Duration}\n * @private\n */\nfunction parseIso8601Format(isNegative, source) {\n  const matches = iso8601Regex.exec(source);\n  if (!matches || matches[0] !== source) {\n    throw new TypeError(util.format(\"Unable to convert '%s' to a duration\", source));\n  }\n  const builder = new Builder(isNegative);\n  if (matches[1]) {\n    builder.addYears(matches[2]);\n  }\n  if (matches[3]) {\n    builder.addMonths(matches[4]);\n  }\n  if (matches[5]) {\n    builder.addDays(matches[6]);\n  }\n  if (matches[7]) {\n    if (matches[8]) {\n      builder.addHours(matches[9]);\n    }\n    if (matches[10]) {\n      builder.addMinutes(matches[11]);\n    }\n    if (matches[12]) {\n      builder.addSeconds(matches[13]);\n    }\n  }\n  return builder.build();\n}\n\n/**\n * @param {Boolean} isNegative\n * @param {String} source\n * @returns {Duration}\n * @private\n */\nfunction parseIso8601WeekFormat(isNegative, source) {\n  const matches = iso8601WeekRegex.exec(source);\n  if (!matches || matches[0] !== source) {\n    throw new TypeError(util.format(\"Unable to convert '%s' to a duration\", source));\n  }\n  return new Builder(isNegative)\n    .addWeeks(matches[1])\n    .build();\n}\n\n/**\n * @param {Boolean} isNegative\n * @param {String} source\n * @returns {Duration}\n * @private\n */\nfunction parseIso8601AlternativeFormat(isNegative, source) {\n  const matches = iso8601AlternateRegex.exec(source);\n  if (!matches || matches[0] !== source) {\n    throw new TypeError(util.format(\"Unable to convert '%s' to a duration\", source));\n  }\n  return new Builder(isNegative).addYears(matches[1])\n    .addMonths(matches[2])\n    .addDays(matches[3])\n    .addHours(matches[4])\n    .addMinutes(matches[5])\n    .addSeconds(matches[6])\n    .build();\n}\n\n/**\n * @param {Boolean} isNegative\n * @private\n * @constructor\n */\nfunction Builder(isNegative) {\n  this._isNegative = isNegative;\n  this._unitIndex = 0;\n  this._months = 0;\n  this._days = 0;\n  this._nanoseconds = Long.ZERO;\n  this._addMethods = {\n    'y': this.addYears,\n    'mo': this.addMonths,\n    'w': this.addWeeks,\n    'd': this.addDays,\n    'h': this.addHours,\n    'm': this.addMinutes,\n    's': this.addSeconds,\n    'ms': this.addMillis,\n    // µs\n    '\\u00B5s': this.addMicros,\n    'us': this.addMicros,\n    'ns': this.addNanos\n  };\n  this._unitByIndex = [\n    null, 'years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds', 'milliseconds', 'microseconds',\n    'nanoseconds'\n  ];\n}\n\nBuilder.prototype._validateOrder = function (unitIndex) {\n  if (unitIndex === this._unitIndex) {\n    throw new TypeError(util.format(\"Invalid duration. The %s are specified multiple times\", this._getUnitName(unitIndex)));\n  }\n\n  if (unitIndex <= this._unitIndex) {\n    throw new TypeError(util.format(\"Invalid duration. The %s should be after %s\",\n      this._getUnitName(this._unitIndex),\n      this._getUnitName(unitIndex)));\n  }\n  this._unitIndex = unitIndex;\n};\n\n/**\n * @param {Number} units\n * @param {Number} monthsPerUnit\n */\nBuilder.prototype._validateMonths = function(units, monthsPerUnit) {\n  this._validate32(units, (maxInt32 - this._months) / monthsPerUnit, \"months\");\n};\n\n/**\n * @param {Number} units\n * @param {Number} daysPerUnit\n */\nBuilder.prototype._validateDays = function(units, daysPerUnit) {\n  this._validate32(units, (maxInt32 - this._days) / daysPerUnit, \"days\");\n};\n\n/**\n * @param {Long} units\n * @param {Long} nanosPerUnit\n */\nBuilder.prototype._validateNanos = function(units, nanosPerUnit) {\n  this._validate64(units, Long.MAX_VALUE.subtract(this._nanoseconds).divide(nanosPerUnit), \"nanoseconds\");\n};\n\n/**\n * @param {Number} units\n * @param {Number} limit\n * @param {String} unitName\n */\nBuilder.prototype._validate32 = function(units, limit, unitName) {\n  if (units > limit) {\n    throw new TypeError(util.format('Invalid duration. The total number of %s must be less or equal to %s',\n      unitName,\n      maxInt32));\n  }\n};\n\n/**\n * @param {Long} units\n * @param {Long} limit\n * @param {String} unitName\n */\nBuilder.prototype._validate64 = function(units, limit, unitName) {\n  if (units.greaterThan(limit)) {\n    throw new TypeError(util.format('Invalid duration. The total number of %s must be less or equal to %s',\n      unitName,\n      Long.MAX_VALUE.toString()));\n  }\n};\n\nBuilder.prototype._getUnitName = function(unitIndex) {\n  const name = this._unitByIndex[+unitIndex];\n  if (!name) {\n    throw new Error('unknown unit index: ' + unitIndex);\n  }\n  return name;\n};\n\nBuilder.prototype.add = function (textValue, symbol) {\n  const addMethod = this._addMethods[symbol.toLowerCase()];\n  if (!addMethod) {\n    throw new TypeError(util.format(\"Unknown duration symbol '%s'\", symbol));\n  }\n  return addMethod.call(this, textValue);\n};\n\n/**\n * @param {String|Number} years\n * @return {Builder}\n */\nBuilder.prototype.addYears = function (years) {\n  const value = +years;\n  this._validateOrder(1);\n  this._validateMonths(value, monthsPerYear);\n  this._months += value * monthsPerYear;\n  return this;\n};\n\n/**\n * @param {String|Number} months\n * @return {Builder}\n */\nBuilder.prototype.addMonths = function(months) {\n  const value = +months;\n  this._validateOrder(2);\n  this._validateMonths(value, 1);\n  this._months += value;\n  return this;\n};\n\n/**\n * @param {String|Number} weeks\n * @return {Builder}\n */\nBuilder.prototype.addWeeks = function(weeks) {\n  const value = +weeks;\n  this._validateOrder(3);\n  this._validateDays(value, daysPerWeek);\n  this._days += value * daysPerWeek;\n  return this;\n};\n\n/**\n * @param {String|Number} days\n * @return {Builder}\n */\nBuilder.prototype.addDays = function(days) {\n  const value = +days;\n  this._validateOrder(4);\n  this._validateDays(value, 1);\n  this._days += value;\n  return this;\n};\n\n/**\n * @param {String|Long} hours\n * @return {Builder}\n */\nBuilder.prototype.addHours = function(hours) {\n  const value = typeof hours === 'string' ? Long.fromString(hours) : hours;\n  this._validateOrder(5);\n  this._validateNanos(value, nanosPerHour);\n  this._nanoseconds = this._nanoseconds.add(value.multiply(nanosPerHour));\n  return this;\n};\n\n/**\n * @param {String|Long} minutes\n * @return {Builder}\n */\nBuilder.prototype.addMinutes = function(minutes) {\n  const value = typeof minutes === 'string' ? Long.fromString(minutes) : minutes;\n  this._validateOrder(6);\n  this._validateNanos(value, nanosPerMinute);\n  this._nanoseconds = this._nanoseconds.add(value.multiply(nanosPerMinute));\n  return this;\n};\n\n/**\n * @param {String|Long} seconds\n * @return {Builder}\n */\nBuilder.prototype.addSeconds = function(seconds) {\n  const value = typeof seconds === 'string' ? Long.fromString(seconds) : seconds;\n  this._validateOrder(7);\n  this._validateNanos(value, nanosPerSecond);\n  this._nanoseconds = this._nanoseconds.add(value.multiply(nanosPerSecond));\n  return this;\n};\n\n/**\n * @param {String|Long} millis\n * @return {Builder}\n */\nBuilder.prototype.addMillis = function(millis) {\n  const value = typeof millis === 'string' ? Long.fromString(millis) : millis;\n  this._validateOrder(8);\n  this._validateNanos(value, nanosPerMilli);\n  this._nanoseconds = this._nanoseconds.add(value.multiply(nanosPerMilli));\n  return this;\n};\n\n/**\n * @param {String|Long} micros\n * @return {Builder}\n */\nBuilder.prototype.addMicros = function(micros) {\n  const value = typeof micros === 'string' ? Long.fromString(micros) : micros;\n  this._validateOrder(9);\n  this._validateNanos(value, nanosPerMicro);\n  this._nanoseconds = this._nanoseconds.add(value.multiply(nanosPerMicro));\n  return this;\n};\n\n/**\n * @param {String|Long} nanos\n * @return {Builder}\n */\nBuilder.prototype.addNanos = function(nanos) {\n  const value = typeof nanos === 'string' ? Long.fromString(nanos) : nanos;\n  this._validateOrder(10);\n  this._validateNanos(value, Long.ONE);\n  this._nanoseconds = this._nanoseconds.add(value);\n  return this;\n};\n\n/** @return {Duration} */\nBuilder.prototype.build = function () {\n  return (this._isNegative ?\n    new Duration(-this._months, -this._days, this._nanoseconds.negate()) :\n    new Duration(this._months, this._days, this._nanoseconds));\n};\n\n/**\n * Contains the methods for reading and writing vints into binary format.\n * Exposes only 2 internal methods, the rest are hidden.\n * @private\n */\nconst VIntCoding = (function () {\n  /** @param {Long} n */\n  function encodeZigZag64(n) {\n    //     (n << 1) ^ (n >> 63);\n    return n.toUnsigned().shiftLeft(1).xor(n.shiftRight(63));\n  }\n\n  /** @param {Long} n */\n  function decodeZigZag64(n) {\n    //     (n >>> 1) ^ -(n & 1);\n    return n.shiftRightUnsigned(1).xor(n.and(Long.ONE).negate());\n  }\n\n  /**\n   * @param {Long} value\n   * @param {Buffer} buffer\n   * @returns {Number}\n   */\n  function writeVInt(value, buffer) {\n    return writeUnsignedVInt(encodeZigZag64(value), buffer);\n  }\n\n  /**\n   * @param {Long} value\n   * @param {Buffer} buffer\n   * @returns {number}\n   */\n  function writeUnsignedVInt(value, buffer) {\n    const size = computeUnsignedVIntSize(value);\n    if (size === 1) {\n      buffer[0] = value.getLowBits();\n      return 1;\n    }\n    encodeVInt(value, size, buffer);\n    return size;\n  }\n\n  /**\n   * @param {Long} value\n   * @returns {number}\n   */\n  function computeUnsignedVIntSize(value) {\n    const magnitude = numberOfLeadingZeros(value.or(Long.ONE));\n    return (639 - magnitude * 9) >> 6;\n  }\n\n  /**\n   * @param {Long} value\n   * @param {Number} size\n   * @param {Buffer} buffer\n   */\n  function encodeVInt(value, size, buffer) {\n    const extraBytes = size - 1;\n    let intValue = value.getLowBits();\n    let i;\n    let intBytes = 4;\n    for (i = extraBytes; i >= 0 && (intBytes--) > 0; i--) {\n      buffer[i] = 0xFF & intValue;\n      intValue >>= 8;\n    }\n    intValue = value.getHighBits();\n    for (; i >= 0; i--) {\n      buffer[i] = 0xFF & intValue;\n      intValue >>= 8;\n    }\n    buffer[0] |= encodeExtraBytesToRead(extraBytes);\n  }\n  /**\n   * Returns the number of zero bits preceding the highest-order one-bit in the binary representation of the value.\n   * @param {Long} value\n   * @returns {Number}\n   */\n  function numberOfLeadingZeros(value) {\n    if (value.equals(Long.ZERO)) {\n      return 64;\n    }\n    let n = 1;\n    let x = value.getHighBits();\n    if (x === 0) {\n      n += 32;\n      x = value.getLowBits();\n    }\n    if (x >>> 16 === 0) {\n      n += 16;\n      x <<= 16;\n    }\n    if (x >>> 24 === 0) {\n      n += 8;\n      x <<= 8;\n    }\n    if (x >>> 28 === 0) {\n      n += 4;\n      x <<= 4;\n    }\n    if (x >>> 30 === 0) {\n      n += 2;\n      x <<= 2;\n    }\n    n -= x >>> 31;\n    return n;\n  }\n\n\n  function encodeExtraBytesToRead(extraBytesToRead) {\n    return ~(0xff >> extraBytesToRead);\n  }\n\n  /**\n   * @param {Buffer} buffer\n   * @param {{value: number}} offset\n   * @returns {Long}\n   */\n  function readVInt(buffer, offset) {\n    return decodeZigZag64(readUnsignedVInt(buffer, offset));\n  }\n\n  /**\n   * @param {Buffer} input\n   * @param {{ value: number}} offset\n   * @returns {Long}\n   */\n  function readUnsignedVInt(input, offset) {\n    const firstByte = input[offset.value++];\n    if ((firstByte & 0x80) === 0) {\n      return Long.fromInt(firstByte);\n    }\n    const sByteInt = fromSignedByteToInt(firstByte);\n    const size = numberOfExtraBytesToRead(sByteInt);\n    let result = Long.fromInt(sByteInt & firstByteValueMask(size));\n    for (let ii = 0; ii < size; ii++) {\n      const b = Long.fromInt(input[offset.value++]);\n      //       (result << 8) | b\n      result = result.shiftLeft(8).or(b);\n    }\n    return result;\n  }\n\n  function fromSignedByteToInt(value) {\n    if (value > 0x7f) {\n      return value - 0x0100;\n    }\n    return value;\n  }\n\n  function numberOfLeadingZerosInt32(i) {\n    if (i === 0) {\n      return 32;\n    }\n    let n = 1;\n    if (i >>> 16 === 0) {\n      n += 16;\n      i <<= 16;\n    }\n    if (i >>> 24 === 0) {\n      n += 8;\n      i <<= 8;\n    }\n    if (i >>> 28 === 0) {\n      n += 4;\n      i <<= 4;\n    }\n    if (i >>> 30 === 0) {\n      n += 2;\n      i <<= 2;\n    }\n    n -= i >>> 31;\n    return n;\n  }\n\n  /**\n   * @param {Number} firstByte\n   * @returns {Number}\n   */\n  function numberOfExtraBytesToRead(firstByte) {\n    // Instead of counting 1s of the byte, we negate and count 0 of the byte\n    return numberOfLeadingZerosInt32(~firstByte) - 24;\n  }\n\n  /**\n   * @param {Number} extraBytesToRead\n   * @returns {Number}\n   */\n  function firstByteValueMask(extraBytesToRead) {\n    return 0xff >> extraBytesToRead;\n  }\n\n  return {\n    readVInt: readVInt,\n    writeVInt: writeVInt\n  };\n})();\n\nmodule.exports = Duration;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst utils = require('../utils');\n\n/** @module types */\n/**\n * Creates a new instance of InetAddress\n * @class\n * @classdesc Represents an v4 or v6 Internet Protocol (IP) address.\n * @param {Buffer} buffer\n * @constructor\n */\nfunction InetAddress(buffer) {\n  if (!(buffer instanceof Buffer) || (buffer.length !== 4 && buffer.length !== 16)) {\n    throw new TypeError('The ip address must contain 4 or 16 bytes');\n  }\n\n  /**\n   * Immutable buffer that represents the IP address \n   * @type Array\n   */\n  this.buffer = buffer;\n\n  /**\n   * Returns the length of the underlying buffer\n   * @type Number\n   */\n  this.length = buffer.length;\n\n  /**\n   * Returns the Ip version (4 or 6)\n   * @type Number\n   */\n  this.version = buffer.length === 4 ? 4 : 6;\n}\n\n/**\n * Parses the string representation and returns an Ip address\n * @param {String} value\n */\nInetAddress.fromString = function (value) {\n  if (!value) {\n    return new InetAddress(utils.allocBufferFromArray([0, 0, 0, 0]));\n  }\n  const ipv4Pattern = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\n  const ipv6Pattern = /^[\\da-f:.]+$/i;\n  let parts;\n  if (ipv4Pattern.test(value)) {\n    parts = value.split('.');\n    return new InetAddress(utils.allocBufferFromArray(parts));\n  }\n  if (!ipv6Pattern.test(value)) {\n    throw new TypeError('Value could not be parsed as InetAddress: ' + value);\n  }\n  parts = value.split(':');\n  if (parts.length < 3) {\n    throw new TypeError('Value could not be parsed as InetAddress: ' + value);\n  }\n  const buffer = utils.allocBufferUnsafe(16);\n  let filling = 8 - parts.length + 1;\n  let applied = false;\n  let offset = 0;\n  const embeddedIp4 = ipv4Pattern.test(parts[parts.length - 1]);\n  if (embeddedIp4) {\n    // Its IPv6 address with an embedded IPv4 address:\n    // subtract 1 from the potential empty filling as ip4 contains 4 bytes instead of 2 of a ipv6 section\n    filling -= 1;\n  }\n  function writeItem(uIntValue) {\n    buffer.writeUInt8(+uIntValue, offset++);\n  }\n  for (let i = 0; i < parts.length; i++) {\n    const item = parts[i];\n    if (item) {\n      if (embeddedIp4 && i === parts.length - 1) {\n        item.split('.').forEach(writeItem);\n        break;\n      }\n      buffer.writeUInt16BE(parseInt(item, 16), offset);\n      offset = offset + 2;\n      continue;\n    }\n    //its an empty string\n    if (applied) {\n      //there could be 2 occurrences of empty string\n      filling = 1;\n    }\n    applied = true;\n    for (let j = 0; j < filling; j++) {\n      buffer[offset++] = 0;\n      buffer[offset++] = 0;\n    }\n  }\n  if (embeddedIp4 && !isValidIPv4Mapped(buffer)) {\n    throw new TypeError('Only IPv4-Mapped IPv6 addresses are allowed as IPv6 address with embedded IPv4 address');\n  }\n  return new InetAddress(buffer);\n};\n\n/**\n * Compares 2 addresses and returns true if the underlying bytes are the same\n * @param {InetAddress} other\n * @returns {Boolean}\n */\nInetAddress.prototype.equals = function (other) {\n  if (!(other instanceof InetAddress)) {\n    return false;\n  }\n  return (this.buffer.length === other.buffer.length &&\n    this.buffer.toString('hex') === other.buffer.toString('hex'));\n};\n\n/**\n * Returns the underlying buffer\n * @returns {Buffer}\n */\nInetAddress.prototype.getBuffer = function () {\n  return this.buffer;\n};\n\n/**\n * Provide the name of the constructor and the string representation\n * @returns {string}\n */\nInetAddress.prototype.inspect = function () {\n  return this.constructor.name + ': ' + this.toString();\n};\n\n/**\n * Returns the string representation of the IP address.\n * <p>For v4 IP addresses, a string in the form of d.d.d.d is returned.</p>\n * <p>\n *   For v6 IP addresses, a string in the form of x:x:x:x:x:x:x:x is returned, where the 'x's are the hexadecimal\n *   values of the eight 16-bit pieces of the address, according to rfc5952.\n *   In cases where there is more than one field of only zeros, it can be shortened. For example, 2001:0db8:0:0:0:1:0:1\n *   will be expressed as 2001:0db8::1:0:1.\n * </p>\n * @param {String} [encoding]\n * @returns {String}\n */\nInetAddress.prototype.toString = function (encoding) {\n  if (encoding === 'hex') {\n    //backward compatibility: behave in the same way as the buffer\n    return this.buffer.toString('hex');\n  }\n  if (this.buffer.length === 4) {\n    return (\n      this.buffer[0] + '.' +\n      this.buffer[1] + '.' +\n      this.buffer[2] + '.' +\n      this.buffer[3]\n    );\n  }\n  let start = -1;\n  const longest = { length: 0, start: -1};\n  function checkLongest (i) {\n    if (start >= 0) {\n      //close the group\n      const length = i - start;\n      if (length > longest.length) {\n        longest.length = length;\n        longest.start = start;\n        start = -1;\n      }\n    }\n  }\n  //get the longest 16-bit group of zeros\n  for (let i = 0; i < this.buffer.length; i = i + 2) {\n    if (this.buffer[i] === 0 && this.buffer[i + 1] === 0) {\n      //its a group of zeros\n      if (start < 0) {\n        start = i;\n      }\n\n      // at the end of the buffer, make a final call to checkLongest.\n      if(i === this.buffer.length - 2) {\n        checkLongest(i+2);\n      }\n      continue;\n    }\n    //its a group of non-zeros\n    checkLongest(i);\n  }\n\n  let address = '';\n  for (let h = 0; h < this.buffer.length; h = h + 2) {\n    if (h === longest.start) {\n      address += ':';\n      continue;\n    }\n    if (h < (longest.start + longest.length) && h > longest.start) {\n      //its a group of zeros\n      continue;\n    }\n    if (address.length > 0) {\n      address += ':';\n    }\n    address += ((this.buffer[h] << 8) | this.buffer[h+1]).toString(16);\n  }\n  if (address.charAt(address.length-1) === ':') {\n    address += ':';\n  }\n  return address;\n};\n\n/**\n * Returns the string representation.\n * Method used by the native JSON.stringify() to serialize this instance.\n */\nInetAddress.prototype.toJSON = function () {\n  return this.toString();\n};\n\n/**\n * Validates for a IPv4-Mapped IPv6 according to https://tools.ietf.org/html/rfc4291#section-2.5.5\n * @private\n * @param {Buffer} buffer\n */\nfunction isValidIPv4Mapped(buffer) {\n  // check the form\n  // |      80 bits   | 16 |   32 bits\n  // +----------------+----+-------------\n  // |0000........0000|FFFF| IPv4 address\n\n  for (let i = 0; i < buffer.length - 6; i++) {\n    if (buffer[i] !== 0) {\n      return false;\n    }\n  }\n  return !(buffer[10] !== 255 || buffer[11] !== 255);\n}\n\nmodule.exports = InetAddress;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\n\nconst utils = require('../utils');\n/** @module types */\n\n/**\n * @private\n * @const\n */\nconst millisecondsPerDay = 86400000;\n/**\n * @private\n */\nconst dateCenter = Math.pow(2,31);\n/**\n *\n * Creates a new instance of LocalDate.\n * @class\n * @classdesc A date without a time-zone in the ISO-8601 calendar system, such as 2010-08-05.\n * <p>\n *   LocalDate is an immutable object that represents a date, often viewed as year-month-day. For example, the value \"1st October 2014\" can be stored in a LocalDate.\n * </p>\n * <p>\n *   This class does not store or represent a time or time-zone. Instead, it is a description of the date, as used for birthdays. It cannot represent an instant on the time-line without additional information such as an offset or time-zone.\n * </p>\n * <p>\n *   Note that this type can represent dates in the range [-5877641-06-23; 5881580-07-17] while the ES5 date type can only represent values in the range of [-271821-04-20; 275760-09-13].\n *   In the event that year, month, day parameters do not fall within the ES5 date range an Error will be thrown.  If you wish to represent a date outside of this range, pass a single\n *   parameter indicating the days since epoch.  For example, -1 represents 1969-12-31.\n * </p>\n * @param {Number} year The year or days since epoch.  If days since epoch, month and day should not be provided.\n * @param {Number} month Between 1 and 12 inclusive.\n * @param {Number} day Between 1 and the number of days in the given month of the given year.\n *\n * @property {Date} date The date representation if falls within a range of an ES5 data type, otherwise an invalid date.\n *\n * @constructor\n */\nfunction LocalDate(year, month, day) {\n  //implementation detail: internally uses a UTC based date\n  if (typeof year === 'number' && typeof month === 'number' && typeof day === 'number') {\n    // Use setUTCFullYear as if there is a 2 digit year, Date.UTC() assumes\n    // that is the 20th century.\n    this.date = new Date();\n    this.date.setUTCHours(0, 0, 0, 0);\n    this.date.setUTCFullYear(year, month-1, day);\n    if(isNaN(this.date.getTime())) {\n      throw new Error(util.format('%d-%d-%d does not form a valid ES5 date!',\n        year, month, day));\n    }\n  }\n  else if (typeof month === 'undefined' && typeof day === 'undefined') {\n    if (typeof year === 'number') {\n      //in days since epoch.\n      if(year < -2147483648 || year > 2147483647) {\n        throw new Error('You must provide a valid value for days since epoch (-2147483648 <= value <= 2147483647).');\n      }\n      this.date = new Date(year * millisecondsPerDay);\n    }\n  }\n\n  if (typeof this.date === 'undefined') {\n    throw new Error('You must provide a valid year, month and day');\n  }\n\n  /** \n   * If date cannot be represented yet given a valid days since epoch, track\n   * it internally.\n   */\n  this._value = isNaN(this.date.getTime()) ? year : null;\n\n  /**\n   * A number representing the year.  May return NaN if cannot be represented as\n   * a Date.\n   * @type Number\n   */\n  this.year = this.date.getUTCFullYear();\n  /**\n   * A number between 1 and 12 inclusive representing the month.  May return\n   * NaN if cannot be represented as a Date.\n   * @type Number\n   */\n  this.month = this.date.getUTCMonth() + 1;\n  /**\n   * A number between 1 and the number of days in the given month of the given year (28, 29, 30, 31).\n   * May return NaN if cannot be represented as a Date.\n   * @type Number\n   */\n  this.day = this.date.getUTCDate();\n}\n\n/**\n * Creates a new instance of LocalDate using the current year, month and day from the system clock in the default time-zone.\n */\nLocalDate.now = function () {\n  return LocalDate.fromDate(new Date());\n};\n\n/**\n * Creates a new instance of LocalDate using the current date from the system clock at UTC.\n */\nLocalDate.utcNow = function () {\n  return new LocalDate(Date.now());\n};\n\n\n/**\n * Creates a new instance of LocalDate using the year, month and day from the provided local date time.\n * @param {Date} date\n */\nLocalDate.fromDate = function (date) {\n  if (isNaN(date.getTime())) {\n    throw new TypeError('Invalid date: ' + date);\n  }\n  return new LocalDate(date.getFullYear(), date.getMonth() + 1, date.getDate());\n};\n\n/**\n * Creates a new instance of LocalDate using the year, month and day provided in the form: yyyy-mm-dd or\n * days since epoch (i.e. -1 for Dec 31, 1969).\n * @param {String} value\n */\nLocalDate.fromString = function (value) {\n  const dashCount = (value.match(/-/g) || []).length;\n  if(dashCount >= 2) {\n    let multiplier = 1;\n    if (value[0] === '-') {\n      value = value.substring(1);\n      multiplier = -1;\n    }\n    const parts = value.split('-');\n    return new LocalDate(multiplier * parseInt(parts[0], 10), parseInt(parts[1], 10), parseInt(parts[2], 10));\n  }\n  if(value.match(/^-?\\d+$/)) {\n    // Parse as days since epoch.\n    return new LocalDate(parseInt(value, 10));\n  }\n  throw new Error(\"Invalid input '\" + value + \"'.\");\n};\n\n/**\n * Creates a new instance of LocalDate using the bytes representation.\n * @param {Buffer} buffer\n */\nLocalDate.fromBuffer = function (buffer) {\n  //move to unix epoch: 0.\n  return new LocalDate((buffer.readUInt32BE(0) - dateCenter));\n};\n\n/**\n * Compares this LocalDate with the given one.\n * @param {LocalDate} other date to compare against.\n * @return {number} 0 if they are the same, 1 if the this is greater, and -1\n * if the given one is greater.\n */\nLocalDate.prototype.compare = function (other) {\n  const thisValue = isNaN(this.date.getTime()) ? this._value * millisecondsPerDay : this.date.getTime();\n  const otherValue = isNaN(other.date.getTime()) ? other._value * millisecondsPerDay : other.date.getTime();\n  const diff = thisValue - otherValue;\n  if (diff < 0) {\n    return -1;\n  }\n  if (diff > 0) {\n    return 1;\n  }\n  return 0;\n};\n\n/**\n * Returns true if the value of the LocalDate instance and other are the same\n * @param {LocalDate} other\n * @returns {Boolean}\n */\nLocalDate.prototype.equals = function (other) {\n  return ((other instanceof LocalDate)) && this.compare(other) === 0;\n};\n\nLocalDate.prototype.inspect = function () {\n  return this.constructor.name + ': ' + this.toString();\n};\n\n/**\n * Gets the bytes representation of the instance.\n * @returns {Buffer}\n */\nLocalDate.prototype.toBuffer = function () {\n  //days since unix epoch\n  const daysSinceEpoch = isNaN(this.date.getTime()) ? this._value : Math.floor(this.date.getTime() / millisecondsPerDay);\n  const value = daysSinceEpoch + dateCenter;\n  const buf = utils.allocBufferUnsafe(4);\n  buf.writeUInt32BE(value, 0);\n  return buf;\n};\n\n/**\n * Gets the string representation of the instance in the form: yyyy-mm-dd if\n * the value can be parsed as a Date, otherwise days since epoch.\n * @returns {String}\n */\nLocalDate.prototype.toString = function () {\n  let result;\n  //if cannot be parsed as date, return days since epoch representation.\n  if (isNaN(this.date.getTime())) {\n    return this._value.toString();\n  }\n  if (this.year < 0) {\n    result = '-' + fillZeros((this.year * -1).toString(), 4);\n  }\n  else {\n    result = fillZeros(this.year.toString(), 4);\n  }\n  result += '-' + fillZeros(this.month.toString(), 2) + '-' + fillZeros(this.day.toString(), 2);\n  return result;\n};\n\n/**\n * Gets the string representation of the instance in the form: yyyy-mm-dd, valid for JSON.\n * @returns {String}\n */\nLocalDate.prototype.toJSON = function () {\n  return this.toString();\n};\n\n/**\n * @param {String} value\n * @param {Number} amount\n * @private\n */\nfunction fillZeros(value, amount) {\n  if (value.length >= amount) {\n    return value;\n  }\n  return utils.stringRepeat('0', amount - value.length) + value;\n}\n\nmodule.exports = LocalDate;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst Long = require('long');\nconst util = require('util');\nconst utils = require('../utils');\n/** @module types */\n\n/**\n * @const\n * @private\n * */\nconst maxNanos = Long.fromString('86399999999999');\n/**\n * Nanoseconds in a second\n * @const\n * @private\n * */\nconst nanoSecInSec = Long.fromNumber(1000000000);\n/**\n * Nanoseconds in a millisecond\n * @const\n * @private\n * */\nconst nanoSecInMillis = Long.fromNumber(1000000);\n/**\n * Milliseconds in day\n * @const\n * @private\n * */\nconst millisInDay = 86400000;\n/**\n *\n * Creates a new instance of LocalTime.\n * @class\n * @classdesc A time without a time-zone in the ISO-8601 calendar system, such as 10:30:05.\n * <p>\n *   LocalTime is an immutable date-time object that represents a time, often viewed as hour-minute-second. Time is represented to nanosecond precision. For example, the value \"13:45.30.123456789\" can be stored in a LocalTime.\n * </p>\n * @param {Long} totalNanoseconds Total nanoseconds since midnight.\n * @constructor\n */\nfunction LocalTime(totalNanoseconds) {\n  if (!(totalNanoseconds instanceof Long)) {\n    throw new Error('You must specify a Long value as totalNanoseconds');\n  }\n  if (totalNanoseconds.lessThan(Long.ZERO) || totalNanoseconds.greaterThan(maxNanos)) {\n    throw new Error('Total nanoseconds out of range');\n  }\n  this.value = totalNanoseconds;\n  \n  /**\n   * Gets the hour component of the time represented by the current instance, a number from 0 to 23.\n   * @type Number\n   */\n  this.hour = this._getParts()[0];\n  /**\n   * Gets the minute component of the time represented by the current instance, a number from 0 to 59.\n   * @type Number\n   */\n  this.minute = this._getParts()[1];\n  /**\n   * Gets the second component of the time represented by the current instance, a number from 0 to 59.\n   * @type Number\n   */\n  this.second = this._getParts()[2];\n  /**\n   * Gets the nanoseconds component of the time represented by the current instance, a number from 0 to 999999999.\n   * @type Number\n   */\n  this.nanosecond = this._getParts()[3];\n}\n\n/**\n * Parses an string representation and returns a new LocalDate.\n * @param {String} value\n * @returns {LocalTime}\n */\nLocalTime.fromString = function (value) {\n  if (typeof value !== 'string') {\n    throw new Error('Argument type invalid: ' + util.inspect(value));\n  }\n  const parts = value.split(':');\n  let millis = parseInt(parts[0], 10) * 3600000 + parseInt(parts[1], 10) * 60000;\n  let nanos;\n  if (parts.length === 3) {\n    const secParts = parts[2].split('.');\n    millis += parseInt(secParts[0], 10) * 1000;\n    if (secParts.length === 2) {\n      nanos = secParts[1];\n      //add zeros at the end\n      nanos = nanos + utils.stringRepeat('0', 9 - nanos.length);\n    }\n  }\n  return LocalTime.fromMilliseconds(millis, parseInt(nanos, 10) || 0);\n};\n\n/**\n * Uses the current local time (in milliseconds) and the nanoseconds to create a new instance of LocalTime\n * @param {Number} [nanoseconds] A Number from 0 to 999,999, representing the time nanosecond portion.\n * @returns {LocalTime}\n */\nLocalTime.now = function (nanoseconds) {\n  return LocalTime.fromDate(new Date(), nanoseconds);\n};\n\n/**\n * Uses the provided local time (in milliseconds) and the nanoseconds to create a new instance of LocalTime\n * @param {Date} date Local date portion to extract the time passed since midnight.\n * @param {Number} [nanoseconds] A Number from 0 to 999,999, representing the nanosecond time portion.\n * @returns {LocalTime}\n */\nLocalTime.fromDate = function (date, nanoseconds) {\n  if (!util.isDate(date)) {\n    throw new Error('Not a valid date');\n  }\n  //Use the local representation, only the milliseconds portion\n  const millis = (date.getTime() + date.getTimezoneOffset() * -60000) % millisInDay;\n  return LocalTime.fromMilliseconds(millis, nanoseconds);\n};\n\n/**\n * Uses the provided local time (in milliseconds) and the nanoseconds to create a new instance of LocalTime\n * @param {Number} milliseconds A Number from 0 to 86,399,999.\n * @param {Number} [nanoseconds] A Number from 0 to 999,999, representing the time nanosecond portion.\n * @returns {LocalTime}\n */\nLocalTime.fromMilliseconds = function (milliseconds, nanoseconds) {\n  if (typeof nanoseconds !== 'number') {\n    nanoseconds = 0;\n  }\n  return new LocalTime(Long\n    .fromNumber(milliseconds)\n    .multiply(nanoSecInMillis)\n    .add(Long.fromNumber(nanoseconds)));\n};\n\n/**\n * Creates a new instance of LocalTime from the bytes representation.\n * @param {Buffer} value\n * @returns {LocalTime}\n */\nLocalTime.fromBuffer = function (value) {\n  if (!(value instanceof Buffer)) {\n    throw new TypeError('Expected Buffer, obtained ' + util.inspect(value));\n  }\n  return new LocalTime(new Long(value.readInt32BE(4), value.readInt32BE(0)));\n};\n\n/**\n * Compares this LocalTime with the given one.\n * @param {LocalTime} other time to compare against.\n * @return {number} 0 if they are the same, 1 if the this is greater, and -1\n * if the given one is greater.\n */\nLocalTime.prototype.compare = function (other) {\n  return this.value.compare(other.value);\n};\n\n/**\n * Returns true if the value of the LocalTime instance and other are the same\n * @param {LocalTime} other\n * @returns {Boolean}\n */\nLocalTime.prototype.equals = function (other) {\n  return ((other instanceof LocalTime)) && this.compare(other) === 0;\n};\n\n/**\n * Gets the total amount of nanoseconds since midnight for this instance.\n * @returns {Long}\n */\nLocalTime.prototype.getTotalNanoseconds = function () {\n  return this.value;\n};\n\nLocalTime.prototype.inspect = function () {\n  return this.constructor.name + ': ' + this.toString();\n};\n\n/**\n * Returns a big-endian bytes representation of the instance\n * @returns {Buffer}\n */\nLocalTime.prototype.toBuffer = function () {\n  const buffer = utils.allocBufferUnsafe(8);\n  buffer.writeUInt32BE(this.value.getHighBitsUnsigned(), 0);\n  buffer.writeUInt32BE(this.value.getLowBitsUnsigned(), 4);\n  return buffer;\n};\n\n/**\n * Returns the string representation of the instance in the form of hh:MM:ss.ns\n * @returns {String}\n */\nLocalTime.prototype.toString = function () {\n  return formatTime(this._getParts());\n};\n\n/**\n * Gets the string representation of the instance in the form: hh:MM:ss.ns\n * @returns {String}\n */\nLocalTime.prototype.toJSON = function () {\n  return this.toString();\n};\n\n/**\n * @returns {Array.<Number>}\n * @ignore\n */\nLocalTime.prototype._getParts = function () {\n  if (!this._partsCache) {\n    //hours, minutes, seconds and nanos\n    const parts = [0, 0, 0, 0];\n    const secs = this.value.div(nanoSecInSec);\n    //faster modulo\n    //total nanos\n    parts[3] = this.value.subtract(secs.multiply(nanoSecInSec)).toNumber();\n    //seconds\n    parts[2] = secs.toNumber();\n    if (parts[2] >= 60) {\n      //minutes\n      parts[1] = Math.floor(parts[2] / 60);\n      parts[2] = parts[2] % 60;\n    }\n    if (parts[1] >= 60) {\n      //hours\n      parts[0] = Math.floor(parts[1] / 60);\n      parts[1] = parts[1] % 60;\n    }\n    this._partsCache = parts;\n  }\n  return this._partsCache;\n};\n\n/**\n * @param {Array.<Number>} values\n * @private\n */\nfunction formatTime(values) {\n  let result;\n  if (values[0] < 10) {\n    result = '0' + values[0] + ':';\n  }\n  else {\n    result = values[0] + ':';\n  }\n  if (values[1] < 10) {\n    result += '0' + values[1] + ':';\n  }\n  else {\n    result += values[1] + ':';\n  }\n  if (values[2] < 10) {\n    result += '0' + values[2];\n  }\n  else {\n    result += values[2];\n  }\n  if (values[3] > 0) {\n    let nanos = values[3].toString();\n    //nine digits\n    if (nanos.length < 9) {\n      nanos = utils.stringRepeat('0', 9 - nanos.length) + nanos;\n    }\n    let lastPosition;\n    for (let i = nanos.length - 1; i > 0; i--) {\n      if (nanos[i] !== '0') {\n        break;\n      }\n      lastPosition = i;\n    }\n    if (lastPosition) {\n      nanos = nanos.substring(0, lastPosition);\n    }\n    result += '.' + nanos;\n  }\n  return result;\n}\n\nmodule.exports = LocalTime;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst utils = require('../utils');\nconst errors = require('../errors');\n\nconst asyncIteratorSymbol = Symbol.asyncIterator || '@@asyncIterator';\n\n/** @module types */\n\n/**\n * Creates a new instance of ResultSet.\n * @class\n * @classdesc Represents the result of a query.\n * @param {Object} response\n * @param {String} host\n * @param {Object} triedHosts\n * @param {Number} speculativeExecutions\n * @param {Number} consistency\n * @param {Boolean} isSchemaInAgreement\n * @constructor\n */\nfunction ResultSet(response, host, triedHosts, speculativeExecutions, consistency, isSchemaInAgreement) {\n  // if no execution was made at all, set to 0.\n  if (speculativeExecutions === -1) {\n    speculativeExecutions = 0;\n  }\n  /**\n   * Information on the execution of a successful query:\n   * @member {Object}\n   * @property {Number} achievedConsistency The consistency level that has been actually achieved by the query.\n   * @property {String} queriedHost The Cassandra host that coordinated this query.\n   * @property {Object} triedHosts Gets the associative array of host that were queried before getting a valid response,\n   * being the last host the one that replied correctly.\n   * @property {Object} speculativeExecutions The number of speculative executions (not including the first) executed before\n   * getting a valid response.\n   * @property {Uuid} traceId Identifier of the trace session.\n   * @property {Array.<string>} warnings Warning messages generated by the server when executing the query.\n   * @property {Boolean} isSchemaInAgreement Whether the cluster had reached schema agreement after the execution of\n   * this query.\n   * <p>\n   *   After a successful schema-altering query (ex: creating a table), the driver will check if\n   *   the cluster's nodes agree on the new schema version. If not, it will keep retrying for a given\n   *   delay (see <code>protocolOptions.maxSchemaAgreementWaitSeconds</code>).\n   * </p>\n   * <p>\n   *   Note that the schema agreement check is only performed for schema-altering queries For other\n   *   query types, this method will always return <code>true</code>. If this method returns <code>false</code>,\n   *   clients can call [Metadata.checkSchemaAgreement()]{@link module:metadata~Metadata#checkSchemaAgreement} later to\n   *   perform the check manually.\n   * </p>\n   */\n  this.info = {\n    queriedHost: host,\n    triedHosts: triedHosts,\n    speculativeExecutions: speculativeExecutions,\n    achievedConsistency: consistency,\n    traceId: null,\n    warnings: null,\n    customPayload: null,\n    isSchemaInAgreement\n  };\n\n  if (response.flags) {\n    this.info.traceId = response.flags.traceId;\n    this.info.warnings = response.flags.warnings;\n    this.info.customPayload = response.flags.customPayload;\n  }\n\n  /**\n   * Gets an array rows returned by the query.\n   * When the result set represents a response from a write query, this property will be <code>undefined</code>.\n   * When the read query result contains more rows than the fetch size (5000), this property will only contain the\n   * first rows up to fetch size. To obtain all the rows, you can use the built-in async iterator that will retrieve the\n   * following pages of results.\n   * @type {Array<Row>|undefined}\n   */\n  this.rows = response.rows;\n\n  /**\n   * Gets the row length of the result, regardless if the result has been buffered or not\n   * @type {Number|undefined}\n   */\n  this.rowLength = this.rows ? this.rows.length : response.rowLength;\n\n  /**\n   * Gets the columns returned in this ResultSet.\n   * @type {Array.<{name, type}>}\n   * @default null\n   */\n  this.columns = null;\n\n  /**\n   * A string token representing the current page state of query. It can be used in the following executions to\n   * continue paging and retrieve the remained of the result for the query.\n   * @type {String|null}\n   * @default null\n   */\n  this.pageState = null;\n\n  /**\n   * Method used to manually fetch the next page of results.\n   * This method is only exposed when using the {@link Client#eachRow} method and there are more rows available in\n   * following pages.\n   * @type Function\n   */\n  this.nextPage = undefined;\n\n  /**\n   * Method used internally to fetch the next page of results using promises.\n   * @internal\n   * @ignore\n   * @type {Function}\n   */\n  this.nextPageAsync = undefined;\n\n  const meta = response.meta;\n\n  if (meta) {\n    this.columns = meta.columns;\n\n    if (meta.pageState) {\n      this.pageState = meta.pageState.toString('hex');\n\n      // Expose rawPageState internally\n      Object.defineProperty(this, 'rawPageState', { value: meta.pageState, enumerable: false });\n    }\n  }\n}\n\n/**\n * Returns the first row or null if the result rows are empty.\n */\nResultSet.prototype.first = function () {\n  if (this.rows && this.rows.length) {\n    return this.rows[0];\n  }\n  return null;\n};\n\nResultSet.prototype.getPageState = function () {\n  // backward-compatibility\n  return this.pageState;\n};\n\nResultSet.prototype.getColumns = function () {\n  // backward-compatibility\n  return this.columns;\n};\n\n/**\n * When this instance is the result of a conditional update query, it returns whether it was successful.\n * Otherwise, it returns <code>true</code>.\n * <p>\n *   For consistency, this method always returns <code>true</code> for non-conditional queries (although there is\n *   no reason to call the method in that case). This is also the case for conditional DDL statements\n *   (CREATE KEYSPACE... IF NOT EXISTS, CREATE TABLE... IF NOT EXISTS), for which the server doesn't return\n *   information whether it was applied or not.\n * </p>\n */\nResultSet.prototype.wasApplied = function () {\n  if (!this.rows || this.rows.length === 0) {\n    return true;\n  }\n  const firstRow = this.rows[0];\n  const applied = firstRow['[applied]'];\n  return typeof applied === 'boolean' ? applied : true;\n};\n\n/**\n * Gets the iterator function.\n * <p>\n *   Retrieves the iterator of the underlying fetched rows, without causing the driver to fetch the following\n *   result pages. For more information on result paging,\n *   [visit the documentation]{@link http://docs.datastax.com/en/developer/nodejs-driver/latest/features/paging/}.\n * </p>\n * @alias module:types~ResultSet#@@iterator\n * @see {@link module:types~ResultSet#@@asyncIterator}\n * @example <caption>Using for...of statement</caption>\n * const query = 'SELECT user_id, post_id, content FROM timeline WHERE user_id = ?';\n * const result = await client.execute(query, [ id ], { prepare: true });\n * for (const row of result) {\n *   console.log(row['email']);\n * }\n * @returns {Iterator.<Row>}\n */\nResultSet.prototype[Symbol.iterator] = function getIterator() {\n  if (!this.rows) {\n    return utils.emptyArray[Symbol.iterator]();\n  }\n  return this.rows[Symbol.iterator]();\n};\n\n/**\n * Gets the async iterator function.\n * <p>\n *   Retrieves the async iterator representing the entire query result, the driver will fetch the following result\n *   pages.\n * </p>\n * <p>Use the async iterator when the query result might contain more rows than the <code>fetchSize</code>.</p>\n * <p>\n *   Note that using the async iterator will not affect the internal state of the <code>ResultSet</code> instance.\n *   You should avoid using both <code>rows</code> property that contains the row instances of the first page of\n *   results, and the async iterator, that will yield all the rows in the result regardless on the number of pages.\n * </p>\n * <p>Multiple concurrent async iterations are not supported.</p>\n * @alias module:types~ResultSet#@@asyncIterator\n * @example <caption>Using for await...of statement</caption>\n * const query = 'SELECT user_id, post_id, content FROM timeline WHERE user_id = ?';\n * const result = await client.execute(query, [ id ], { prepare: true });\n * for await (const row of result) {\n *   console.log(row['email']);\n * }\n * @returns {AsyncIterator<Row>}\n */\nResultSet.prototype[asyncIteratorSymbol] = function getAsyncGenerator() {\n  let index = 0;\n  let pageState = this.rawPageState;\n  let rows = this.rows;\n\n  if (!rows || rows.length === 0) {\n    return { next: () => Promise.resolve({ done: true }) };\n  }\n\n  const self = this;\n\n  // Async generators are not present in Node.js 8, implement it manually\n  return {\n    async next() {\n      if (index >= rows.length && pageState) {\n        if (!self.nextPageAsync) {\n          throw new errors.DriverInternalError('Property nextPageAsync should be set when pageState is defined');\n        }\n\n        const rs = await self.nextPageAsync(pageState);\n        rows = rs.rows;\n        index = 0;\n        pageState = rs.rawPageState;\n      }\n\n      if (index < rows.length) {\n        return { done: false, value: rows[index++] };\n      }\n\n      return { done: true };\n    }\n  };\n};\n\n/**\n * Determines whether there are more pages of results.\n * If so, the driver will initially retrieve and contain only the first page of results.\n * To obtain all the rows, use the [AsyncIterator]{@linkcode module:types~ResultSet#@@asyncIterator}.\n * @returns {boolean}\n */\nResultSet.prototype.isPaged = function() {\n  return !!this.rawPageState;\n};\n\nmodule.exports = ResultSet;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst { Readable } = require('stream');\nconst utils = require('../utils');\nconst errors = require('../errors');\nconst clientOptions = require('../client-options');\n\n/** @module types */\n/**\n * Readable stream using to yield data from a result or a field\n */\nclass ResultStream extends Readable {\n  constructor(opt) {\n    super(opt);\n    this.buffer = [];\n    this.paused = true;\n    this._cancelAllowed = false;\n    this._handlersObject = null;\n    this._highWaterMarkRows = 0;\n  }\n\n  _read() {\n    this.paused = false;\n    if (this.buffer.length === 0) {\n      this._readableState.reading = false;\n    }\n    while (!this.paused && this.buffer.length > 0) {\n      this.paused = !this.push(this.buffer.shift());\n    }\n    this._checkBelowHighWaterMark();\n    if (!this.paused && !this.buffer.length && this._readNext) {\n      this._readNext();\n      this._readNext = null;\n    }\n  }\n\n  /**\n   * Allows for throttling, helping nodejs keep the internal buffers reasonably sized.\n   * @param {function} readNext function that triggers reading the next result chunk\n   * @ignore\n   */\n  _valve(readNext) {\n    this._readNext = null;\n    if (!readNext) {\n      return;\n    }\n    if (this.paused || this.buffer.length) {\n      this._readNext = readNext;\n    }\n    else {\n      readNext();\n    }\n  }\n\n  add(chunk) {\n    const length = this.buffer.push(chunk);\n    this.read(0);\n    this._checkAboveHighWaterMark();\n    return length;\n  }\n\n  _checkAboveHighWaterMark() {\n    if (!this._handlersObject || !this._handlersObject.resumeReadingHandler) {\n      return;\n    }\n    if (this._highWaterMarkRows === 0 || this.buffer.length !== this._highWaterMarkRows) {\n      return;\n    }\n    this._handlersObject.resumeReadingHandler(false);\n  }\n\n  _checkBelowHighWaterMark() {\n    if (!this._handlersObject || !this._handlersObject.resumeReadingHandler) {\n      return;\n    }\n    if (this._highWaterMarkRows === 0 || this.buffer.length >= this._highWaterMarkRows) {\n      return;\n    }\n    // The consumer has dequeued below the watermark\n    this._handlersObject.resumeReadingHandler(true);\n  }\n\n  /**\n   * When continuous paging is enabled, allows the client to notify to the server to stop pushing further pages.\n   * <p>Note: This is not part of the public API yet.</p>\n   * @param {Function} [callback] The cancel method accepts an optional callback.\n   * @example <caption>Cancelling a continuous paging execution</caption>\n   * const stream = client.stream(query, params, { prepare: true, continuousPaging: true });\n   * // ...\n   * // Ask the server to stop pushing rows.\n   * stream.cancel();\n   * @ignore\n   */\n  cancel(callback) {\n    if (!this._cancelAllowed) {\n      const err = new Error('You can only cancel streaming executions when continuous paging is enabled');\n      if (!callback) {\n        throw err;\n      }\n      return callback(err);\n    }\n    if (!this._handlersObject) {\n      throw new errors.DriverInternalError('ResultStream cancel is allowed but the cancel options were not set');\n    }\n    callback = callback || utils.noop;\n    if (!this._handlersObject.cancelHandler) {\n      // The handler is not yet set\n      // Set the callback as a flag to identify that the cancel handler must be invoked when set\n      this._handlersObject.cancelHandler = callback;\n      return;\n    }\n    this._handlersObject.cancelHandler(callback);\n  }\n\n  /**\n   * Sets the pointer to the handler to be used to cancel the continuous page execution.\n   * @param options\n   * @internal\n   * @ignore\n   */\n  setHandlers(options) {\n    if (!options.continuousPaging) {\n      return;\n    }\n    this._cancelAllowed = true;\n    this._handlersObject = options;\n    this._highWaterMarkRows =\n      options.continuousPaging.highWaterMarkRows || clientOptions.continuousPageDefaultHighWaterMark;\n  }\n}\n\nmodule.exports = ResultStream;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n/** @module types */\n/**\n * Represents a result row\n * @param {Array} columns\n * @constructor\n */\nfunction Row(columns) {\n  if (!columns) {\n    throw new Error('Columns not defined');\n  }\n  //Private non-enumerable properties, with double underscore to avoid interfering with column names\n  Object.defineProperty(this, '__columns', { value: columns, enumerable: false, writable: false});\n}\n\n/**\n * Returns the cell value.\n * @param {String|Number} columnName Name or index of the column\n */\nRow.prototype.get = function (columnName) {\n  if (typeof columnName === 'number') {\n    //its an index\n    return this[this.__columns[columnName].name];\n  }\n  return this[columnName];\n};\n\n/**\n * Returns an array of the values of the row\n * @returns {Array}\n */\nRow.prototype.values = function () {\n  const valuesArray = [];\n  this.forEach(function (val) {\n    valuesArray.push(val);\n  });\n  return valuesArray;\n};\n\n/**\n * Returns an array of the column names of the row\n * @returns {Array}\n */\nRow.prototype.keys = function () {\n  const keysArray = [];\n  this.forEach(function (val, key) {\n    keysArray.push(key);\n  });\n  return keysArray;\n};\n\n/**\n * Executes the callback for each field in the row, containing the value as first parameter followed by the columnName\n * @param {Function} callback\n */\nRow.prototype.forEach = function (callback) {\n  for (const columnName in this) {\n    if (!this.hasOwnProperty(columnName)) {\n      continue;\n    }\n    callback(this[columnName], columnName);\n  }\n};\n\nmodule.exports = Row;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/** @module types */\n\n/**\n * Creates a new sequence of immutable objects with the parameters provided.\n * @class\n * @classdesc A tuple is a sequence of immutable objects.\n * Tuples are sequences, just like [Arrays]{@link Array}. The only difference is that tuples can't be changed.\n * <p>\n *   As tuples can be used as a Map keys, the {@link Tuple#toString toString()} method calls toString of each element,\n *   to try to get a unique string key.\n * </p>\n * @param args The sequence elements as arguments.\n * @constructor\n */\nfunction Tuple(...args) {\n\n  /**\n   * Immutable elements of Tuple object.\n   * @type Array\n   */\n  this.elements = args;\n\n  if (this.elements.length === 0) {\n    throw new TypeError('Tuple must contain at least one value');\n  }\n\n  /**\n   * Returns the number of the elements.\n   * @type Number\n   */\n  this.length = this.elements.length;\n}\n\n/**\n * Creates a new instance of a tuple based on the Array\n * @param {Array} elements\n * @returns {Tuple}\n */\nTuple.fromArray = function (elements) {\n  // Apply the elements Array as parameters\n  return new Tuple(...elements);\n};\n\n/**\n * Returns the value located at the index.\n * @param {Number} index Element index\n */\nTuple.prototype.get = function (index) {\n  return this.elements[index || 0];\n};\n\n/**\n * Returns the string representation of the sequence surrounded by parenthesis, ie: (1, 2).\n * <p>\n *   The returned value attempts to be a unique string representation of its values.\n * </p>\n * @returns {string}\n */\nTuple.prototype.toString = function () {\n  return ('(' +\n    this.elements.reduce(function (prev, x, i) {\n      return prev + (i > 0 ? ',' : '') + x.toString();\n    }, '') +\n    ')');\n};\n\n/**\n * Returns the Array representation of the sequence.\n * @returns {Array}\n */\nTuple.prototype.toJSON = function () {\n  return this.elements;\n};\n\n/**\n * Gets the elements as an array\n * @returns {Array}\n */\nTuple.prototype.values = function () {\n  // Clone the elements\n  return this.elements.slice(0);\n};\n\nmodule.exports = Tuple;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\n\nconst errors = require('../errors');\nconst TimeUuid = require('./time-uuid');\nconst Uuid = require('./uuid');\nconst protocolVersion = require('./protocol-version');\nconst utils = require('../utils');\n\n/** @module types */\n/**\n * Long constructor, wrapper of the internal library used: {@link https://github.com/dcodeIO/long.js Long.js}.\n * @constructor\n */\nconst Long = require('long');\n\n\n/**\n * Consistency levels\n * @type {Object}\n * @property {Number} any Writing: A write must be written to at least one node. If all replica nodes for the given row key are down, the write can still succeed after a hinted handoff has been written. If all replica nodes are down at write time, an ANY write is not readable until the replica nodes for that row have recovered.\n * @property {Number} one Returns a response from the closest replica, as determined by the snitch.\n * @property {Number} two Returns the most recent data from two of the closest replicas.\n * @property {Number} three Returns the most recent data from three of the closest replicas.\n * @property {Number} quorum Reading: Returns the record with the most recent timestamp after a quorum of replicas has responded regardless of data center. Writing: A write must be written to the commit log and memory table on a quorum of replica nodes.\n * @property {Number} all Reading: Returns the record with the most recent timestamp after all replicas have responded. The read operation will fail if a replica does not respond. Writing: A write must be written to the commit log and memory table on all replica nodes in the cluster for that row.\n * @property {Number} localQuorum Reading: Returns the record with the most recent timestamp once a quorum of replicas in the current data center as the coordinator node has reported. Writing: A write must be written to the commit log and memory table on a quorum of replica nodes in the same data center as the coordinator node. Avoids latency of inter-data center communication.\n * @property {Number} eachQuorum Reading: Returns the record once a quorum of replicas in each data center of the cluster has responded. Writing: Strong consistency. A write must be written to the commit log and memtable on a quorum of replica nodes in all data centers.\n * @property {Number} serial Achieves linearizable consistency for lightweight transactions by preventing unconditional updates.\n * @property {Number} localSerial Same as serial but confined to the data center. A write must be written conditionally to the commit log and memtable on a quorum of replica nodes in the same data center.\n * @property {Number} localOne Similar to One but only within the DC the coordinator is in.\n */\nconst consistencies = {\n  any:          0x00,\n  one:          0x01,\n  two:          0x02,\n  three:        0x03,\n  quorum:       0x04,\n  all:          0x05,\n  localQuorum:  0x06,\n  eachQuorum:   0x07,\n  serial:       0x08,\n  localSerial:  0x09,\n  localOne:     0x0a\n};\n\n/**\n * Mapping of consistency level codes to their string representation.\n * @type {Object}\n */\nconst consistencyToString = {};\nconsistencyToString[consistencies.any] = 'ANY';\nconsistencyToString[consistencies.one] = 'ONE';\nconsistencyToString[consistencies.two] = 'TWO';\nconsistencyToString[consistencies.three] = 'THREE';\nconsistencyToString[consistencies.quorum] = 'QUORUM';\nconsistencyToString[consistencies.all] = 'ALL';\nconsistencyToString[consistencies.localQuorum] = 'LOCAL_QUORUM';\nconsistencyToString[consistencies.eachQuorum] = 'EACH_QUORUM';\nconsistencyToString[consistencies.serial] = 'SERIAL';\nconsistencyToString[consistencies.localSerial] = 'LOCAL_SERIAL';\nconsistencyToString[consistencies.localOne] = 'LOCAL_ONE';\n\n/**\n * CQL data types\n * @type {Object}\n * @property {Number} custom A custom type.\n * @property {Number} ascii ASCII character string.\n * @property {Number} bigint 64-bit signed long.\n * @property {Number} blob Arbitrary bytes (no validation).\n * @property {Number} boolean true or false.\n * @property {Number} counter Counter column (64-bit signed value).\n * @property {Number} decimal Variable-precision decimal.\n * @property {Number} double 64-bit IEEE-754 floating point.\n * @property {Number} float 32-bit IEEE-754 floating point.\n * @property {Number} int 32-bit signed integer.\n * @property {Number} text UTF8 encoded string.\n * @property {Number} timestamp A timestamp.\n * @property {Number} uuid Type 1 or type 4 UUID.\n * @property {Number} varchar UTF8 encoded string.\n * @property {Number} varint Arbitrary-precision integer.\n * @property {Number} timeuuid  Type 1 UUID.\n * @property {Number} inet An IP address. It can be either 4 bytes long (IPv4) or 16 bytes long (IPv6).\n * @property {Number} date A date without a time-zone in the ISO-8601 calendar system.\n * @property {Number} time A value representing the time portion of the day.\n * @property {Number} smallint 16-bit two's complement integer.\n * @property {Number} tinyint 8-bit two's complement integer.\n * @property {Number} list A collection of elements.\n * @property {Number} map Key/value pairs.\n * @property {Number} set A collection that contains no duplicate elements.\n * @property {Number} udt User-defined type.\n * @property {Number} tuple A sequence of values.\n */\nconst dataTypes = {\n  custom:     0x0000,\n  ascii:      0x0001,\n  bigint:     0x0002,\n  blob:       0x0003,\n  boolean:    0x0004,\n  counter:    0x0005,\n  decimal:    0x0006,\n  double:     0x0007,\n  float:      0x0008,\n  int:        0x0009,\n  text:       0x000a,\n  timestamp:  0x000b,\n  uuid:       0x000c,\n  varchar:    0x000d,\n  varint:     0x000e,\n  timeuuid:   0x000f,\n  inet:       0x0010,\n  date:       0x0011,\n  time:       0x0012,\n  smallint:   0x0013,\n  tinyint:    0x0014,\n  duration:   0x0015,\n  list:       0x0020,\n  map:        0x0021,\n  set:        0x0022,\n  udt:        0x0030,\n  tuple:      0x0031,\n  /**\n   * Returns the typeInfo of a given type name\n   * @param name\n   * @returns {{code: number, info: *|Object}}\n   */\n  getByName:  function(name) {\n    name = name.toLowerCase();\n    if (name.indexOf('<') > 0) {\n      const listMatches = /^(list|set)<(.+)>$/.exec(name);\n      if (listMatches) {\n        return { code: this[listMatches[1]], info: this.getByName(listMatches[2])};\n      }\n      const mapMatches = /^(map)< *(.+) *, *(.+)>$/.exec(name);\n      if (mapMatches) {\n        return { code: this[mapMatches[1]], info: [this.getByName(mapMatches[2]), this.getByName(mapMatches[3])]};\n      }\n      const udtMatches = /^(udt)<(.+)>$/.exec(name);\n      if (udtMatches) {\n        //udt name as raw string\n        return { code: this[udtMatches[1]], info: udtMatches[2]};\n      }\n      const tupleMatches = /^(tuple)<(.+)>$/.exec(name);\n      if (tupleMatches) {\n        //tuple info as an array of types\n        return { code: this[tupleMatches[1]], info: tupleMatches[2].split(',').map(function (x) {\n          return this.getByName(x.trim());\n        }, this)};\n      }\n    }\n    const typeInfo = { code: this[name], info: null};\n    if (typeof typeInfo.code !== 'number') {\n      throw new TypeError('Data type with name ' + name + ' not valid');\n    }\n    return typeInfo;\n  }\n};\n\n/**\n * Map of Data types by code\n * @internal\n * @private\n */\nconst _dataTypesByCode = (function () {\n  const result = {};\n  for (const key in dataTypes) {\n    if (!dataTypes.hasOwnProperty(key)) {\n      continue;\n    }\n    const val = dataTypes[key];\n    if (typeof val !== 'number') {\n      continue;\n    }\n    result[val] = key;\n  }\n  return result;\n})();\n\n/**\n * Represents the distance of Cassandra node as assigned by a LoadBalancingPolicy relatively to the driver instance.\n * @type {Object}\n * @property {Number} local A local node.\n * @property {Number} remote A remote node.\n * @property {Number} ignored A node that is meant to be ignored.\n */\nconst distance = {\n  local:    0,\n  remote:   1,\n  ignored:  2\n};\n\n/**\n * An integer byte that distinguish the actual message from and to Cassandra\n * @internal\n * @ignore\n */\nconst opcodes = {\n  error:          0x00,\n  startup:        0x01,\n  ready:          0x02,\n  authenticate:   0x03,\n  credentials:    0x04,\n  options:        0x05,\n  supported:      0x06,\n  query:          0x07,\n  result:         0x08,\n  prepare:        0x09,\n  execute:        0x0a,\n  register:       0x0b,\n  event:          0x0c,\n  batch:          0x0d,\n  authChallenge:  0x0e,\n  authResponse:   0x0f,\n  authSuccess:    0x10,\n  cancel:         0xff,\n\n  /**\n   * Determines if the code is a valid opcode\n   */\n  isInRange: function (code) {\n    return code > this.error && code > this.event;\n  }\n};\n\n/**\n * Event types from Cassandra\n * @type {{topologyChange: string, statusChange: string, schemaChange: string}}\n * @internal\n * @ignore\n */\nconst protocolEvents = {\n  topologyChange: 'TOPOLOGY_CHANGE',\n  statusChange: 'STATUS_CHANGE',\n  schemaChange: 'SCHEMA_CHANGE'\n};\n\n/**\n * Server error codes returned by Cassandra\n * @type {Object}\n * @property {Number} serverError Something unexpected happened.\n * @property {Number} protocolError Some client message triggered a protocol violation.\n * @property {Number} badCredentials Authentication was required and failed.\n * @property {Number} unavailableException Raised when coordinator knows there is not enough replicas alive to perform a query with the requested consistency level.\n * @property {Number} overloaded The request cannot be processed because the coordinator is overloaded.\n * @property {Number} isBootstrapping The request was a read request but the coordinator node is bootstrapping.\n * @property {Number} truncateError Error encountered during a truncate request.\n * @property {Number} writeTimeout Timeout encountered on write query on coordinator waiting for response(s) from replicas.\n * @property {Number} readTimeout Timeout encountered on read query on coordinator waitign for response(s) from replicas.\n * @property {Number} readFailure A non-timeout error encountered during a read request.\n * @property {Number} functionFailure A (user defined) function encountered during execution.\n * @property {Number} writeFailure A non-timeout error encountered during a write request.\n * @property {Number} syntaxError The submitted query has a syntax error.\n * @property {Number} unauthorized The logged user doesn't have the right to perform the query.\n * @property {Number} invalid The query is syntactically correct but invalid.\n * @property {Number} configError The query is invalid because of some configuration issue.\n * @property {Number} alreadyExists The query attempted to create a schema element (i.e. keyspace, table) that already exists.\n * @property {Number} unprepared Can be thrown while a prepared statement tries to be executed if the provided statement is not known by the coordinator.\n */\nconst responseErrorCodes = {\n  serverError:            0x0000,\n  protocolError:          0x000A,\n  badCredentials:         0x0100,\n  unavailableException:   0x1000,\n  overloaded:             0x1001,\n  isBootstrapping:        0x1002,\n  truncateError:          0x1003,\n  writeTimeout:           0x1100,\n  readTimeout:            0x1200,\n  readFailure:            0x1300,\n  functionFailure:        0x1400,\n  writeFailure:           0x1500,\n  syntaxError:            0x2000,\n  unauthorized:           0x2100,\n  invalid:                0x2200,\n  configError:            0x2300,\n  alreadyExists:          0x2400,\n  unprepared:             0x2500,\n  clientWriteFailure:     0x8000,\n};\n\n/**\n * Type of result included in a response\n * @internal\n * @ignore\n */\nconst resultKind = {\n  voidResult:      0x0001,\n  rows:            0x0002,\n  setKeyspace:     0x0003,\n  prepared:        0x0004,\n  schemaChange:    0x0005\n};\n\n/**\n * Message frame flags\n * @internal\n * @ignore\n */\nconst frameFlags = {\n  compression:    0x01,\n  tracing:        0x02,\n  customPayload:  0x04,\n  warning:        0x08\n};\n\n/**\n * Unset representation.\n * <p>\n *   Use this field if you want to set a parameter to <code>unset</code>. Valid for Cassandra 2.2 and above.\n * </p>\n */\nconst unset = Object.freeze({'unset': true});\n\n/**\n * A long representing the value 1000\n * @const\n * @private\n */\nconst _longOneThousand = Long.fromInt(1000);\n\n/**\n * Counter used to generate up to 1000 different timestamp values with the same Date\n * @private\n */\nlet _timestampTicks = 0;\n\n/**\n * <p><strong>Backward compatibility only, use [TimeUuid]{@link module:types~TimeUuid} instead</strong>.</p>\n * Generates and returns a RFC4122 v1 (timestamp based) UUID in a string representation.\n * @param {{msecs, node, clockseq, nsecs}} [options]\n * @param {Buffer} [buffer]\n * @param {Number} [offset]\n * @deprecated Use [TimeUuid]{@link module:types~TimeUuid} instead\n */\nfunction timeuuid(options, buffer, offset) {\n  let date;\n  let ticks;\n  let nodeId;\n  let clockId;\n  if (options) {\n    if (typeof options.msecs === 'number') {\n      date = new Date(options.msecs);\n    }\n    if (options.msecs instanceof Date) {\n      date = options.msecs;\n    }\n    if (Array.isArray(options.node)) {\n      nodeId = utils.allocBufferFromArray(options.node);\n    }\n    if (typeof options.clockseq === 'number') {\n      clockId = utils.allocBufferUnsafe(2);\n      clockId.writeUInt16BE(options.clockseq, 0);\n    }\n    if (typeof options.nsecs === 'number') {\n      ticks = options.nsecs;\n    }\n  }\n  const uuid = new TimeUuid(date, ticks, nodeId, clockId);\n  if (buffer instanceof Buffer) {\n    //copy the values into the buffer\n    uuid.getBuffer().copy(buffer, offset || 0);\n    return buffer;\n  }\n  return uuid.toString();\n}\n\n/**\n * <p><strong>Backward compatibility only, use [Uuid]{@link module:types~Uuid} class instead</strong>.</p>\n * Generate and return a RFC4122 v4 UUID in a string representation.\n * @deprecated Use [Uuid]{@link module:types~Uuid} class instead\n */\nfunction uuid(options, buffer, offset) {\n  let uuid;\n  if (options) {\n    if (Array.isArray(options.random)) {\n      uuid = new Uuid(utils.allocBufferFromArray(options.random));\n    }\n  }\n  if (!uuid) {\n    uuid = Uuid.random();\n  }\n  if (buffer instanceof Buffer) {\n    //copy the values into the buffer\n    uuid.getBuffer().copy(buffer, offset || 0);\n    return buffer;\n  }\n  return uuid.toString();\n}\n\n/**\n * Gets the data type name for a given type definition\n * @internal\n * @ignore\n * @throws {ArgumentError}\n */\nfunction getDataTypeNameByCode(item) {\n  if (!item || typeof item.code !== 'number') {\n    throw new errors.ArgumentError('Invalid signature type definition');\n  }\n  const typeName = _dataTypesByCode[item.code];\n  if (!typeName) {\n    throw new errors.ArgumentError(util.format('Type with code %d not found', item.code));\n  }\n  if (!item.info) {\n    return typeName;\n  }\n  if (Array.isArray(item.info)) {\n    return (typeName +\n      '<' +\n      item.info.map(function (t) {\n        return getDataTypeNameByCode(t);\n      }).join(', ') +\n      '>');\n  }\n  if (typeof item.info.code === 'number') {\n    return typeName + '<' + getDataTypeNameByCode(item.info) + '>';\n  }\n  return typeName;\n}\n\n//classes\n\n/**\n * Represents a frame header that could be used to read from a Buffer or to write to a Buffer\n * @ignore\n * @param {Number} version Protocol version\n * @param {Number} flags\n * @param {Number} streamId\n * @param {Number} opcode\n * @param {Number} bodyLength\n * @constructor\n */\nfunction FrameHeader(version, flags, streamId, opcode, bodyLength) {\n  this.version = version;\n  this.flags = flags;\n  this.streamId = streamId;\n  this.opcode = opcode;\n  this.bodyLength = bodyLength;\n}\n\n/**\n * The length of the header of the frame based on the protocol version\n * @returns {Number}\n */\nFrameHeader.size = function (version) {\n  if (protocolVersion.uses2BytesStreamIds(version)) {\n    return 9;\n  }\n  return 8;\n};\n\n/**\n * Gets the protocol version based on the first byte of the header\n * @param {Buffer} buffer\n * @returns {Number}\n */\nFrameHeader.getProtocolVersion = function (buffer) {\n  return buffer[0] & 0x7F;\n};\n\n/**\n * @param {Buffer} buf\n * @param {Number} [offset]\n * @returns {FrameHeader}\n */\nFrameHeader.fromBuffer = function (buf, offset) {\n  let streamId = 0;\n  if (!offset) {\n    offset = 0;\n  }\n  const version = buf[offset++] & 0x7F;\n  const flags = buf.readUInt8(offset++);\n  if (!protocolVersion.uses2BytesStreamIds(version)) {\n    streamId = buf.readInt8(offset++);\n  }\n  else {\n    streamId = buf.readInt16BE(offset);\n    offset += 2;\n  }\n  return new FrameHeader(version, flags, streamId, buf.readUInt8(offset++), buf.readUInt32BE(offset));\n};\n\n/** @returns {Buffer} */\nFrameHeader.prototype.toBuffer = function () {\n  const buf = utils.allocBufferUnsafe(FrameHeader.size(this.version));\n  buf.writeUInt8(this.version, 0);\n  buf.writeUInt8(this.flags, 1);\n  let offset = 3;\n  if (!protocolVersion.uses2BytesStreamIds(this.version)) {\n    buf.writeInt8(this.streamId, 2);\n  }\n  else {\n    buf.writeInt16BE(this.streamId, 2);\n    offset = 4;\n  }\n  buf.writeUInt8(this.opcode, offset++);\n  buf.writeUInt32BE(this.bodyLength, offset);\n  return buf;\n};\n/**\n * Returns a long representation.\n * Used internally for deserialization\n */\nLong.fromBuffer = function (value) {\n  if (!(value instanceof Buffer)) {\n    throw new TypeError('Expected Buffer, obtained ' + util.inspect(value));\n  }\n  return new Long(value.readInt32BE(4), value.readInt32BE(0));\n};\n\n/**\n * Returns a big-endian buffer representation of the Long instance\n * @param {Long} value\n */\nLong.toBuffer = function (value) {\n  if (!(value instanceof Long)) {\n    throw new TypeError('Expected Long, obtained ' + util.inspect(value));\n  }\n  const buffer = utils.allocBufferUnsafe(8);\n  buffer.writeUInt32BE(value.getHighBitsUnsigned(), 0);\n  buffer.writeUInt32BE(value.getLowBitsUnsigned(), 4);\n  return buffer;\n};\n\n/**\n * Provide the name of the constructor and the string representation\n * @returns {string}\n */\nLong.prototype.inspect = function () {\n  return 'Long: ' + this.toString();\n};\n\n/**\n * Returns the string representation.\n * Method used by the native JSON.stringify() to serialize this instance\n */\nLong.prototype.toJSON = function () {\n  return this.toString();\n};\n\n/**\n * Generates a value representing the timestamp for the query in microseconds based on the date and the microseconds provided\n * @param {Date} [date] The date to generate the value, if not provided it will use the current date.\n * @param {Number} [microseconds] A number from 0 to 999 used to build the microseconds part of the date.\n * @returns {Long}\n */\nfunction generateTimestamp(date, microseconds) {\n  if (!date) {\n    date = new Date();\n  }\n  let longMicro = Long.ZERO;\n  if (typeof microseconds === 'number' && microseconds >= 0 && microseconds < 1000) {\n    longMicro = Long.fromInt(microseconds);\n  }\n  else {\n    if (_timestampTicks > 999) {\n      _timestampTicks = 0;\n    }\n    longMicro = Long.fromInt(_timestampTicks);\n    _timestampTicks++;\n  }\n  return Long\n    .fromNumber(date.getTime())\n    .multiply(_longOneThousand)\n    .add(longMicro);\n}\n\n//error classes\n\n/** @private */\nfunction QueryParserError(e) {\n  QueryParserError.super_.call(this, e.message, this.constructor);\n  this.internalError = e;\n}\nutil.inherits(QueryParserError, errors.DriverError);\n\n/** @private */\nfunction TimeoutError (message) {\n  TimeoutError.super_.call(this, message, this.constructor);\n  this.info = 'Represents an error that happens when the maximum amount of time for an operation passed.';\n}\nutil.inherits(TimeoutError, errors.DriverError);\n\nexports.opcodes = opcodes;\nexports.consistencies = consistencies;\nexports.consistencyToString = consistencyToString;\nexports.dataTypes = dataTypes;\nexports.getDataTypeNameByCode = getDataTypeNameByCode;\nexports.distance = distance;\nexports.frameFlags = frameFlags;\nexports.protocolEvents = protocolEvents;\nexports.protocolVersion = protocolVersion;\nexports.responseErrorCodes = responseErrorCodes;\nexports.resultKind = resultKind;\nexports.timeuuid = timeuuid;\nexports.uuid = uuid;\nexports.BigDecimal = require('./big-decimal');\nexports.Duration = require('./duration');\nexports.FrameHeader = FrameHeader;\nexports.InetAddress = require('./inet-address');\nexports.Integer = require('./integer');\nexports.LocalDate = require('./local-date');\nexports.LocalTime = require('./local-time');\nexports.Long = Long;\nexports.ResultSet = require('./result-set');\nexports.ResultStream = require('./result-stream');\nexports.Row = require('./row');\n//export DriverError for backward-compatibility\nexports.DriverError = errors.DriverError;\nexports.TimeoutError = TimeoutError;\nexports.TimeUuid = TimeUuid;\nexports.Tuple = require('./tuple');\nexports.Uuid = Uuid;\nexports.unset = unset;\nexports.generateTimestamp = generateTimestamp;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst util = require('util');\nconst types = require('../types');\nconst utils = require('../utils.js');\nconst errors = require('../errors.js');\n\nconst doneIteratorObject = Object.freeze({ done: true });\nconst newlyUpInterval = 60000;\n\n/** @module policies/loadBalancing */\n/**\n * Base class for Load Balancing Policies\n * @constructor\n */\nfunction LoadBalancingPolicy() {\n\n}\n\n/**\n * Initializes the load balancing policy, called after the driver obtained the information of the cluster.\n * @param {Client} client\n * @param {HostMap} hosts\n * @param {Function} callback\n */\nLoadBalancingPolicy.prototype.init = function (client, hosts, callback) {\n  this.client = client;\n  this.hosts = hosts;\n  callback();\n};\n\n/**\n * Returns the distance assigned by this policy to the provided host.\n * @param {Host} host\n */\nLoadBalancingPolicy.prototype.getDistance = function (host) {\n  return types.distance.local;\n};\n\n/**\n * Returns an iterator with the hosts for a new query.\n * Each new query will call this method. The first host in the result will\n * then be used to perform the query.\n * @param {String} keyspace Name of currently logged keyspace at <code>Client</code> level.\n * @param {ExecutionOptions|null} executionOptions The information related to the execution of the request.\n * @param {Function} callback The function to be invoked with the error as first parameter and the host iterator as\n * second parameter.\n */\nLoadBalancingPolicy.prototype.newQueryPlan = function (keyspace, executionOptions, callback) {\n  callback(new Error('You must implement a query plan for the LoadBalancingPolicy class'));\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nLoadBalancingPolicy.prototype.getOptions = function () {\n  return new Map();\n};\n\n/**\n * This policy yield nodes in a round-robin fashion.\n * @extends LoadBalancingPolicy\n * @constructor\n */\nfunction RoundRobinPolicy() {\n  this.index = 0;\n}\n\nutil.inherits(RoundRobinPolicy, LoadBalancingPolicy);\n\n/**\n * Returns an iterator with the hosts to be used as coordinator for a query.\n * @param {String} keyspace Name of currently logged keyspace at <code>Client</code> level.\n * @param {ExecutionOptions|null} executionOptions The information related to the execution of the request.\n * @param {Function} callback The function to be invoked with the error as first parameter and the host iterator as\n * second parameter.\n */\nRoundRobinPolicy.prototype.newQueryPlan = function (keyspace, executionOptions, callback) {\n  if (!this.hosts) {\n    return callback(new Error('Load balancing policy not initialized'));\n  }\n  const hosts = this.hosts.values();\n  const self = this;\n  let counter = 0;\n\n  let planIndex = self.index % hosts.length;\n  self.index += 1;\n  if (self.index >= utils.maxInt) {\n    self.index = 0;\n  }\n\n  callback(null, {\n    next: function () {\n      if (++counter > hosts.length) {\n        return doneIteratorObject;\n      }\n      return {value: hosts[planIndex++ % hosts.length], done: false};\n    }\n  });\n};\n\n/**\n * A data-center aware Round-robin load balancing policy.\n * This policy provides round-robin queries over the nodes of the local\n * data center.\n * @param {?String} [localDc] local datacenter name.  This value overrides the 'localDataCenter' Client option \\\n * and is useful for cases where you have multiple execution profiles that you intend on using for routing\n * requests to different data centers.\n * @extends {LoadBalancingPolicy}\n * @constructor\n */\nfunction DCAwareRoundRobinPolicy(localDc) {\n  this.localDc = localDc;\n  this.index = 0;\n  /** @type {Array} */\n  this.localHostsArray = null;\n}\n\nutil.inherits(DCAwareRoundRobinPolicy, LoadBalancingPolicy);\n\n/**\n * Initializes the load balancing policy.\n * @param {Client} client\n * @param {HostMap} hosts\n * @param {Function} callback\n */\nDCAwareRoundRobinPolicy.prototype.init = function (client, hosts, callback) {\n  this.client = client;\n  this.hosts = hosts;\n  hosts.on('add', this._cleanHostCache.bind(this));\n  hosts.on('remove', this._cleanHostCache.bind(this));\n\n  try {\n    setLocalDc(this, client, this.hosts);\n  } catch (err) {\n    return callback(err);\n  }\n\n  callback();\n};\n\n/**\n * Returns the distance depending on the datacenter.\n * @param {Host} host\n */\nDCAwareRoundRobinPolicy.prototype.getDistance = function (host) {\n  if (host.datacenter === this.localDc) {\n    return types.distance.local;\n  }\n\n  return types.distance.ignored;\n};\n\nDCAwareRoundRobinPolicy.prototype._cleanHostCache = function () {\n  this.localHostsArray = null;\n};\n\nDCAwareRoundRobinPolicy.prototype._resolveLocalHosts = function() {\n  const hosts = this.hosts.values();\n  if (this.localHostsArray) {\n    //there were already calculated\n    return;\n  }\n  this.localHostsArray = [];\n  hosts.forEach(function (h) {\n    if (!h.datacenter) {\n      //not a remote dc node\n      return;\n    }\n    if (h.datacenter === this.localDc) {\n      this.localHostsArray.push(h);\n    }\n  }, this);\n};\n\n/**\n * It returns an iterator that yields local nodes.\n * @param {String} keyspace Name of currently logged keyspace at <code>Client</code> level.\n * @param {ExecutionOptions|null} executionOptions The information related to the execution of the request.\n * @param {Function} callback The function to be invoked with the error as first parameter and the host iterator as\n * second parameter.\n */\nDCAwareRoundRobinPolicy.prototype.newQueryPlan = function (keyspace, executionOptions, callback) {\n  if (!this.hosts) {\n    return callback(new Error('Load balancing policy not initialized'));\n  }\n  this.index += 1;\n  if (this.index >= utils.maxInt) {\n    this.index = 0;\n  }\n  this._resolveLocalHosts();\n  // Use a local reference of hosts\n  const localHostsArray = this.localHostsArray;\n  let planLocalIndex = this.index;\n  let counter = 0;\n  callback(null, {\n    next: function () {\n      let host;\n      if (counter++ < localHostsArray.length) {\n        host = localHostsArray[planLocalIndex++ % localHostsArray.length];\n        return { value: host, done: false };\n      }\n      return doneIteratorObject;\n    }\n  });\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nDCAwareRoundRobinPolicy.prototype.getOptions = function () {\n  return new Map([\n    ['localDataCenter', this.localDc ]\n  ]);\n};\n\n/**\n * A wrapper load balancing policy that add token awareness to a child policy.\n * @param {LoadBalancingPolicy} childPolicy\n * @extends LoadBalancingPolicy\n * @constructor\n */\nfunction TokenAwarePolicy (childPolicy) {\n  if (!childPolicy) {\n    throw new Error(\"You must specify a child load balancing policy\");\n  }\n  this.childPolicy = childPolicy;\n}\n\nutil.inherits(TokenAwarePolicy, LoadBalancingPolicy);\n\nTokenAwarePolicy.prototype.init = function (client, hosts, callback) {\n  this.client = client;\n  this.hosts = hosts;\n  this.childPolicy.init(client, hosts, callback);\n};\n\nTokenAwarePolicy.prototype.getDistance = function (host) {\n  return this.childPolicy.getDistance(host);\n};\n\n/**\n * Returns the hosts to use for a new query.\n * The returned plan will return local replicas first, if replicas can be determined, followed by the plan of the\n * child policy.\n * @param {String} keyspace Name of currently logged keyspace at <code>Client</code> level.\n * @param {ExecutionOptions|null} executionOptions The information related to the execution of the request.\n * @param {Function} callback The function to be invoked with the error as first parameter and the host iterator as\n * second parameter.\n */\nTokenAwarePolicy.prototype.newQueryPlan = function (keyspace, executionOptions, callback) {\n  let routingKey;\n  if (executionOptions) {\n    routingKey = executionOptions.getRoutingKey();\n    if (executionOptions.getKeyspace()) {\n      keyspace = executionOptions.getKeyspace();\n    }\n  }\n  let replicas;\n  if (routingKey) {\n    replicas = this.client.getReplicas(keyspace, routingKey);\n  }\n  if (!routingKey || !replicas) {\n    return this.childPolicy.newQueryPlan(keyspace, executionOptions, callback);\n  }\n  const iterator = new TokenAwareIterator(keyspace, executionOptions, replicas, this.childPolicy);\n  iterator.iterate(callback);\n};\n\n/**\n * An iterator that holds the context for the subsequent next() calls\n * @param {String} keyspace\n * @param {ExecutionOptions} execOptions\n * @param {Array} replicas\n * @param childPolicy\n * @constructor\n * @ignore\n */\nfunction TokenAwareIterator(keyspace, execOptions, replicas, childPolicy) {\n  this.keyspace = keyspace;\n  this.childPolicy = childPolicy;\n  this.options = execOptions;\n  this.localReplicas = [];\n  this.replicaIndex = 0;\n  this.replicaMap = {};\n  this.childIterator = null;\n  // Memoize the local replicas\n  // The amount of local replicas should be defined before start iterating, in order to select an\n  // appropriate (pseudo random) startIndex\n  for (let i = 0; i < replicas.length; i++) {\n    const host = replicas[i];\n    if (this.childPolicy.getDistance(host) !== types.distance.local) {\n      continue;\n    }\n    this.replicaMap[host.address] = true;\n    this.localReplicas.push(host);\n  }\n  // We use a PRNG to set the replica index\n  // We only care about proportional fair scheduling between replicas of a given token\n  // Math.random() has an extremely short permutation cycle length but we don't care about collisions\n  this.startIndex = Math.floor(Math.random() * this.localReplicas.length);\n}\n\nTokenAwareIterator.prototype.iterate = function (callback) {\n  //Load the child policy hosts\n  const self = this;\n  this.childPolicy.newQueryPlan(this.keyspace, this.options, function (err, iterator) {\n    if (err) {\n      return callback(err);\n    }\n    //get the iterator of the child policy in case is needed\n    self.childIterator = iterator;\n    callback(null, {\n      next: function () { return self.computeNext(); }\n    });\n  });\n};\n\nTokenAwareIterator.prototype.computeNext = function () {\n  let host;\n  if (this.replicaIndex < this.localReplicas.length) {\n    host = this.localReplicas[(this.startIndex + (this.replicaIndex++)) % this.localReplicas.length];\n    return { value: host, done: false };\n  }\n  // Return hosts from child policy\n  let item;\n  while ((item = this.childIterator.next()) && !item.done) {\n    if (this.replicaMap[item.value.address]) {\n      // Avoid yielding local replicas from the child load balancing policy query plan\n      continue;\n    }\n    return item;\n  }\n  return doneIteratorObject;\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nTokenAwarePolicy.prototype.getOptions = function () {\n  const map = new Map([\n    ['childPolicy', this.childPolicy.constructor !== undefined ? this.childPolicy.constructor.name : null ]\n  ]);\n\n  if (this.childPolicy instanceof DCAwareRoundRobinPolicy) {\n    map.set('localDataCenter', this.childPolicy.localDc);\n  }\n\n  return map;\n};\n\n/**\n * Create a new policy that wraps the provided child policy but only \"allow\" hosts\n * from the provided list.\n * @class\n * @classdesc\n * A load balancing policy wrapper that ensure that only hosts from a provided\n * allow list will ever be returned.\n * <p>\n * This policy wraps another load balancing policy and will delegate the choice\n * of hosts to the wrapped policy with the exception that only hosts contained\n * in the allow list provided when constructing this policy will ever be\n * returned. Any host not in the while list will be considered ignored\n * and thus will not be connected to.\n * <p>\n * This policy can be useful to ensure that the driver only connects to a\n * predefined set of hosts. Keep in mind however that this policy defeats\n * somewhat the host auto-detection of the driver. As such, this policy is only\n * useful in a few special cases or for testing, but is not optimal in general.\n * If all you want to do is limiting connections to hosts of the local\n * data-center then you should use DCAwareRoundRobinPolicy and *not* this policy\n * in particular.\n * @param {LoadBalancingPolicy} childPolicy the wrapped policy.\n * @param {Array.<string>}  allowList The hosts address in the format ipAddress:port.\n * Only hosts from this list may get connected\n * to (whether they will get connected to or not depends on the child policy).\n * @extends LoadBalancingPolicy\n * @constructor\n */\nfunction AllowListPolicy (childPolicy, allowList) {\n  if (!childPolicy) {\n    throw new Error(\"You must specify a child load balancing policy\");\n  }\n  if (!Array.isArray(allowList)) {\n    throw new Error(\"You must provide the list of allowed host addresses\");\n  }\n\n  this.childPolicy = childPolicy;\n  this.allowList = new Map(allowList.map(address => [ address, true ]));\n}\n\nutil.inherits(AllowListPolicy, LoadBalancingPolicy);\n\nAllowListPolicy.prototype.init = function (client, hosts, callback) {\n  this.childPolicy.init(client, hosts, callback);\n};\n\n/**\n * Uses the child policy to return the distance to the host if included in the allow list.\n * Any host not in the while list will be considered ignored.\n * @param host\n */\nAllowListPolicy.prototype.getDistance = function (host) {\n  if (!this._contains(host)) {\n    return types.distance.ignored;\n  }\n  return this.childPolicy.getDistance(host);\n};\n\n/**\n * @param {Host} host\n * @returns {boolean}\n * @private\n */\nAllowListPolicy.prototype._contains = function (host) {\n  return !!this.allowList.get(host.address);\n};\n\n/**\n * Returns the hosts to use for a new query filtered by the allow list.\n */\nAllowListPolicy.prototype.newQueryPlan = function (keyspace, info, callback) {\n  const self = this;\n  this.childPolicy.newQueryPlan(keyspace, info, function (err, iterator) {\n    if (err) {\n      return callback(err);\n    }\n    callback(null, self._filter(iterator));\n  });\n};\n\nAllowListPolicy.prototype._filter = function (childIterator) {\n  const self = this;\n  return {\n    next: function () {\n      const item = childIterator.next();\n      if (!item.done && !self._contains(item.value)) {\n        return this.next();\n      }\n      return item;\n    }\n  };\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nAllowListPolicy.prototype.getOptions = function () {\n  return new Map([\n    ['childPolicy', this.childPolicy.constructor !== undefined ? this.childPolicy.constructor.name : null ],\n    ['allowList', Array.from(this.allowList.keys())]\n  ]);\n};\n\n/**\n * Creates a new instance of the policy.\n * @classdesc\n * Exposed for backward-compatibility only, it's recommended that you use {@link AllowListPolicy} instead.\n * @param {LoadBalancingPolicy} childPolicy the wrapped policy.\n * @param {Array.<string>} allowList The hosts address in the format ipAddress:port.\n * Only hosts from this list may get connected to (whether they will get connected to or not depends on the child\n * policy).\n * @extends AllowListPolicy\n * @deprecated Use allow-list instead. It will be removed in future major versions.\n * @constructor\n */\nfunction WhiteListPolicy(childPolicy, allowList) {\n  AllowListPolicy.call(this, childPolicy, allowList);\n}\n\nutil.inherits(WhiteListPolicy, AllowListPolicy);\n\n/**\n * A load-balancing policy implementation that attempts to fairly distribute the load based on the amount of in-flight\n * request per hosts. The local replicas are initially shuffled and\n * <a href=\"https://www.eecs.harvard.edu/~michaelm/postscripts/mythesis.pdf\">between the first two nodes in the\n * shuffled list, the one with fewer in-flight requests is selected as coordinator</a>.\n *\n * <p>\n *   Additionally, it detects unresponsive replicas and reorders them at the back of the query plan.\n * </p>\n *\n * <p>\n *   For graph analytics queries, it uses the preferred analytics graph server previously obtained by driver as first\n *   host in the query plan.\n * </p>\n */\nclass DefaultLoadBalancingPolicy extends LoadBalancingPolicy {\n\n  /**\n   * Creates a new instance of <code>DefaultLoadBalancingPolicy</code>.\n   * @param {String|Object} [options] The local data center name or the optional policy options object.\n   * <p>\n   *   Note that when providing the local data center name, it overrides <code>localDataCenter</code> option at\n   *   <code>Client</code> level.\n   * </p>\n   * @param {String} [options.localDc] local data center name.  This value overrides the 'localDataCenter' Client option\n   * and is useful for cases where you have multiple execution profiles that you intend on using for routing\n   * requests to different data centers.\n   * @param {Function} [options.filter] A function to apply to determine if hosts are included in the query plan.\n   * The function takes a Host parameter and returns a Boolean.\n   */\n  constructor(options) {\n    super();\n\n    if (typeof options === 'string') {\n      options = { localDc: options };\n    } else if (!options) {\n      options = utils.emptyObject;\n    }\n\n    this._client = null;\n    this._hosts = null;\n    this._filteredHosts = null;\n    this._preferredHost = null;\n    this._index = 0;\n    this.localDc = options.localDc;\n    this._filter = options.filter || this._defaultFilter;\n\n    // Allow some checks to be injected\n    if (options.isHostNewlyUp) {\n      this._isHostNewlyUp = options.isHostNewlyUp;\n    }\n    if (options.healthCheck) {\n      this._healthCheck = options.healthCheck;\n    }\n    if (options.compare) {\n      this._compare = options.compare;\n    }\n    if (options.getReplicas) {\n      this._getReplicas = options.getReplicas;\n    }\n  }\n\n  /**\n   * Initializes the load balancing policy, called after the driver obtained the information of the cluster.\n   * @param {Client} client\n   * @param {HostMap} hosts\n   * @param {Function} callback\n   */\n  init(client, hosts, callback) {\n    this._client = client;\n    this._hosts = hosts;\n\n    // Clean local host cache\n    this._hosts.on('add', () => this._filteredHosts = null);\n    this._hosts.on('remove', () => this._filteredHosts = null);\n\n    try {\n      setLocalDc(this, client, this._hosts);\n    } catch (err) {\n      return callback(err);\n    }\n\n    callback();\n  }\n\n  /**\n   * Returns the distance assigned by this policy to the provided host, relatively to the client instance.\n   * @param {Host} host\n   */\n  getDistance(host) {\n    if (this._preferredHost !== null && host === this._preferredHost) {\n      // Set the last preferred host as local.\n      // It ensures that the pool for the graph analytics host has the appropriate size\n      return types.distance.local;\n    }\n\n    if (!this._filter(host)) {\n      return types.distance.ignored;\n    }\n\n    return host.datacenter === this.localDc ? types.distance.local : types.distance.ignored;\n  }\n\n  /**\n   * Returns a host iterator to be used for a query execution.\n   * @override\n   * @param {String} keyspace\n   * @param {ExecutionOptions} executionOptions\n   * @param {Function} callback\n   */\n  newQueryPlan(keyspace, executionOptions, callback) {\n    let routingKey;\n    let preferredHost;\n\n    if (executionOptions) {\n      routingKey = executionOptions.getRoutingKey();\n\n      if (executionOptions.getKeyspace()) {\n        keyspace = executionOptions.getKeyspace();\n      }\n\n      preferredHost = executionOptions.getPreferredHost();\n    }\n\n    let iterable;\n\n    if (!keyspace || !routingKey) {\n      iterable = this._getLocalHosts();\n    } else {\n      iterable = this._getReplicasAndLocalHosts(keyspace, routingKey);\n    }\n\n    if (preferredHost) {\n      // Set it on an instance level field to set the distance\n      this._preferredHost = preferredHost;\n      iterable = DefaultLoadBalancingPolicy._getPreferredHostFirst(preferredHost, iterable);\n    }\n\n    return callback(null, iterable);\n  }\n\n  /**\n   * Yields the preferred host first, followed by the host in the provided iterable\n   * @param preferredHost\n   * @param iterable\n   * @private\n   */\n  static *_getPreferredHostFirst(preferredHost, iterable) {\n    yield preferredHost;\n\n    for (const host of iterable) {\n      if (host !== preferredHost) {\n        yield host;\n      }\n    }\n  }\n\n  /**\n   * Yields the local hosts without the replicas already yielded\n   * @param {Array<Host>} [localReplicas] The local replicas that we should avoid to include again\n   * @private\n   */\n  *_getLocalHosts(localReplicas) {\n    // Use a local reference\n    const hosts = this._getFilteredLocalHosts();\n    const initialIndex = this._getIndex();\n\n    // indexOf() over an Array is a O(n) operation but given that there should be 3 to 7 replicas,\n    // it shouldn't be an expensive call. Additionally, this will only be executed when the local replicas\n    // have been exhausted in a lazy manner.\n    const canBeYield = localReplicas\n      ? h => localReplicas.indexOf(h) === -1\n      : h => true;\n\n    for (let i = 0; i < hosts.length; i++) {\n      const h = hosts[(i + initialIndex) % hosts.length];\n      if (canBeYield(h) && h.isUp()) {\n        yield h;\n      }\n    }\n  }\n\n  _getReplicasAndLocalHosts(keyspace, routingKey) {\n    let replicas = this._getReplicas(keyspace, routingKey);\n    if (replicas === null) {\n      return this._getLocalHosts();\n    }\n\n    const filteredReplicas = [];\n    let newlyUpReplica = null;\n    let newlyUpReplicaTimestamp = Number.MIN_SAFE_INTEGER;\n    let unhealthyReplicas = 0;\n\n    // Filter by DC, predicate and UP replicas\n    // Use the same iteration to perform other checks: whether if its newly UP or unhealthy\n    // As this is part of the hot path, we use a simple loop and avoid using Array.prototype.filter() + closure\n    for (let i = 0; i < replicas.length; i++) {\n      const h = replicas[i];\n      if (!this._filter(h) || h.datacenter !== this.localDc || !h.isUp()) {\n        continue;\n      }\n      const isUpSince = this._isHostNewlyUp(h);\n      if (isUpSince !== null && isUpSince > newlyUpReplicaTimestamp) {\n        newlyUpReplica = h;\n        newlyUpReplicaTimestamp = isUpSince;\n      }\n      if (newlyUpReplica === null && !this._healthCheck(h)) {\n        unhealthyReplicas++;\n      }\n      filteredReplicas.push(h);\n    }\n\n    replicas = filteredReplicas;\n\n    // Shuffle remaining local replicas\n    utils.shuffleArray(replicas);\n\n    if (replicas.length < 3) {\n      // Avoid reordering replicas of a set of 2 as we could be doing more harm than good\n      return this.yieldReplicasFirst(replicas);\n    }\n\n    let temp;\n\n    if (newlyUpReplica === null) {\n      if (unhealthyReplicas > 0 && unhealthyReplicas < Math.floor(replicas.length / 2 + 1)) {\n        // There is one or more unhealthy replicas and there is a majority of healthy replicas\n        this._sendUnhealthyToTheBack(replicas, unhealthyReplicas);\n      }\n    }\n    else if ((newlyUpReplica === replicas[0] || newlyUpReplica === replicas[1]) && Math.random() * 4 >= 1) {\n      // There is a newly UP replica and the replica in first or second position is the most recent replica\n      // marked as UP and dice roll 1d4!=1 -> Send it to the back of the Array\n      const index = newlyUpReplica === replicas[0] ? 0 : 1;\n      temp = replicas[replicas.length - 1];\n      replicas[replicas.length - 1] = replicas[index];\n      replicas[index] = temp;\n    }\n\n    if (this._compare(replicas[1], replicas[0]) > 0) {\n      // Power of two random choices\n      temp = replicas[0];\n      replicas[0] = replicas[1];\n      replicas[1] = temp;\n    }\n\n    return this.yieldReplicasFirst(replicas);\n  }\n\n  /**\n   * Yields the local replicas followed by the rest of local nodes.\n   * @param {Array<Host>} replicas The local replicas\n   */\n  *yieldReplicasFirst(replicas) {\n    for (let i = 0; i < replicas.length; i++) {\n      yield replicas[i];\n    }\n    yield* this._getLocalHosts(replicas);\n  }\n\n  _isHostNewlyUp(h) {\n    return (h.isUpSince !== null && Date.now() - h.isUpSince < newlyUpInterval) ? h.isUpSince : null;\n  }\n\n  /**\n   * Returns a boolean determining whether the host health is ok or not.\n   * A Host is considered unhealthy when there are enough items in the queue (10 items in-flight) but the\n   * Host is not responding to those requests.\n   * @param {Host} h\n   * @return {boolean}\n   * @private\n   */\n  _healthCheck(h) {\n    return !(h.getInFlight() >= 10 && h.getResponseCount() <= 1);\n  }\n\n  /**\n   * Compares to host and returns 1 if it needs to favor the first host otherwise, -1.\n   * @return {number}\n   * @private\n   */\n  _compare(h1, h2) {\n    return h1.getInFlight() < h2.getInFlight() ? 1 : -1;\n  }\n\n  _getReplicas(keyspace, routingKey) {\n    return this._client.getReplicas(keyspace, routingKey);\n  }\n\n  /**\n   * Returns an Array of hosts filtered by DC and predicate.\n   * @returns {Array<Host>}\n   * @private\n   */\n  _getFilteredLocalHosts() {\n    if (this._filteredHosts === null) {\n      this._filteredHosts = this._hosts.values()\n        .filter(h => this._filter(h) && h.datacenter === this.localDc);\n    }\n    return this._filteredHosts;\n  }\n\n  _getIndex() {\n    const result = this._index++;\n    // Overflow protection\n    if (this._index === 0x7fffffff) {\n      this._index = 0;\n    }\n    return result;\n  }\n\n  _sendUnhealthyToTheBack(replicas, unhealthyReplicas) {\n    let counter = 0;\n\n    // Start from the back, move backwards and stop once all unhealthy replicas are at the back\n    for (let i = replicas.length - 1; i >= 0 && counter < unhealthyReplicas; i--) {\n      const host = replicas[i];\n      if (this._healthCheck(host)) {\n        continue;\n      }\n\n      const targetIndex = replicas.length - 1 - counter;\n      if (targetIndex !== i) {\n        const temp = replicas[targetIndex];\n        replicas[targetIndex] = host;\n        replicas[i] = temp;\n      }\n      counter++;\n    }\n  }\n\n  _defaultFilter() {\n    return true;\n  }\n\n  /**\n   * Gets an associative array containing the policy options.\n   */\n  getOptions() {\n    return new Map([\n      ['localDataCenter', this.localDc ],\n      ['filterFunction', this._filter !== this._defaultFilter ]\n    ]);\n  }\n}\n\n/**\n * Validates and sets the local data center to be used.\n * @param {LoadBalancingPolicy} lbp\n * @param {Client} client\n * @param {HostMap} hosts\n * @private\n */\nfunction setLocalDc(lbp, client, hosts) {\n  if (!(lbp instanceof LoadBalancingPolicy)) {\n    throw new errors.DriverInternalError('LoadBalancingPolicy instance was not provided');\n  }\n\n  if (client && client.options) {\n    if (lbp.localDc && !client.options.localDataCenter) {\n      client.log('info', `Local data center '${lbp.localDc}' was provided as an argument to the load-balancing` +\n        ` policy. It is preferable to specify the local data center using 'localDataCenter' in Client` +\n        ` options instead when your application is targeting a single data center.`);\n    }\n\n    // If localDc is unset, use value set in client options.\n    lbp.localDc = lbp.localDc || client.options.localDataCenter;\n  }\n\n  const dcs = getDataCenters(hosts);\n\n  if (!lbp.localDc) {\n    throw new errors.ArgumentError(\n      `'localDataCenter' is not defined in Client options and also was not specified in constructor.` +\n      ` At least one is required. Available DCs are: [${Array.from(dcs)}]`);\n  }\n\n  if (!dcs.has(lbp.localDc)) {\n    throw new errors.ArgumentError(`Datacenter ${lbp.localDc} was not found. Available DCs are: [${Array.from(dcs)}]`);\n  }\n}\n\nfunction getDataCenters(hosts) {\n  return new Set(hosts.values().map(h => h.datacenter));\n}\n\nmodule.exports = {\n  AllowListPolicy,\n  DCAwareRoundRobinPolicy,\n  DefaultLoadBalancingPolicy,\n  LoadBalancingPolicy,\n  RoundRobinPolicy,\n  TokenAwarePolicy,\n  // Deprecated: for backward compatibility only.\n  WhiteListPolicy\n};","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\n\n/** @module policies/reconnection */\n/**\n * Base class for Reconnection Policies\n * @constructor\n */\nfunction ReconnectionPolicy() {\n\n}\n\n/**\n * A new reconnection schedule.\n * @returns {{next: function}} An infinite iterator\n */\nReconnectionPolicy.prototype.newSchedule = function () {\n  throw new Error('You must implement a new schedule for the Reconnection class');\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nReconnectionPolicy.prototype.getOptions = function () {\n  return new Map();\n};\n\n/**\n * A reconnection policy that waits a constant time between each reconnection attempt.\n * @param {Number} delay Delay in ms\n * @constructor\n */\nfunction ConstantReconnectionPolicy(delay) {\n  this.delay = delay;\n}\n\nutil.inherits(ConstantReconnectionPolicy, ReconnectionPolicy);\n\n/**\n * A new reconnection schedule that returns the same next delay value\n * @returns {{next: Function}} An infinite iterator\n */\nConstantReconnectionPolicy.prototype.newSchedule = function () {\n  const self = this;\n  return {\n    next: function () {\n      return {value: self.delay, done: false};\n    }\n  };\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nConstantReconnectionPolicy.prototype.getOptions = function () {\n  return new Map([['delay', this.delay ]]);\n};\n\n/**\n * A reconnection policy that waits exponentially longer between each\n * reconnection attempt (but keeps a constant delay once a maximum delay is reached).\n * <p>\n *   A random amount of jitter (+/- 15%) will be added to the pure exponential delay value to avoid situations\n *   where many clients are in the reconnection process at exactly the same time. The jitter will never cause the\n *   delay to be less than the base delay, or more than the max delay.\n * </p>\n * @param {Number} baseDelay The base delay in milliseconds to use for the schedules created by this policy.\n * @param {Number} maxDelay The maximum delay in milliseconds to wait between two reconnection attempt.\n * @param {Boolean} startWithNoDelay Determines if the first attempt should be zero delay\n * @constructor\n */\nfunction ExponentialReconnectionPolicy(baseDelay, maxDelay, startWithNoDelay) {\n  this.baseDelay = baseDelay;\n  this.maxDelay = maxDelay;\n  this.startWithNoDelay = startWithNoDelay;\n}\n\nutil.inherits(ExponentialReconnectionPolicy, ReconnectionPolicy);\n\n/**\n * A new schedule that uses an exponentially growing delay between reconnection attempts.\n * @returns {{next: Function}} An infinite iterator.\n */\nExponentialReconnectionPolicy.prototype.newSchedule = function* () {\n  let index = this.startWithNoDelay ? -1 : 0;\n\n  while (true) {\n    let delay = 0;\n\n    if (index >= 64) {\n      delay = this.maxDelay;\n    } else if (index !== -1) {\n      delay = Math.min(Math.pow(2, index) * this.baseDelay, this.maxDelay);\n    }\n\n    index++;\n\n    yield this._addJitter(delay);\n  }\n};\n\n/**\n * Adds a random portion of +-15% to the delay provided.\n * Initially, its adds a random value of 15% to avoid reconnection before reaching the base delay.\n * When the schedule reaches max delay, only subtracts a random portion of 15%.\n */\nExponentialReconnectionPolicy.prototype._addJitter = function (value) {\n  if (value === 0) {\n    // Instant reconnection without jitter\n    return value;\n  }\n\n  // Use the formula: 85% + rnd() * 30% to calculate the percentage of the original delay\n  let minPercentage = 0.85;\n  let range = 0.30;\n\n  if (!this.startWithNoDelay && value === this.baseDelay) {\n    // Between 100% to 115% of the original value\n    minPercentage = 1;\n    range = 0.15;\n  } else if (value === this.maxDelay) {\n    // Between 85% to 100% of the original value\n    range = 0.15;\n  }\n\n  return Math.floor(value * (Math.random() * range + minPercentage));\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nExponentialReconnectionPolicy.prototype.getOptions = function () {\n  return new Map([\n    ['baseDelay', this.baseDelay ],\n    ['maxDelay', this.maxDelay ],\n    ['startWithNoDelay', this.startWithNoDelay ]\n  ]);\n};\n\nexports.ReconnectionPolicy = ReconnectionPolicy;\nexports.ConstantReconnectionPolicy = ConstantReconnectionPolicy;\nexports.ExponentialReconnectionPolicy = ExponentialReconnectionPolicy;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\n\n\n/** @module policies/retry */\n/**\n * Base and default RetryPolicy.\n * Determines what to do when the drivers runs into an specific Cassandra exception\n * @constructor\n */\nfunction RetryPolicy() {\n\n}\n\n/**\n * Determines what to do when the driver gets an UnavailableException response from a Cassandra node.\n * @param {OperationInfo} info\n * @param {Number} consistency The [consistency]{@link module:types~consistencies} level of the query that triggered\n * the exception.\n * @param {Number} required The number of replicas whose response is required to achieve the\n * required [consistency]{@link module:types~consistencies}.\n * @param {Number} alive The number of replicas that were known to be alive when the request had been processed\n * (since an unavailable exception has been triggered, there will be alive &lt; required)\n * @returns {DecisionInfo}\n */\nRetryPolicy.prototype.onUnavailable = function (info, consistency, required, alive) {\n  if (info.nbRetry > 0) {\n    return this.rethrowResult();\n  }\n  return this.retryResult(undefined, false);\n};\n\n/**\n * Determines what to do when the driver gets a ReadTimeoutException response from a Cassandra node.\n * @param {OperationInfo} info\n * @param {Number} consistency The [consistency]{@link module:types~consistencies} level of the query that triggered\n * the exception.\n * @param {Number} received The number of nodes having answered the request.\n * @param {Number} blockFor The number of replicas whose response is required to achieve the\n * required [consistency]{@link module:types~consistencies}.\n * @param {Boolean} isDataPresent When <code>false</code>, it means the replica that was asked for data has not responded.\n * @returns {DecisionInfo}\n */\nRetryPolicy.prototype.onReadTimeout = function (info, consistency, received, blockFor, isDataPresent) {\n  if (info.nbRetry > 0) {\n    return this.rethrowResult();\n  }\n  return ((received >= blockFor && !isDataPresent) ?\n    this.retryResult() :\n    this.rethrowResult());\n};\n\n/**\n * Determines what to do when the driver gets a WriteTimeoutException response from a Cassandra node.\n * @param {OperationInfo} info\n * @param {Number} consistency The [consistency]{@link module:types~consistencies} level of the query that triggered\n * the exception.\n * @param {Number} received The number of nodes having acknowledged the request.\n * @param {Number} blockFor The number of replicas whose acknowledgement is required to achieve the required\n * [consistency]{@link module:types~consistencies}.\n * @param {String} writeType A <code>string</code> that describes the type of the write that timed out (\"SIMPLE\"\n * / \"BATCH\" / \"BATCH_LOG\" / \"UNLOGGED_BATCH\" / \"COUNTER\").\n * @returns {DecisionInfo}\n */\nRetryPolicy.prototype.onWriteTimeout = function (info, consistency, received, blockFor, writeType) {\n  if (info.nbRetry > 0) {\n    return this.rethrowResult();\n  }\n  // If the batch log write failed, retry the operation as this might just be we were unlucky at picking candidates\n  return writeType === \"BATCH_LOG\" ? this.retryResult() : this.rethrowResult();\n};\n\n/**\n * Defines whether to retry and at which consistency level on an unexpected error.\n * <p>\n * This method might be invoked in the following situations:\n * </p>\n * <ol>\n * <li>On a client timeout, while waiting for the server response\n * (see [socketOptions.readTimeout]{@link ClientOptions}), being the error an instance of\n * [OperationTimedOutError]{@link module:errors~OperationTimedOutError}.</li>\n * <li>On a connection error (socket closed, etc.).</li>\n * <li>When the contacted host replies with an error, such as <code>overloaded</code>, <code>isBootstrapping</code>,\n * </code>serverError, etc. In this case, the error is instance of [ResponseError]{@link module:errors~ResponseError}.\n * </li>\n * </ol>\n * <p>\n * Note that when this method is invoked, <em>the driver cannot guarantee that the mutation has been effectively\n * applied server-side</em>; a retry should only be attempted if the request is known to be idempotent.\n * </p>\n * @param {OperationInfo} info\n * @param {Number|undefined} consistency The [consistency]{@link module:types~consistencies} level of the query that triggered\n * the exception.\n * @param {Error} err The error that caused this request to fail.\n * @returns {DecisionInfo}\n */\nRetryPolicy.prototype.onRequestError = function (info, consistency, err) {\n  // The default implementation triggers a retry on the next host in the query plan with the same consistency level,\n  // regardless of the statement's idempotence, for historical reasons.\n  return this.retryResult(undefined, false);\n};\n\n/**\n * Returns a {@link DecisionInfo} to retry the request with the given [consistency]{@link module:types~consistencies}.\n * @param {Number|undefined} [consistency] When specified, it retries the request with the given consistency.\n * @param {Boolean} [useCurrentHost] When specified, determines if the retry should be made using the same coordinator.\n * Default: true.\n * @returns {DecisionInfo}\n */\nRetryPolicy.prototype.retryResult = function (consistency, useCurrentHost) {\n  return {\n    decision: RetryPolicy.retryDecision.retry,\n    consistency: consistency,\n    useCurrentHost: useCurrentHost !== false\n  };\n};\n\n/**\n * Returns a {@link DecisionInfo} to callback in error when a err is obtained for a given request.\n * @returns {DecisionInfo}\n */\nRetryPolicy.prototype.rethrowResult = function () {\n  return { decision: RetryPolicy.retryDecision.rethrow };\n};\n\n/**\n * Determines the retry decision for the retry policies.\n * @type {Object}\n * @property {Number} rethrow\n * @property {Number} retry\n * @property {Number} ignore\n * @static\n */\nRetryPolicy.retryDecision = {\n  rethrow:  0,\n  retry:    1,\n  ignore:   2\n};\n\n/**\n * Creates a new instance of <code>IdempotenceAwareRetryPolicy</code>.\n * @classdesc\n * A retry policy that avoids retrying non-idempotent statements.\n * <p>\n * In case of write timeouts or unexpected errors, this policy will always return\n * [rethrowResult()]{@link module:policies/retry~RetryPolicy#rethrowResult} if the statement is deemed non-idempotent\n * (see [QueryOptions.isIdempotent]{@link QueryOptions}).\n * <p/>\n * For all other cases, this policy delegates the decision to the child policy.\n * @param {RetryPolicy} [childPolicy] The child retry policy to wrap. When not defined, it will use an instance of\n * [RetryPolicy]{@link module:policies/retry~RetryPolicy} as child policy.\n * @extends module:policies/retry~RetryPolicy\n * @constructor\n * @deprecated Since version 4.0 non-idempotent operations are never tried for write timeout or request error, use the\n * default retry policy instead.\n */\nfunction IdempotenceAwareRetryPolicy(childPolicy) {\n  this._childPolicy = childPolicy || new RetryPolicy();\n}\n\nutil.inherits(IdempotenceAwareRetryPolicy, RetryPolicy);\n\nIdempotenceAwareRetryPolicy.prototype.onReadTimeout = function (info, consistency, received, blockFor, isDataPresent) {\n  return this._childPolicy.onReadTimeout(info, consistency, received, blockFor, isDataPresent);\n};\n\n/**\n * If the query is not idempotent, it returns a rethrow decision. Otherwise, it relies on the child policy to decide.\n */\nIdempotenceAwareRetryPolicy.prototype.onRequestError = function (info, consistency, err) {\n  if (info.executionOptions.isIdempotent()) {\n    return this._childPolicy.onRequestError(info, consistency, err);\n  }\n  return this.rethrowResult();\n};\n\nIdempotenceAwareRetryPolicy.prototype.onUnavailable = function (info, consistency, required, alive) {\n  return this._childPolicy.onUnavailable(info, consistency, required, alive);\n};\n\n/**\n * If the query is not idempotent, it return a rethrow decision. Otherwise, it relies on the child policy to decide.\n */\nIdempotenceAwareRetryPolicy.prototype.onWriteTimeout = function (info, consistency, received, blockFor, writeType) {\n  if (info.executionOptions.isIdempotent()) {\n    return this._childPolicy.onWriteTimeout(info, consistency, received, blockFor, writeType);\n  }\n  return this.rethrowResult();\n};\n\n/**\n * Creates a new instance of FallthroughRetryPolicy.\n * @classdesc\n * A retry policy that never retries nor ignores.\n * <p>\n * All of the methods of this retry policy unconditionally return\n * [rethrow]{@link module:policies/retry~Retry#rethrowResult()}. If this policy is used, retry logic will have to be\n * implemented in business code.\n * </p>\n * @alias module:policies/retry~FallthroughRetryPolicy\n * @extends RetryPolicy\n * @constructor\n */\nfunction FallthroughRetryPolicy() {\n\n}\n\nutil.inherits(FallthroughRetryPolicy, RetryPolicy);\n\n/**\n * Implementation of RetryPolicy method that returns [rethrow]{@link module:policies/retry~Retry#rethrowResult()}.\n */\nFallthroughRetryPolicy.prototype.onReadTimeout = function () {\n  return this.rethrowResult();\n};\n\n/**\n * Implementation of RetryPolicy method that returns [rethrow]{@link module:policies/retry~Retry#rethrowResult()}.\n */\nFallthroughRetryPolicy.prototype.onRequestError = function () {\n  return this.rethrowResult();\n};\n\n/**\n * Implementation of RetryPolicy method that returns [rethrow]{@link module:policies/retry~Retry#rethrowResult()}.\n */\nFallthroughRetryPolicy.prototype.onUnavailable = function () {\n  return this.rethrowResult();\n};\n\n/**\n * Implementation of RetryPolicy method that returns [rethrow]{@link module:policies/retry~Retry#rethrowResult()}.\n */\nFallthroughRetryPolicy.prototype.onWriteTimeout = function () {\n  return this.rethrowResult();\n};\n\n/**\n * Decision information\n * @typedef {Object} DecisionInfo\n * @property {Number} decision The decision as specified in\n * [retryDecision]{@link module:policies/retry~RetryPolicy.retryDecision}.\n * @property {Number} [consistency] The [consistency level]{@link module:types~consistencies}.\n * @property {useCurrentHost} [useCurrentHost] Determines if it should use the same host to retry the request.\n * <p>\n *   In the case that the current host is not available anymore, it will be retried on the next host even when\n *   <code>useCurrentHost</code> is set to <code>true</code>.\n * </p>\n */\n\n/**\n * Information of the execution to be used to determine whether the operation should be retried.\n * @typedef {Object} OperationInfo\n * @property {String} query The query that was executed.\n * @param {ExecutionOptions} executionOptions The options related to the execution of the request.\n * @property {Number} nbRetry The number of retries already performed for this operation.\n */\n\nexports.IdempotenceAwareRetryPolicy = IdempotenceAwareRetryPolicy;\nexports.FallthroughRetryPolicy = FallthroughRetryPolicy;\nexports.RetryPolicy = RetryPolicy;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst util = require('util');\nconst errors = require('../errors');\n\n/** @module policies/speculativeExecution */\n\n/**\n * @classdesc\n * The policy that decides if the driver will send speculative queries to the next hosts when the current host takes too\n * long to respond.\n * <p>Note that only idempotent statements will be speculatively retried.</p>\n * @constructor\n * @abstract\n */\nfunction SpeculativeExecutionPolicy() {\n  \n}\n\n/**\n * Initialization method that gets invoked on Client startup.\n * @param {Client} client\n * @abstract\n */\nSpeculativeExecutionPolicy.prototype.init = function (client) {\n\n};\n\n/**\n * Gets invoked at client shutdown, giving the opportunity to the implementor to perform cleanup.\n * @abstract\n */\nSpeculativeExecutionPolicy.prototype.shutdown = function () {\n\n};\n\n/**\n * Gets the plan to use for a new query.\n * Returns an object with a <code>nextExecution()</code> method, which returns a positive number representing the\n * amount of milliseconds to delay the next execution or a non-negative number to avoid further executions.\n * @param {String} keyspace The currently logged keyspace.\n * @param {String|Array<String>} queryInfo The query, or queries in the case of batches, for which to build a plan.\n * @return {{nextExecution: function}}\n * @abstract\n */\nSpeculativeExecutionPolicy.prototype.newPlan = function (keyspace, queryInfo) {\n  throw new Error('You must implement newPlan() method in the SpeculativeExecutionPolicy');\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nSpeculativeExecutionPolicy.prototype.getOptions = function () {\n  return new Map();\n};\n\n/**\n * Creates a new instance of NoSpeculativeExecutionPolicy.\n * @classdesc\n * A {@link SpeculativeExecutionPolicy} that never schedules speculative executions.\n * @constructor\n * @extends {SpeculativeExecutionPolicy}\n */\nfunction NoSpeculativeExecutionPolicy() {\n  this._plan = {\n    nextExecution: function () {\n      return -1;\n    }\n  };\n}\n\nutil.inherits(NoSpeculativeExecutionPolicy, SpeculativeExecutionPolicy);\n\nNoSpeculativeExecutionPolicy.prototype.newPlan = function () {\n  return this._plan;\n};\n\n\n/**\n * Creates a new instance of ConstantSpeculativeExecutionPolicy.\n * @classdesc\n * A {@link SpeculativeExecutionPolicy} that schedules a given number of speculative executions,\n * separated by a fixed delay.\n * @constructor\n * @param {Number} delay The delay between each speculative execution.\n * @param {Number} maxSpeculativeExecutions The amount of speculative executions that should be scheduled after the\n * initial execution. Must be strictly positive.\n * @extends {SpeculativeExecutionPolicy}\n */\nfunction ConstantSpeculativeExecutionPolicy(delay, maxSpeculativeExecutions) {\n  if (!(delay >= 0)) {\n    throw new errors.ArgumentError('delay must be a positive number or zero');\n  }\n  if (!(maxSpeculativeExecutions > 0)) {\n    throw new errors.ArgumentError('maxSpeculativeExecutions must be a positive number');\n  }\n  this._delay = delay;\n  this._maxSpeculativeExecutions = maxSpeculativeExecutions;\n}\n\nutil.inherits(ConstantSpeculativeExecutionPolicy, SpeculativeExecutionPolicy);\n\nConstantSpeculativeExecutionPolicy.prototype.newPlan = function () {\n  let executions = 0;\n  const self = this;\n  return {\n    nextExecution: function () {\n      if (executions++ < self._maxSpeculativeExecutions) {\n        return self._delay;\n      }\n      return -1;\n    }\n  };\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nConstantSpeculativeExecutionPolicy.prototype.getOptions = function () {\n  return new Map([\n    ['delay', this._delay ],\n    ['maxSpeculativeExecutions', this._maxSpeculativeExecutions ]\n  ]);\n};\n\nexports.NoSpeculativeExecutionPolicy = NoSpeculativeExecutionPolicy;\nexports.SpeculativeExecutionPolicy = SpeculativeExecutionPolicy;\nexports.ConstantSpeculativeExecutionPolicy = ConstantSpeculativeExecutionPolicy;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst util = require('util');\nconst { Long } = require('../types');\nconst errors = require('../errors');\n\n/** @module policies/timestampGeneration */\n\n/**\n * Defines the maximum date in milliseconds that can be represented in microseconds using Number ((2 ^ 53) / 1000)\n * @const\n * @private\n */\nconst _maxSafeNumberDate = 9007199254740;\n\n/**\n * A long representing the value 1000\n * @const\n * @private\n */\nconst _longOneThousand = Long.fromInt(1000);\n\n/**\n * Creates a new instance of {@link TimestampGenerator}.\n * @classdesc\n * Generates client-side, microsecond-precision query timestamps.\n * <p>\n *   Given that Cassandra uses those timestamps to resolve conflicts, implementations should generate\n *   monotonically increasing timestamps for successive invocations of {@link TimestampGenerator.next()}.\n * </p>\n * @constructor\n */\nfunction TimestampGenerator() {\n\n}\n\n/**\n * Returns the next timestamp.\n * <p>\n *   Implementors should enforce increasing monotonicity of timestamps, that is,\n *   a timestamp returned should always be strictly greater that any previously returned\n *   timestamp.\n * <p/>\n * <p>\n *   Implementors should strive to achieve microsecond precision in the best possible way,\n *   which is usually largely dependent on the underlying operating system's capabilities.\n * </p>\n * @param {Client} client The {@link Client} instance to generate timestamps to.\n * @returns {Long|Number|null} the next timestamp (in microseconds). If it's equals to <code>null</code>, it won't be\n * sent by the driver, letting the server to generate the timestamp.\n * @abstract\n */\nTimestampGenerator.prototype.next = function (client) {\n  throw new Error('next() must be implemented');\n};\n\n/**\n * A timestamp generator that guarantees monotonically increasing timestamps and logs warnings when timestamps\n * drift in the future.\n * <p>\n *   {@link Date} has millisecond precision and client timestamps require microsecond precision. This generator\n *   keeps track of the last generated timestamp, and if the current time is within the same millisecond as the last,\n *   it fills the microsecond portion of the new timestamp with the value of an incrementing counter.\n * </p>\n * @param {Number} [warningThreshold] Determines how far in the future timestamps are allowed to drift before a\n * warning is logged, expressed in milliseconds. Default: <code>1000</code>.\n * @param {Number} [minLogInterval] In case of multiple log events, it determines the time separation between log\n * events, expressed in milliseconds. Use 0 to disable. Default: <code>1000</code>.\n * @extends {TimestampGenerator}\n * @constructor\n */\nfunction MonotonicTimestampGenerator(warningThreshold, minLogInterval) {\n  if (warningThreshold < 0) {\n    throw new errors.ArgumentError('warningThreshold can not be lower than 0');\n  }\n  this._warningThreshold = warningThreshold || 1000;\n  this._minLogInterval = 1000;\n  if (typeof minLogInterval === 'number') {\n    // A value under 1 will disable logging\n    this._minLogInterval = minLogInterval;\n  }\n  this._micros = -1;\n  this._lastDate = 0;\n  this._lastLogDate = 0;\n}\n\nutil.inherits(MonotonicTimestampGenerator, TimestampGenerator);\n\n/**\n * Returns the current time in milliseconds since UNIX epoch\n * @returns {Number}\n */\nMonotonicTimestampGenerator.prototype.getDate = function () {\n  return Date.now();\n};\n\nMonotonicTimestampGenerator.prototype.next = function (client) {\n  let date = this.getDate();\n  let drifted = 0;\n  if (date > this._lastDate) {\n    this._micros = 0;\n    this._lastDate = date;\n    return this._generateMicroseconds();\n  }\n\n  if (date < this._lastDate) {\n    drifted = this._lastDate - date;\n    date = this._lastDate;\n  }\n  if (++this._micros === 1000) {\n    this._micros = 0;\n    if (date === this._lastDate) {\n      // Move date 1 millisecond into the future\n      date++;\n      drifted++;\n    }\n  }\n  const lastDate = this._lastDate;\n  this._lastDate = date;\n  const result = this._generateMicroseconds();\n  if (drifted >= this._warningThreshold) {\n    // Avoid logging an unbounded amount of times within a clock-skew event or during an interval when more than 1\n    // query is being issued by microsecond\n    const currentLogDate = Date.now();\n    if (this._minLogInterval > 0 && this._lastLogDate + this._minLogInterval <= currentLogDate){\n      const message = util.format(\n        'Timestamp generated using current date was %d milliseconds behind the last generated timestamp (which ' +\n        'millisecond portion was %d), the returned value (%s) is being artificially incremented to guarantee ' +\n        'monotonicity.',\n        drifted, lastDate, result);\n      this._lastLogDate = currentLogDate;\n      client.log('warning', message);\n    }\n  }\n  return result;\n};\n\n/**\n * @private\n * @returns {Number|Long}\n */\nMonotonicTimestampGenerator.prototype._generateMicroseconds = function () {\n  if (this._lastDate < _maxSafeNumberDate) {\n    // We are safe until Jun 06 2255, its faster to perform this operations on Number than on Long\n    // We hope to have native int64 by then :)\n    return this._lastDate * 1000 + this._micros;\n  }\n  return Long\n    .fromNumber(this._lastDate)\n    .multiply(_longOneThousand)\n    .add(Long.fromInt(this._micros));\n};\n\nexports.TimestampGenerator = TimestampGenerator;\nexports.MonotonicTimestampGenerator = MonotonicTimestampGenerator;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\n/**\n * Contains driver tuning policies to determine [load balancing]{@link module:policies/loadBalancing},\n *  [retrying]{@link module:policies/retry} queries, [reconnecting]{@link module:policies/reconnection} to a node,\n *  [address resolution]{@link module:policies/addressResolution},\n *  [timestamp generation]{@link module:policies/timestampGeneration} and\n *  [speculative execution]{@link module:policies/speculativeExecution}.\n * @module policies\n */\nconst addressResolution = exports.addressResolution = require('./address-resolution');\nconst loadBalancing = exports.loadBalancing = require('./load-balancing');\nconst reconnection = exports.reconnection = require('./reconnection');\nconst retry = exports.retry = require('./retry');\nconst speculativeExecution = exports.speculativeExecution = require('./speculative-execution');\nconst timestampGeneration = exports.timestampGeneration = require('./timestamp-generation');\n\n/**\n * Returns a new instance of the default address translator policy used by the driver.\n * @returns {AddressTranslator}\n */\nexports.defaultAddressTranslator = function () {\n  return new addressResolution.AddressTranslator();\n};\n\n/**\n * Returns a new instance of the default load-balancing policy used by the driver.\n * @param {string} [localDc] When provided, it sets the data center that is going to be used as local for the\n * load-balancing policy instance.\n * <p>When localDc is undefined, the load-balancing policy instance will use the <code>localDataCenter</code>\n * provided in the {@link ClientOptions}.</p>\n * @returns {LoadBalancingPolicy}\n */\nexports.defaultLoadBalancingPolicy = function (localDc) {\n  return new loadBalancing.DefaultLoadBalancingPolicy(localDc);\n};\n\n/**\n * Returns a new instance of the default retry policy used by the driver.\n * @returns {RetryPolicy}\n */\nexports.defaultRetryPolicy = function () {\n  return new retry.RetryPolicy();\n};\n\n/**\n * Returns a new instance of the default reconnection policy used by the driver.\n * @returns {ReconnectionPolicy}\n */\nexports.defaultReconnectionPolicy = function () {\n  return new reconnection.ExponentialReconnectionPolicy(1000, 10 * 60 * 1000, false);\n};\n\n\n/**\n * Returns a new instance of the default speculative execution policy used by the driver.\n * @returns {SpeculativeExecutionPolicy}\n */\nexports.defaultSpeculativeExecutionPolicy = function () {\n  return new speculativeExecution.NoSpeculativeExecutionPolicy();\n};\n\n/**\n * Returns a new instance of the default timestamp generator used by the driver.\n * @returns {TimestampGenerator}\n */\nexports.defaultTimestampGenerator = function () {\n  return new timestampGeneration.MonotonicTimestampGenerator();\n};\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\n/**\n * Tracks request execution for a {@link Client}.\n * <p>\n *   A {@link RequestTracker} can be configured in the client options. The <code>Client</code> will execute\n *   {@link RequestTracker#onSuccess} or {@link RequestTracker#onError} for every query or batch\n *   executed (QUERY, EXECUTE and BATCH requests).\n * </p>\n * @interface\n * @alias module:tracker~RequestTracker\n */\nclass RequestTracker {\n\n  /**\n   * Invoked each time a query or batch request succeeds.\n   * @param {Host} host The node that acted as coordinator of the request.\n   * @param {String|Array} query In the case of prepared or unprepared query executions, the provided\n   * query string. For batch requests, an Array containing the queries and parameters provided.\n   * @param {Array|Object|null} parameters In the case of prepared or unprepared query executions, the provided\n   * parameters.\n   * @param {ExecutionOptions} executionOptions The information related to the execution of the request.\n   * @param {Number} requestLength Length of the body of the request.\n   * @param {Number} responseLength Length of the body of the response.\n   * @param {Array<Number>} latency An array containing [seconds, nanoseconds] tuple, where nanoseconds is the\n   * remaining part of the real time that can't be represented in second precision (see <code>process.hrtime()</code>).\n   */\n  onSuccess(host, query, parameters, executionOptions, requestLength, responseLength, latency) {\n\n  }\n\n  /**\n   * Invoked each time a query or batch request fails.\n   * @param {Host} host The node that acted as coordinator of the request.\n   * @param {String|Array} query In the case of prepared or unprepared query executions, the provided\n   * query string. For batch requests, an Array containing the queries and parameters provided.\n   * @param {Array|Object|null} parameters In the case of prepared or unprepared query executions, the provided\n   * parameters.\n   * @param {ExecutionOptions} executionOptions The information related to the execution of the request.\n   * @param {Number} requestLength Length of the body of the request. When the failure occurred before the request was\n   * written to the wire, the length will be <code>0</code>.\n   * @param {Error} err The error that caused that caused the request to fail.\n   * @param {Array<Number>} latency An array containing [seconds, nanoseconds] tuple, where nanoseconds is the\n   * remaining part of the real time that can't be represented in second precision (see <code>process.hrtime()</code>).\n   */\n  onError(host, query, parameters, executionOptions, requestLength, err, latency) {\n\n  }\n\n  /**\n   * Invoked when the Client is being shutdown.\n   */\n  shutdown() {\n\n  }\n}\n\nmodule.exports = RequestTracker;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst events = require('events');\nconst RequestTracker = require('./request-tracker');\nconst errors = require('../errors');\nconst { format } = require('util');\n\nconst nanosToMillis = 1000000;\nconst defaultMessageMaxQueryLength = 500;\nconst defaultMaxParameterValueLength = 50;\nconst defaultMaxErrorStackTraceLength = 200;\n\n/**\n * A request tracker that logs the requests executed through the session, according to a set of\n * configurable options.\n * @implements {module:tracker~RequestTracker}\n * @alias module:tracker~RequestLogger\n * @example <caption>Logging slow queries</caption>\n * const requestLogger = new RequestLogger({ slowThreshold: 1000 });\n * requestLogger.emitter.on('show', message => console.log(message));\n * // Add the requestLogger to the client options\n * const client = new Client({ contactPoints, requestTracker: requestLogger });\n */\nclass RequestLogger extends RequestTracker {\n\n  /**\n   * Creates a new instance of {@link RequestLogger}.\n   * @param {Object} options\n   * @param {Number} [options.slowThreshold] The threshold in milliseconds beyond which queries are considered 'slow'\n   * and logged as such by the driver.\n   * @param {Number} [options.requestSizeThreshold] The threshold in bytes beyond which requests are considered 'large'\n   * and logged as such by the driver.\n   * @param {Boolean} [options.logNormalRequests] Determines whether it should emit 'normal' events for every\n   * EXECUTE, QUERY and BATCH request executed successfully, useful only for debugging. This option can be modified\n   * after the client is connected using the property {@link RequestLogger#logNormalRequests}.\n   * @param {Boolean} [options.logErroredRequests] Determines whether it should emit 'failure' events for every\n   * EXECUTE, QUERY and BATCH request execution that resulted in an error. This option can be modified\n   * after the client is connected using the property {@link RequestLogger#logErroredRequests}.\n   * @param {Number} [options.messageMaxQueryLength] The maximum amount of characters that are logged from the query\n   * portion of the message. Defaults to 500.\n   * @param {Number} [options.messageMaxParameterValueLength] The maximum amount of characters of each query parameter\n   * value that will be included in the message. Defaults to 50.\n   * @param {Number} [options.messageMaxErrorStackTraceLength] The maximum amount of characters of the stack trace\n   * that will be included in the message. Defaults to 200.\n   */\n  constructor(options) {\n    super();\n    if (!options) {\n      throw new errors.ArgumentError('RequestLogger options parameter is required');\n    }\n\n    this._options = options;\n\n    /**\n     * Determines whether it should emit 'normal' events for every EXECUTE, QUERY and BATCH request executed\n     * successfully, useful only for debugging\n     * @type {Boolean}\n     */\n    this.logNormalRequests = this._options.logNormalRequests;\n\n    /**\n     * Determines whether it should emit 'failure' events for every EXECUTE, QUERY and BATCH request execution that\n     * resulted in an error\n     * @type {Boolean}\n     */\n    this.logErroredRequests = this._options.logErroredRequests;\n\n    /**\n     * The object instance that emits <code>'slow'</code>, <code>'large'</code>, <code>'normal'</code> and\n     * <code>'failure'</code> events.\n     * @type {EventEmitter}\n     */\n    this.emitter = new events.EventEmitter();\n  }\n\n  /**\n   * Logs message if request execution was deemed too slow, large or if normal requests are logged.\n   * @override\n   */\n  onSuccess(host, query, parameters, execOptions, requestLength, responseLength, latency) {\n    if (this._options.slowThreshold > 0 && toMillis(latency) > this._options.slowThreshold) {\n      this._logSlow(host, query, parameters, execOptions, requestLength, responseLength, latency);\n    }\n    else if (this._options.requestSizeThreshold > 0 && requestLength > this._options.requestSizeThreshold) {\n      this._logLargeRequest(host, query, parameters, execOptions, requestLength, responseLength, latency);\n    }\n    else if (this.logNormalRequests) {\n      this._logNormalRequest(host, query, parameters, execOptions, requestLength, responseLength, latency);\n    }\n  }\n\n  /**\n   * Logs message if request execution was too large and/or encountered an error.\n   * @override\n   */\n  onError(host, query, parameters, execOptions, requestLength, err, latency) {\n    if (this._options.requestSizeThreshold > 0 && requestLength > this._options.requestSizeThreshold) {\n      this._logLargeErrorRequest(host, query, parameters, execOptions, requestLength, err, latency);\n    }\n    else if (this.logErroredRequests) {\n      this._logErrorRequest(host, query, parameters, execOptions, requestLength, err, latency);\n    }\n  }\n\n  _logSlow(host, query, parameters, execOptions, requestLength, responseLength, latency) {\n    const message = format('[%s] Slow request, took %d ms (%s): %s', host.address, Math.floor(toMillis(latency)),\n      getPayloadSizes(requestLength, responseLength), getStatementInfo(query, parameters, execOptions, this._options));\n    this.emitter.emit('slow', message);\n  }\n\n  _logLargeRequest(host, query, parameters, execOptions, requestLength, responseLength, latency) {\n    const message = format('[%s] Request exceeded length, %s (took %d ms): %s', host.address,\n      getPayloadSizes(requestLength, responseLength), ~~toMillis(latency),\n      getStatementInfo(query, parameters, execOptions, this._options));\n    this.emitter.emit('large', message);\n  }\n\n  _logNormalRequest(host, query, parameters, execOptions, requestLength, responseLength, latency) {\n    const message = format('[%s] Request completed normally, took %d ms (%s): %s', host.address, ~~toMillis(latency),\n      getPayloadSizes(requestLength, responseLength), getStatementInfo(query, parameters, execOptions, this._options));\n    this.emitter.emit('normal', message);\n  }\n\n  _logLargeErrorRequest(host, query, parameters, execOptions, requestLength, err, latency) {\n    const maxStackTraceLength = this._options.messageMaxErrorStackTraceLength || defaultMaxErrorStackTraceLength;\n    const message = format('[%s] Request exceeded length and execution failed, %s (took %d ms): %s; error: %s',\n      host.address, getPayloadSizes(requestLength), ~~toMillis(latency),\n      getStatementInfo(query, parameters, execOptions, this._options), err.stack.substr(0, maxStackTraceLength));\n\n    // Use 'large' event and not 'failure' as this log is caused by exceeded length\n    this.emitter.emit('large', message);\n  }\n\n  _logErrorRequest(host, query, parameters, execOptions, requestLength, err, latency) {\n    const maxStackTraceLength = this._options.messageMaxErrorStackTraceLength || defaultMaxErrorStackTraceLength;\n    const message = format('[%s] Request execution failed, took %d ms (%s): %s; error: %s', host.address,\n      ~~toMillis(latency), getPayloadSizes(requestLength),\n      getStatementInfo(query, parameters, execOptions, this._options), err.stack.substr(0, maxStackTraceLength));\n\n    // Avoid using 'error' as its a special event\n    this.emitter.emit('failure', message);\n  }\n}\n\nfunction toMillis(latency) {\n  return latency[0] * 1000 + latency[1] / nanosToMillis;\n}\n\nfunction getStatementInfo(query, parameters, execOptions, options) {\n  const maxQueryLength = options.messageMaxQueryLength || defaultMessageMaxQueryLength;\n  const maxParameterLength = options.messageMaxParameterValueLength || defaultMaxParameterValueLength;\n\n  if (Array.isArray(query)) {\n    return getBatchStatementInfo(query, execOptions, maxQueryLength, maxParameterLength);\n  }\n\n  // String concatenation is usually faster than Array#join() in V8\n  let message = query.substr(0, maxQueryLength);\n  const remaining = maxQueryLength - message.length - 1;\n  message += getParametersInfo(parameters, remaining, maxParameterLength);\n\n  if (!execOptions.isPrepared()) {\n    // This part of the message is not accounted for in \"maxQueryLength\"\n    message += ' (not prepared)';\n  }\n\n  return message;\n}\n\nfunction getBatchStatementInfo(queries, execOptions, maxQueryLength, maxParameterLength) {\n  // This part of the message is not accounted for in \"maxQueryLength\"\n  let message = (execOptions.isBatchLogged() ? 'LOGGED ' : '') + 'BATCH w/ ' + queries.length +\n    (!execOptions.isPrepared() ? ' not prepared' : '') + ' queries (';\n  let remaining = maxQueryLength;\n  let i;\n\n  for (i = 0; i < queries.length && remaining > 0; i++) {\n    let q = queries[i];\n    const params = q.params;\n    if (typeof q !== 'string') {\n      q = q.query;\n    }\n\n    if (i > 0) {\n      message += ',';\n      remaining--;\n    }\n\n    const queryLength = Math.min(remaining, q.length);\n    message += q.substr(0, queryLength);\n    remaining -= queryLength;\n\n    if (remaining <= 0) {\n      break;\n    }\n\n    const parameters = getParametersInfo(params, remaining, maxParameterLength);\n    remaining -= parameters.length;\n    message += parameters;\n  }\n\n  message += i < queries.length ? ',...)' : ')';\n  return message;\n}\n\nfunction getParametersInfo(params, remaining, maxParameterLength) {\n  if (remaining <= 3) {\n    // We need at least 3 chars to describe the parameters\n    // its OK to add more chars in an effort to be descriptive\n    return ' [...]';\n  }\n\n  if (!params) {\n    return ' []';\n  }\n\n  let paramStringifier = (index, length) => formatParam(params[index], length);\n  if (!Array.isArray(params)) {\n    const obj = params;\n    params = Object.keys(params);\n    paramStringifier = (index, length) => {\n      const key = params[index];\n      let result = key.substr(0, length);\n      const rem = length - result.length - 1;\n      if (rem <= 0) {\n        return result;\n      }\n      result += \":\" + formatParam(obj[key], rem);\n      return result;\n    };\n  }\n\n  let message = ' [';\n  let i;\n  for (i = 0; remaining > 0 && i < params.length; i++) {\n    if (i > 0) {\n      message += ',';\n      remaining--;\n    }\n\n    const paramString = paramStringifier(i, Math.min(maxParameterLength, remaining));\n    remaining -= paramString.length;\n    message += paramString;\n  }\n\n  if (i < params.length) {\n    message += '...';\n  }\n\n  message += ']';\n  return message;\n}\n\nfunction formatParam(value, maxLength) {\n  if (value === undefined) {\n    return 'undefined';\n  }\n\n  if (value === null) {\n    return 'null';\n  }\n\n  return value.toString().substr(0, maxLength);\n}\n\nfunction getPayloadSizes(requestLength, responseLength) {\n  let message = 'request size ' + formatSize(requestLength);\n  if (responseLength !== undefined) {\n    message += ' / response size ' + formatSize(responseLength);\n  }\n  return message;\n}\n\nfunction formatSize(length) {\n  return length > 1000 ? Math.round(length / 1024) + ' KB' : length + ' bytes';\n}\n\nmodule.exports = RequestLogger;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\n/**\n * Tracker module.\n * @module tracker\n */\n\nexports.RequestLogger = require('./request-logger');\nexports.RequestTracker = require('./request-tracker');","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\n/**\n * Represents a base class that is used to measure events from the server and the client as seen by the driver.\n * @alias module:metrics~ClientMetrics\n * @interface\n */\nclass ClientMetrics {\n  /**\n   * Method invoked when an authentication error is obtained from the server.\n   * @param {AuthenticationError|Error} e The error encountered.\n   */\n  onAuthenticationError(e) {}\n\n  /**\n   * Method invoked when an error (different than a server or client timeout, authentication or connection error) is\n   * encountered when executing a request.\n   * @param {OperationTimedOutError} e The timeout error.\n   */\n  onClientTimeoutError(e) {}\n\n  /**\n   * Method invoked when there is a connection error.\n   * @param {Error} e The error encountered.\n   */\n  onConnectionError(e) {}\n\n  /**\n   * Method invoked when an error (different than a server or client timeout, authentication or connection error) is\n   * encountered when executing a request.\n   * @param {Error} e The error encountered.\n   */\n  onOtherError(e) {}\n\n  /**\n   * Method invoked when a read timeout error is obtained from the server.\n   * @param {ResponseError} e The error encountered.\n   */\n  onReadTimeoutError(e) {}\n\n  /**\n   * Method invoked when a write timeout error is obtained from the server.\n   * @param {ResponseError} e The error encountered.\n   */\n  onWriteTimeoutError(e) {}\n\n  /**\n   * Method invoked when an unavailable error is obtained from the server.\n   * @param {ResponseError} e The error encountered.\n   */\n  onUnavailableError(e) {}\n\n  /**\n   * Method invoked when an execution is retried as a result of a client-level timeout.\n   * @param {Error} e The error that caused the retry.\n   */\n  onClientTimeoutRetry(e) {}\n\n  /**\n   * Method invoked when an error (other than a server or client timeout) is retried.\n   * @param {Error} e The error that caused the retry.\n   */\n  onOtherErrorRetry(e) {}\n\n  /**\n   * Method invoked when an execution is retried as a result of a read timeout from the server (coordinator to replica).\n   * @param {Error} e The error that caused the retry.\n   */\n  onReadTimeoutRetry(e) {}\n\n  /**\n   * Method invoked when an execution is retried as a result of an unavailable error from the server.\n   * @param {Error} e The error that caused the retry.\n   */\n  onUnavailableRetry(e) {}\n\n  /**\n   * Method invoked when an execution is retried as a result of a write timeout from the server (coordinator to\n   * replica).\n   * @param {Error} e The error that caused the retry.\n   */\n  onWriteTimeoutRetry(e) {}\n\n  /**\n   * Method invoked when an error is marked as ignored by the retry policy.\n   * @param {Error} e The error that was ignored by the retry policy.\n   */\n  onIgnoreError(e) {}\n\n  /**\n   * Method invoked when a speculative execution is started.\n   */\n  onSpeculativeExecution() {}\n\n  /**\n   * Method invoked when a response is obtained successfully.\n   * @param {Array<Number>} latency The latency represented in a <code>[seconds, nanoseconds]</code> tuple\n   * Array, where nanoseconds is the remaining part of the real time that can't be represented in second precision.\n   */\n  onSuccessfulResponse(latency) {}\n\n  /**\n   * Method invoked when any response is obtained, the response can be the result of a successful execution or a\n   * server-side error.\n   * @param {Array<Number>} latency The latency represented in a <code>[seconds, nanoseconds]</code> tuple\n   * Array, where nanoseconds is the remaining part of the real time that can't be represented in second precision.\n   */\n  onResponse(latency) {\n\n  }\n}\n\nmodule.exports = ClientMetrics;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst ClientMetrics = require('./client-metrics');\nconst EventEmitter = require('events');\n\n/**\n * A default implementation of [ClientMetrics]{@link module:metrics~ClientMetrics} that exposes the driver events as\n * Node.js events.\n * <p>\n *   An instance of [DefaultMetrics]{@link module:metrics~DefaultMetrics} is configured by default in the client,\n *   you can access this instance using [Client#metrics]{@link Client#metrics} property.\n * </p>\n * @implements {module:metrics~ClientMetrics}\n * @alias module:metrics~DefaultMetrics\n * @example <caption>Listening to events emitted</caption>\n * defaultMetrics.errors.on('increment', err => totalErrors++);\n * defaultMetrics.errors.clientTimeout.on('increment', () => clientTimeoutErrors++);\n * defaultMetrics.speculativeRetries.on('increment', () => specExecsCount++);\n * defaultMetrics.responses.on('increment', latency => myHistogram.record(latency));\n */\nclass DefaultMetrics extends ClientMetrics {\n  /**\n   * Creates a new instance of [DefaultMetrics]{@link module:metrics~DefaultMetrics}.\n   */\n  constructor() {\n    super();\n\n    /**\n     * Emits all the error events.\n     * <p>Use each of the properties to measure events of specific errors.</p>\n     * @type {EventEmitter}\n     * @property {EventEmitter} authentication Emits the authentication timeout error events.\n     * @property {EventEmitter} clientTimeout Emits the client timeout error events.\n     * @property {EventEmitter} connection Emits the connection error events.\n     * @property {EventEmitter} readTimeout Emits the read timeout error events obtained from the server.\n     * @property {EventEmitter} other Emits the error events, that are not part of the other categories.\n     * @property {EventEmitter} unavailable Emits the unavailable error events obtained from the server.\n     * @property {EventEmitter} writeTimeout Emits the write timeout error events obtained from the server\n     */\n    this.errors = new EventEmitter();\n    this.errors.authentication = new EventEmitter();\n    this.errors.clientTimeout = new EventEmitter();\n    this.errors.connection = new EventEmitter();\n    this.errors.other = new EventEmitter();\n    this.errors.readTimeout = new EventEmitter();\n    this.errors.unavailable = new EventEmitter();\n    this.errors.writeTimeout = new EventEmitter();\n\n    /**\n     * Emits all the retry events.\n     * <p>Use each of the properties to measure events of specific retries.</p>\n     * @type {EventEmitter}\n     * @property {EventEmitter} clientTimeout Emits when an execution is retried as a result of an client timeout.\n     * @property {EventEmitter} other Emits the error events, that are not part of the other categories.\n     * @property {EventEmitter} readTimeout Emits an execution is retried as a result of an read timeout error from the\n     * server (coordinator to replica).\n     * @property {EventEmitter} unavailable Emits an execution is retried as a result of an unavailable error from the\n     * server.\n     * @property {EventEmitter} writeTimeout Emits an execution is retried as a result of a write timeout error from the\n     * server (coordinator to replica).\n     */\n    this.retries = new EventEmitter();\n    this.retries.clientTimeout = new EventEmitter();\n    this.retries.other = new EventEmitter();\n    this.retries.readTimeout = new EventEmitter();\n    this.retries.unavailable = new EventEmitter();\n    this.retries.writeTimeout = new EventEmitter();\n\n    /**\n     * Emits events when a speculative execution is started.\n     * @type {EventEmitter}\n     */\n    this.speculativeExecutions = new EventEmitter();\n\n    /**\n     * Emits events when an error is ignored by the retry policy.\n     * @type {EventEmitter}\n     */\n    this.ignoredErrors = new EventEmitter();\n\n    /**\n     * Emits events when a response message is obtained.\n     * @type {EventEmitter}\n     * @property {EventEmitter} success Emits when a response was obtained as the result of a successful execution.\n     */\n    this.responses = new EventEmitter();\n    this.responses.success = new EventEmitter();\n  }\n\n  /** @override */\n  onAuthenticationError(e) {\n    this.errors.authentication.emit('increment', e);\n    this.errors.emit('increment', e);}\n\n  /** @override */\n  onConnectionError(e) {\n    this.errors.connection.emit('increment', e);\n    this.errors.emit('increment', e);\n  }\n\n  /** @override */\n  onReadTimeoutError(e) {\n    this.errors.readTimeout.emit('increment', e);\n    this.errors.emit('increment', e);\n  }\n\n  /** @override */\n  onWriteTimeoutError(e) {\n    this.errors.writeTimeout.emit('increment', e);\n    this.errors.emit('increment', e);\n  }\n\n  /** @override */\n  onUnavailableError(e) {\n    this.errors.unavailable.emit('increment', e);\n    this.errors.emit('increment', e);\n  }\n\n  /** @override */\n  onClientTimeoutError(e) {\n    this.errors.clientTimeout.emit('increment', e);\n    this.errors.emit('increment', e);\n  }\n\n  /** @override */\n  onOtherError(e) {\n    this.errors.other.emit('increment', e);\n    this.errors.emit('increment', e);\n  }\n\n  /** @override */\n  onClientTimeoutRetry(e) {\n    this.retries.clientTimeout.emit('increment', e);\n    this.retries.emit('increment', e);\n  }\n\n  /** @override */\n  onOtherErrorRetry(e) {\n    this.retries.other.emit('increment', e);\n    this.retries.emit('increment', e);\n  }\n\n  /** @override */\n  onReadTimeoutRetry(e) {\n    this.retries.readTimeout.emit('increment', e);\n    this.retries.emit('increment', e);\n  }\n\n  /** @override */\n  onUnavailableRetry(e) {\n    this.retries.unavailable.emit('increment', e);\n    this.retries.emit('increment', e);\n  }\n\n  /** @override */\n  onWriteTimeoutRetry(e) {\n    this.retries.writeTimeout.emit('increment', e);\n    this.retries.emit('increment', e);\n  }\n\n  /** @override */\n  onIgnoreError(e) {\n    this.ignoredErrors.emit('increment', e);\n  }\n\n  /** @override */\n  onSpeculativeExecution() {\n    this.speculativeExecutions.emit('increment');\n  }\n\n  /** @override */\n  onSuccessfulResponse(latency) {\n    this.responses.success.emit('increment', latency);\n  }\n\n  /** @override */\n  onResponse(latency) {\n    this.responses.emit('increment', latency);\n  }\n}\n\nmodule.exports = DefaultMetrics;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst ClientMetrics = require('./client-metrics');\nconst DefaultMetrics = require('./default-metrics');\n\n/**\n * The <code>metrics</code> module contains interfaces and implementations used by the driver to expose\n * measurements of its internal behavior and of the server as seen from the driver side.\n * @module metrics\n */\n\nmodule.exports = { ClientMetrics, DefaultMetrics };","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n/**\n * @classdesc Provides [Authenticator]{@link module:auth~Authenticator} instances to be used when connecting to a host.\n * @constructor\n * @abstract\n * @alias module:auth~AuthProvider\n */\nfunction AuthProvider() {\n\n}\n\n/**\n * Returns an [Authenticator]{@link module:auth~Authenticator} instance to be used when connecting to a host.\n * @param {String} endpoint The ip address and port number in the format ip:port\n * @param {String} name Authenticator name\n * @abstract\n * @returns {Authenticator}\n */\nAuthProvider.prototype.newAuthenticator = function (endpoint, name) {\n  throw new Error('This is an abstract class, you must implement newAuthenticator method or ' +\n    'use another auth provider that inherits from this class');\n};\n\n/**\n * @class\n * @classdesc Handles SASL authentication with Cassandra servers.\n * Each time a new connection is created and the server requires authentication,\n * a new instance of this class will be created by the corresponding.\n * @constructor\n * @alias module:auth~Authenticator\n */\nfunction Authenticator() {\n\n}\n\n/**\n * Obtain an initial response token for initializing the SASL handshake.\n * @param {Function} callback\n */\nAuthenticator.prototype.initialResponse = function (callback) {\n  callback(new Error('Not implemented'));\n};\n\n/**\n * Evaluates a challenge received from the Server. Generally, this method should callback with\n * no error and no additional params when authentication is complete from the client perspective.\n * @param {Buffer} challenge\n * @param {Function} callback\n */\nAuthenticator.prototype.evaluateChallenge = function (challenge, callback) {\n  callback(new Error('Not implemented'));\n};\n\n/**\n * Called when authentication is successful with the last information\n * optionally sent by the server.\n * @param {Buffer} [token]\n */\nAuthenticator.prototype.onAuthenticationSuccess = function (token) {\n\n};\n\nexports.AuthProvider = AuthProvider;\nexports.Authenticator = Authenticator;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\n\nconst provider = require('./provider.js');\nconst utils = require('../utils');\nconst AuthProvider = provider.AuthProvider;\nconst Authenticator = provider.Authenticator;\n/**\n * Creates a new instance of the Authenticator provider\n * @classdesc Provides plain text [Authenticator]{@link module:auth~Authenticator} instances to be used when\n * connecting to a host.\n * @extends module:auth~AuthProvider\n * @example\n * var authProvider = new cassandra.auth.PlainTextAuthProvider('my_user', 'p@ssword1!');\n * //Set the auth provider in the clientOptions when creating the Client instance\n * const client = new Client({ contactPoints: contactPoints, authProvider: authProvider });\n * @param {String} username User name in plain text\n * @param {String} password Password in plain text\n * @alias module:auth~PlainTextAuthProvider\n * @constructor\n */\nfunction PlainTextAuthProvider(username, password) {\n  this.username = username;\n  this.password = password;\n}\n\nutil.inherits(PlainTextAuthProvider, AuthProvider);\n\n/**\n * Returns a new [Authenticator]{@link module:auth~Authenticator} instance to be used for plain text authentication.\n * @override\n * @returns {Authenticator}\n */\nPlainTextAuthProvider.prototype.newAuthenticator = function () {\n  return new PlainTextAuthenticator(this.username, this.password);\n};\n\n/**\n * @ignore\n */\nfunction PlainTextAuthenticator(username, password) {\n  this.username = username;\n  this.password = password;\n}\n\nutil.inherits(PlainTextAuthenticator, Authenticator);\n\nPlainTextAuthenticator.prototype.initialResponse = function (callback) {\n  const initialToken = Buffer.concat([\n    utils.allocBufferFromArray([0]),\n    utils.allocBufferFromString(this.username, 'utf8'),\n    utils.allocBufferFromArray([0]),\n    utils.allocBufferFromString(this.password, 'utf8')\n  ]);\n  callback(null, initialToken);\n};\n\nPlainTextAuthenticator.prototype.evaluateChallenge = function (challenge, callback) {\n  //noop\n  callback();\n};\n\nmodule.exports = {\n  PlainTextAuthenticator,\n  PlainTextAuthProvider,\n};\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\nconst { Authenticator } = require('./provider');\n\nconst dseAuthenticatorName = 'com.datastax.bdp.cassandra.auth.DseAuthenticator';\n\n/**\n * Base class for Authenticator implementations that want to make use of\n * the authentication scheme negotiation in the DseAuthenticator\n * @param {String} authenticatorName\n * @extends Authenticator\n * @constructor\n * @ignore\n */\nfunction BaseDseAuthenticator(authenticatorName) {\n  this.authenticatorName = authenticatorName;\n}\n\nutil.inherits(BaseDseAuthenticator, Authenticator);\n\n/**\n * Return a Buffer containing the required SASL mechanism.\n * @abstract\n * @returns {Buffer}\n */\nBaseDseAuthenticator.prototype.getMechanism = function () {\n  throw new Error('Not implemented');\n};\n\n/**\n * Return a byte array containing the expected successful server challenge.\n * @abstract\n * @returns {Buffer}\n */\nBaseDseAuthenticator.prototype.getInitialServerChallenge = function () {\n  throw new Error('Not implemented');\n};\n\n/**\n * @param {Function} callback\n * @override\n */\nBaseDseAuthenticator.prototype.initialResponse = function (callback) {\n  if (!this._isDseAuthenticator()) {\n    //fallback\n    return this.evaluateChallenge(this.getInitialServerChallenge(), callback);\n  }\n  //send the mechanism as a first auth message\n  callback(null, this.getMechanism());\n};\n\n/**\n * Determines if the name of the authenticator matches DSE 5+\n * @protected\n * @ignore\n */\nBaseDseAuthenticator.prototype._isDseAuthenticator = function () {\n  return this.authenticatorName === dseAuthenticatorName;\n};\n\nmodule.exports = BaseDseAuthenticator;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst utils = require('../utils');\n\n/**\n * GSSAPI Client interface.\n * @ignore\n */\nclass GssapiClient {\n  /**\n   * @param {String} [authorizationId]\n   * @param {String} [service]\n   */\n  constructor(authorizationId, service) {\n    this.authorizationId = authorizationId;\n    this.service = service !== undefined ? service : 'dse';\n  }\n\n  /**\n   * @abstract\n   * @param {String} host Host name or ip\n   * @param {Function} callback\n   */\n  init(host, callback) {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @param {Buffer} challenge\n   * @param {Function} callback\n   * @abstract\n   */\n  evaluateChallenge(challenge, callback) {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @abstract\n   * @param {Function} [callback]\n   */\n  shutdown(callback) {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Factory to get the actual implementation of GSSAPI (unix or win)\n   * @param {Object} kerberosModule Kerberos client library dependency\n   * @param {String} [authorizationId] An identity to act as (for proxy authentication).\n   * @param {String} [service] The service to use. (defaults to 'dse')\n   * @returns GssapiClient\n   */\n  static createNew(kerberosModule, authorizationId, service) {\n    return new StandardGssClient(kerberosModule, authorizationId, service);\n  }\n}\n\n/**\n * GSSAPI Client implementation using kerberos module.\n * @ignore\n */\nclass StandardGssClient extends GssapiClient {\n  constructor(kerberosModule, authorizationId, service) {\n    if (typeof kerberosModule.initializeClient !== 'function') {\n      throw new Error('The driver expects version 1.x of the kerberos library');\n    }\n\n    super(authorizationId, service);\n    this.kerberos = kerberosModule;\n    this.transitionIndex = 0;\n  }\n\n  init(host, callback) {\n    this.host = host;\n    let uri = this.service;\n    if (this.host) {\n      //For the principal    \"dse/cassandra1.datastax.com@DATASTAX.COM\"\n      //the expected uri is: \"dse@cassandra1.datastax.com\"\n      uri = util.format(\"%s@%s\", this.service, this.host);\n    }\n    const options = {\n      gssFlags: this.kerberos.GSS_C_MUTUAL_FLAG //authenticate itself flag\n    };\n    this.kerberos.initializeClient(uri, options, (err, kerberosClient) => {\n      if (err) {\n        return callback(err);\n      }\n      this.kerberosClient = kerberosClient;\n      callback();\n    });\n  }\n\n  /** @override */\n  evaluateChallenge(challenge, callback) {\n    this['transition' + this.transitionIndex](challenge, (err, response) => {\n      if (err) {\n        return callback(err);\n      }\n      this.transitionIndex++;\n      callback(null, response ? utils.allocBufferFromString(response, 'base64') : utils.allocBuffer(0));\n    });\n  }\n\n  transition0(challenge, callback) {\n    this.kerberosClient.step('', callback);\n  }\n\n  transition1(challenge, callback) {\n    const charPointerChallenge = challenge.toString('base64');\n    this.kerberosClient.step(charPointerChallenge, callback);\n  }\n\n  transition2(challenge, callback) {\n    this.kerberosClient.unwrap(challenge.toString('base64'), (err, response) => {\n      if (err) {\n        return callback(err, false);\n      }\n      const cb = function (err, wrapped) {\n        if (err) {\n          return callback(err);\n        }\n        callback(null, wrapped);\n      };\n      if (this.authorizationId !== undefined) {\n        this.kerberosClient.wrap(response, { user: this.authorizationId }, cb);\n      }\n      else {\n        this.kerberosClient.wrap(response, null, cb);\n      }\n    });\n  }\n\n  shutdown(callback) {\n    this.kerberosClient = null;\n    callback();\n  }\n}\n\nmodule.exports = GssapiClient;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\nconst { AuthProvider } = require('./provider');\nconst BaseDseAuthenticator = require('./base-dse-authenticator');\nconst GssapiClient = require('./gssapi-client');\nconst dns = require('dns');\nconst utils = require('../utils');\n\nconst mechanism = utils.allocBufferFromString('GSSAPI');\nconst initialServerChallenge = 'GSSAPI-START';\nconst emptyBuffer = utils.allocBuffer(0);\n\n/**\n * Creates a new instance of <code>DseGssapiAuthProvider</code>.\n * @classdesc\n * AuthProvider that provides GSSAPI authenticator instances for clients to connect\n * to DSE clusters secured with the DseAuthenticator.\n * @param {Object} [gssOptions] GSSAPI authenticator options\n * @param {String} [gssOptions.authorizationId] The optional authorization ID. Providing an authorization ID allows the\n * currently authenticated user to act as a different user (a.k.a. proxy authentication).\n * @param {String} [gssOptions.service] The service to use. Defaults to 'dse'.\n * @param {Function} [gssOptions.hostNameResolver] A method to be used to resolve the name of the Cassandra node based\n * on the IP Address.  Defaults to [lookupServiceResolver]{@link module:auth~DseGssapiAuthProvider.lookupServiceResolver}\n * which resolves the FQDN of the provided IP to generate principals in the format of\n * <code>dse/example.com@MYREALM.COM</code>.\n * Alternatively, you can use [reverseDnsResolver]{@link module:auth~DseGssapiAuthProvider.reverseDnsResolver} to do a\n * reverse DNS lookup or [useIpResolver]{@link module:auth~DseGssapiAuthProvider.useIpResolver} to simply use the IP\n * address provided.\n * @param {String} [gssOptions.user] DEPRECATED, it will be removed in future versions. For proxy authentication, use\n * <code>authorizationId</code> instead.\n * @example\n * const client = new cassandra.Client({\n *   contactPoints: ['h1', 'h2'],\n *   authProvider: new cassandra.auth.DseGssapiAuthProvider()\n * });\n * @alias module:auth~DseGssapiAuthProvider\n * @constructor\n */\nfunction DseGssapiAuthProvider(gssOptions) {\n  //load the kerberos at construction time\n  try {\n    // eslint-disable-next-line\n    this._kerberos = require('kerberos');\n  }\n  catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      const newErr = new Error('You must install module \"kerberos\" to use GSSAPI auth provider: ' +\n        'https://www.npmjs.com/package/kerberos');\n      newErr.code = err.code;\n      throw newErr;\n    }\n    throw err;\n  }\n  gssOptions = gssOptions || utils.emptyObject;\n  this.authorizationId = gssOptions.authorizationId || gssOptions.user;\n  this.service = gssOptions.service;\n  this.hostNameResolver = gssOptions.hostNameResolver || DseGssapiAuthProvider.lookupServiceResolver;\n}\n\nutil.inherits(DseGssapiAuthProvider, AuthProvider);\n\n/**\n * Returns an Authenticator instance to be used by the driver when connecting to a host.\n * @param {String} endpoint The IP address and port number in the format ip:port.\n * @param {String} name Authenticator name.\n * @override\n * @returns {Authenticator}\n */\nDseGssapiAuthProvider.prototype.newAuthenticator = function (endpoint, name) {\n  let address = endpoint;\n  if (endpoint.indexOf(':') > 0) {\n    address = endpoint.split(':')[0];\n  }\n  return new GssapiAuthenticator(\n    this._kerberos, address, name, this.authorizationId, this.service, this.hostNameResolver);\n};\n\n/**\n * Performs a lookupService query that resolves an IPv4 or IPv6 address to a hostname.  This ultimately makes a\n * <code>getnameinfo()</code> system call which depends on the OS to do hostname resolution.\n * <p/>\n * <b>Note:</b> Depends on <code>dns.lookupService</code> which was added in 0.12.  For older versions falls back on\n * [reverseDnsResolver]{@link module:auth~DseGssapiAuthProvider.reverseDnsResolver}.\n *\n * @param {String} ip IP address to resolve.\n * @param {Function} callback The callback function with <code>err</code> and <code>hostname</code> arguments.\n */\nDseGssapiAuthProvider.lookupServiceResolver = function (ip, callback) {\n  if (!dns.lookupService) {\n    return DseGssapiAuthProvider.reverseDnsResolver(ip, callback);\n  }\n  dns.lookupService(ip, 0, function (err, hostname) {\n    if (err) {\n      return callback(err);\n    }\n    if (!hostname) {\n      //fallback to ip\n      return callback(null, ip);\n    }\n    callback(null, hostname);\n  });\n};\n\n/**\n * Performs a reverse DNS query that resolves an IPv4 or IPv6 address to a hostname.\n * @param {String} ip IP address to resolve.\n * @param {Function} callback The callback function with <code>err</code> and <code>hostname</code> arguments.\n */\nDseGssapiAuthProvider.reverseDnsResolver = function (ip, callback) {\n  dns.reverse(ip, function (err, names) {\n    if (err) {\n      return callback(err);\n    }\n    if (!names || !names.length) {\n      //fallback to ip\n      return callback(null, ip);\n    }\n    callback(null, names[0]);\n  });\n};\n\n/**\n * Effectively a no op operation, returns the IP address provided.\n * @param {String} ip IP address to use.\n * @param {Function} callback The callback function with <code>err</code> and <code>hostname</code> arguments.\n */\nDseGssapiAuthProvider.useIpResolver = function (ip, callback) {\n  callback(null, ip);\n};\n\n/**\n * @param {Object} kerberosModule\n * @param {String} address Host address.\n * @param {String} authenticatorName\n * @param {String} authorizationId\n * @param {String} service\n * @param {Function} hostNameResolver\n * @extends Authenticator\n * @private\n */\nfunction GssapiAuthenticator(kerberosModule, address, authenticatorName, authorizationId, service, hostNameResolver) {\n  BaseDseAuthenticator.call(this, authenticatorName);\n  this.authorizationId = authorizationId;\n  this.address = address;\n  this.client = GssapiClient.createNew(kerberosModule, authorizationId, service);\n  this.hostNameResolver = hostNameResolver;\n}\n\n//noinspection JSCheckFunctionSignatures\nutil.inherits(GssapiAuthenticator, BaseDseAuthenticator);\n\nGssapiAuthenticator.prototype.getMechanism = function () {\n  return mechanism;\n};\n\nGssapiAuthenticator.prototype.getInitialServerChallenge = function () {\n  return utils.allocBufferFromString(initialServerChallenge);\n};\n\n//noinspection JSUnusedGlobalSymbols\n/**\n * Obtain an initial response token for initializing the SASL handshake.\n * @param {Function} callback\n */\nGssapiAuthenticator.prototype.initialResponse = function (callback) {\n  const self = this;\n  //initialize the GSS client\n  let host = this.address;\n  utils.series([\n    function getHostName(next) {\n      self.hostNameResolver(self.address, function (err, name) {\n        if (!err && name) {\n          host = name;\n        }\n        next();\n      });\n    },\n    function initClient(next) {\n      self.client.init(host, function (err) {\n        if (err) {\n          return next(err);\n        }\n        if (!self._isDseAuthenticator()) {\n          //fallback\n          return self.evaluateChallenge(self.getInitialServerChallenge(), next);\n        }\n        //send the mechanism as a first auth message\n        next(null, self.getMechanism());\n      });\n    }\n  ], callback);\n};\n\n/**\n * Evaluates a challenge received from the Server. Generally, this method should callback with\n * no error and no additional params when authentication is complete from the client perspective.\n * @param {Buffer} challenge\n * @param {Function} callback\n * @override\n */\nGssapiAuthenticator.prototype.evaluateChallenge = function (challenge, callback) {\n  if (!challenge || challenge.toString() === initialServerChallenge) {\n    challenge = emptyBuffer;\n  }\n  this.client.evaluateChallenge(challenge, callback);\n};\n\n/**\n * @override\n */\nGssapiAuthenticator.prototype.onAuthenticationSuccess = function (token) {\n  this.client.shutdown(function noop() { });\n};\n\n\nmodule.exports = DseGssapiAuthProvider;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\nconst { AuthProvider } = require('./provider');\nconst BaseDseAuthenticator = require('./base-dse-authenticator');\nconst utils = require('../utils');\n\nconst mechanism = utils.allocBufferFromString('PLAIN');\nconst separatorBuffer = utils.allocBufferFromArray([0]);\nconst initialServerChallenge = 'PLAIN-START';\n\n/**\n * Creates a new instance of <code>DsePlainTextAuthProvider</code>.\n * @classdesc\n * AuthProvider that provides plain text authenticator instances for clients to connect\n * to DSE clusters secured with the DseAuthenticator.\n * @param {String} username The username; cannot be <code>null</code>.\n * @param {String} password The password; cannot be <code>null</code>.\n * @param {String} [authorizationId] The optional authorization ID. Providing an authorization ID allows the currently\n * authenticated user to act as a different user (a.k.a. proxy authentication).\n * @extends AuthProvider\n * @alias module:auth~DsePlainTextAuthProvider\n * @example\n * const client = new cassandra.Client({\n *   contactPoints: ['h1', 'h2'],\n *   authProvider: new cassandra.auth.DsePlainTextAuthProvider('user', 'p@ssword1');\n * });\n * @constructor\n */\nfunction DsePlainTextAuthProvider(username, password, authorizationId) {\n  if (typeof username !== 'string' || typeof password !== 'string') {\n    // Validate for null and undefined\n    throw new TypeError('Username and password must be a string');\n  }\n  this.username = username;\n  this.password = password;\n  this.authorizationId = authorizationId;\n}\n\nutil.inherits(DsePlainTextAuthProvider, AuthProvider);\n\n/**\n * Returns an Authenticator instance to be used by the driver when connecting to a host.\n * @param {String} endpoint The IP address and port number in the format ip:port.\n * @param {String} name Authenticator name.\n * @override\n * @returns {Authenticator}\n */\nDsePlainTextAuthProvider.prototype.newAuthenticator = function (endpoint, name) {\n  return new PlainTextAuthenticator(name, this.username, this.password, this.authorizationId);\n};\n\n/**\n * @param {String} authenticatorName\n * @param {String} authenticatorId\n * @param {String} password\n * @param {String} authorizationId\n * @extends BaseDseAuthenticator\n * @constructor\n * @private\n */\nfunction PlainTextAuthenticator(authenticatorName, authenticatorId, password, authorizationId) {\n  BaseDseAuthenticator.call(this, authenticatorName);\n  this.authenticatorId = utils.allocBufferFromString(authenticatorId);\n  this.password = utils.allocBufferFromString(password);\n  this.authorizationId = utils.allocBufferFromString(authorizationId || '');\n}\n\nutil.inherits(PlainTextAuthenticator, BaseDseAuthenticator);\n\n/** @override */\nPlainTextAuthenticator.prototype.getMechanism = function () {\n  return mechanism;\n};\n\n/** @override */\nPlainTextAuthenticator.prototype.getInitialServerChallenge = function () {\n  return utils.allocBufferFromString(initialServerChallenge);\n};\n\n/** @override */\nPlainTextAuthenticator.prototype.evaluateChallenge = function (challenge, callback) {\n  if (!challenge || challenge.toString() !== initialServerChallenge) {\n    return callback(new Error('Incorrect SASL challenge from server'));\n  }\n  // The SASL plain text format is authorizationId 0 username 0 password\n  callback(null, Buffer.concat([\n    this.authorizationId,\n    separatorBuffer,\n    this.authenticatorId,\n    separatorBuffer,\n    this.password\n  ]));\n};\n\nmodule.exports = DsePlainTextAuthProvider;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst { AuthProvider, Authenticator } = require('./provider');\nconst { PlainTextAuthenticator } = require('./plain-text-auth-provider');\nconst errors = require('../errors');\n\nconst dseAuthenticator = 'com.datastax.bdp.cassandra.auth.DseAuthenticator';\n\n/**\n * Internal authentication provider that is used when no provider has been set by the user.\n * @ignore\n */\nclass NoAuthProvider extends AuthProvider {\n  newAuthenticator(endpoint, name) {\n    if (name === dseAuthenticator) {\n      // Try to use transitional mode\n      return new TransitionalModePlainTextAuthenticator();\n    }\n\n    // Use an authenticator that doesn't allow auth flow\n    return new NoAuthAuthenticator(endpoint);\n  }\n}\n\n/**\n * An authenticator throws an error when authentication flow is started.\n * @ignore\n */\nclass NoAuthAuthenticator extends Authenticator {\n  constructor(endpoint) {\n    super();\n    this.endpoint = endpoint;\n  }\n\n  initialResponse(callback) {\n    callback(new errors.AuthenticationError(\n      `Host ${this.endpoint} requires authentication, but no authenticator found in the options`));\n  }\n}\n\n/**\n * Authenticator that accounts for DSE authentication configured with transitional mode: normal.\n *\n * In this situation, the client is allowed to connect without authentication, but DSE\n * would still send an AUTHENTICATE response. This Authenticator handles this situation\n * by sending back a dummy credential.\n */\nclass TransitionalModePlainTextAuthenticator extends PlainTextAuthenticator {\n  constructor() {\n    super('', '');\n  }\n}\n\nmodule.exports = NoAuthProvider;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\n/**\n * DSE Authentication module.\n * <p>\n *   Contains the classes used for connecting to a DSE cluster secured with DseAuthenticator.\n * </p>\n * @module auth\n */\n\nconst { Authenticator, AuthProvider } = require('./provider');\nconst { PlainTextAuthProvider } = require('./plain-text-auth-provider');\nconst DseGssapiAuthProvider = require('./dse-gssapi-auth-provider');\nconst DsePlainTextAuthProvider = require('./dse-plain-text-auth-provider');\nconst NoAuthProvider = require('./no-auth-provider');\n\nmodule.exports = {\n  Authenticator,\n  AuthProvider,\n  DseGssapiAuthProvider,\n  DsePlainTextAuthProvider,\n  NoAuthProvider,\n  PlainTextAuthProvider\n};\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst util = require('util');\nconst policies = require('./policies');\nconst types = require('./types');\nconst utils = require('./utils');\nconst tracker = require('./tracker');\nconst metrics = require('./metrics');\nconst auth = require('./auth');\n\n/** Core connections per host for protocol versions 1 and 2 */\nconst coreConnectionsPerHostV2 = {\n  [types.distance.local]: 2,\n  [types.distance.remote]: 1,\n  [types.distance.ignored]: 0\n};\n\n/** Core connections per host for protocol version 3 and above */\nconst coreConnectionsPerHostV3 = {\n  [types.distance.local]: 1,\n  [types.distance.remote]: 1,\n  [types.distance.ignored]: 0\n};\n\n/** Default maxRequestsPerConnection value for protocol v1 and v2 */\nconst maxRequestsPerConnectionV2 = 128;\n\n/** Default maxRequestsPerConnection value for protocol v3+ */\nconst maxRequestsPerConnectionV3 = 2048;\n\nconst continuousPageUnitBytes = 'bytes';\nconst continuousPageDefaultSize = 5000;\nconst continuousPageDefaultHighWaterMark = 10000;\n\n/**\n * @returns {ClientOptions}\n */\nfunction defaultOptions () {\n  return ({\n    policies: {\n      addressResolution: policies.defaultAddressTranslator(),\n      loadBalancing: policies.defaultLoadBalancingPolicy(),\n      reconnection: policies.defaultReconnectionPolicy(),\n      retry: policies.defaultRetryPolicy(),\n      speculativeExecution: policies.defaultSpeculativeExecutionPolicy(),\n      timestampGeneration: policies.defaultTimestampGenerator()\n    },\n    queryOptions: {\n      fetchSize: 5000,\n      prepare: false,\n      captureStackTrace: false\n    },\n    protocolOptions: {\n      port: 9042,\n      maxSchemaAgreementWaitSeconds: 10,\n      maxVersion: 0,\n      noCompact: false\n    },\n    pooling: {\n      heartBeatInterval: 30000,\n      warmup: true\n    },\n    socketOptions: {\n      connectTimeout: 5000,\n      defunctReadTimeoutThreshold: 64,\n      keepAlive: true,\n      keepAliveDelay: 0,\n      readTimeout: 12000,\n      tcpNoDelay: true,\n      coalescingThreshold: 65536\n    },\n    authProvider: null,\n    requestTracker: null,\n    metrics: new metrics.DefaultMetrics(),\n    maxPrepared: 500,\n    refreshSchemaDelay: 1000,\n    isMetadataSyncEnabled: true,\n    prepareOnAllHosts: true,\n    rePrepareOnUp: true,\n    encoding: {\n      copyBuffer: true,\n      useUndefinedAsUnset: true\n    },\n    monitorReporting: {\n      enabled: true\n    }\n  });\n}\n\n/**\n * Extends and validates the user options\n * @param {Object} [baseOptions] The source object instance that will be overridden\n * @param {Object} userOptions\n * @returns {Object}\n */\nfunction extend(baseOptions, userOptions) {\n  if (arguments.length === 1) {\n    userOptions = arguments[0];\n    baseOptions = {};\n  }\n  const options = utils.deepExtend(baseOptions, defaultOptions(), userOptions);\n\n  if (!options.cloud) {\n    if (!Array.isArray(options.contactPoints) || options.contactPoints.length === 0) {\n      throw new TypeError('Contacts points are not defined.');\n    }\n\n    for (let i = 0; i < options.contactPoints.length; i++) {\n      const hostName = options.contactPoints[i];\n      if (!hostName) {\n        throw new TypeError(util.format('Contact point %s (%s) is not a valid host name, ' +\n          'the following values are valid contact points: ipAddress, hostName or ipAddress:port', i, hostName));\n      }\n    }\n\n    options.sni = undefined;\n  } else {\n    validateCloudOptions(options);\n  }\n\n  if (!options.logEmitter) {\n    options.logEmitter = function () {};\n  }\n  if (!options.queryOptions) {\n    throw new TypeError('queryOptions not defined in options');\n  }\n\n  if (options.requestTracker !== null && !(options.requestTracker instanceof tracker.RequestTracker)) {\n    throw new TypeError('requestTracker must be an instance of RequestTracker');\n  }\n\n  if (!(options.metrics instanceof metrics.ClientMetrics)) {\n    throw new TypeError('metrics must be an instance of ClientMetrics');\n  }\n\n  validatePoliciesOptions(options.policies);\n\n  validateProtocolOptions(options.protocolOptions);\n\n  validateSocketOptions(options.socketOptions);\n\n  validateAuthenticationOptions(options);\n\n  options.encoding = options.encoding || {};\n\n  validateEncodingOptions(options.encoding);\n\n  if (options.profiles && !Array.isArray(options.profiles)) {\n    throw new TypeError('profiles must be an Array of ExecutionProfile instances');\n  }\n\n  validateApplicationInfo(options);\n\n  validateMonitorReporting(options);\n\n  return options;\n}\n\n/**\n * Validates the options to connect to a cloud instance.\n * @private\n */\nfunction validateCloudOptions(options) {\n  const bundle = options.cloud.secureConnectBundle;\n\n  // eslint-disable-next-line no-undef\n  if (!(typeof bundle === 'string' || (typeof URL !== 'undefined' && bundle instanceof URL))) {\n    throw new TypeError('secureConnectBundle in cloud options must be of type string');\n  }\n\n  if (options.contactPoints) {\n    throw new TypeError('Contact points can not be defined when cloud settings are provided');\n  }\n\n  if (options.sslOptions) {\n    throw new TypeError('SSL options can not be defined when cloud settings are provided');\n  }\n}\n\n/**\n * Validates the policies from the client options.\n * @param {ClientOptions.policies} policiesOptions\n * @private\n */\nfunction validatePoliciesOptions(policiesOptions) {\n  if (!policiesOptions) {\n    throw new TypeError('policies not defined in options');\n  }\n  if (!(policiesOptions.loadBalancing instanceof policies.loadBalancing.LoadBalancingPolicy)) {\n    throw new TypeError('Load balancing policy must be an instance of LoadBalancingPolicy');\n  }\n  if (!(policiesOptions.reconnection instanceof policies.reconnection.ReconnectionPolicy)) {\n    throw new TypeError('Reconnection policy must be an instance of ReconnectionPolicy');\n  }\n  if (!(policiesOptions.retry instanceof policies.retry.RetryPolicy)) {\n    throw new TypeError('Retry policy must be an instance of RetryPolicy');\n  }\n  if (!(policiesOptions.addressResolution instanceof policies.addressResolution.AddressTranslator)) {\n    throw new TypeError('Address resolution policy must be an instance of AddressTranslator');\n  }\n  if (policiesOptions.timestampGeneration !== null &&\n    !(policiesOptions.timestampGeneration instanceof policies.timestampGeneration.TimestampGenerator)) {\n    throw new TypeError('Timestamp generation policy must be an instance of TimestampGenerator');\n  }\n}\n\n/**\n * Validates the protocol options.\n * @param {ClientOptions.protocolOptions} protocolOptions\n * @private\n */\nfunction validateProtocolOptions(protocolOptions) {\n  if (!protocolOptions) {\n    throw new TypeError('protocolOptions not defined in options');\n  }\n  const version = protocolOptions.maxVersion;\n  if (version && (typeof version !== 'number' || !types.protocolVersion.isSupported(version))) {\n    throw new TypeError(util.format('protocolOptions.maxVersion provided (%s) is invalid', version));\n  }\n}\n\n/**\n * Validates the socket options.\n * @param {ClientOptions.socketOptions} socketOptions\n * @private\n */\nfunction validateSocketOptions(socketOptions) {\n  if (!socketOptions) {\n    throw new TypeError('socketOptions not defined in options');\n  }\n  if (typeof socketOptions.readTimeout !== 'number') {\n    throw new TypeError('socketOptions.readTimeout must be a Number');\n  }\n  if (typeof socketOptions.coalescingThreshold !== 'number' || socketOptions.coalescingThreshold <= 0) {\n    throw new TypeError('socketOptions.coalescingThreshold must be a positive Number');\n  }\n}\n\n/**\n * Validates authentication provider and credentials.\n * @param {ClientOptions} options\n * @private\n */\nfunction validateAuthenticationOptions(options) {\n  if (!options.authProvider) {\n    const credentials = options.credentials;\n    if (credentials) {\n      if (typeof credentials.username !== 'string' || typeof credentials.password !== 'string') {\n        throw new TypeError('credentials username and password must be a string');\n      }\n\n      options.authProvider = new auth.PlainTextAuthProvider(credentials.username, credentials.password);\n    } else {\n      options.authProvider = new auth.NoAuthProvider();\n    }\n  } else if (!(options.authProvider instanceof auth.AuthProvider)) {\n    throw new TypeError('options.authProvider must be an instance of AuthProvider');\n  }\n}\n\n/**\n * Validates the encoding options.\n * @param {ClientOptions.encoding} encodingOptions\n * @private\n */\nfunction validateEncodingOptions(encodingOptions) {\n  if (encodingOptions.map) {\n    const mapConstructor = encodingOptions.map;\n    if (typeof mapConstructor !== 'function' ||\n      typeof mapConstructor.prototype.forEach !== 'function' ||\n      typeof mapConstructor.prototype.set !== 'function') {\n      throw new TypeError('Map constructor not valid');\n    }\n  }\n\n  if (encodingOptions.set) {\n    const setConstructor = encodingOptions.set;\n    if (typeof setConstructor !== 'function' ||\n      typeof setConstructor.prototype.forEach !== 'function' ||\n      typeof setConstructor.prototype.add !== 'function') {\n      throw new TypeError('Set constructor not valid');\n    }\n  }\n\n  if ((encodingOptions.useBigIntAsLong || encodingOptions.useBigIntAsVarint) && typeof BigInt === 'undefined') {\n    throw new TypeError('BigInt is not supported by the JavaScript engine');\n  }\n}\n\nfunction validateApplicationInfo(options) {\n  function validateString(key) {\n    const str = options[key];\n\n    if (str !== null && str !== undefined && typeof str !== 'string') {\n      throw new TypeError(`${key} should be a String`);\n    }\n  }\n\n  validateString('applicationName');\n  validateString('applicationVersion');\n\n  if (options.id !== null && options.id !== undefined && !(options.id instanceof types.Uuid)) {\n    throw new TypeError('Client id must be a Uuid');\n  }\n}\n\nfunction validateMonitorReporting(options) {\n  const o = options.monitorReporting;\n  if (o === null || typeof o !== 'object') {\n    throw new TypeError(`Monitor reporting must be an object, obtained: ${o}`);\n  }\n}\n\n/**\n * Sets the default options that depend on the protocol version and other metadata.\n * @param {Client} client\n */\nfunction setMetadataDependent(client) {\n  const version = client.controlConnection.protocolVersion;\n  let coreConnectionsPerHost = coreConnectionsPerHostV3;\n  let maxRequestsPerConnection = maxRequestsPerConnectionV3;\n\n  if (!types.protocolVersion.uses2BytesStreamIds(version)) {\n    coreConnectionsPerHost = coreConnectionsPerHostV2;\n    maxRequestsPerConnection = maxRequestsPerConnectionV2;\n  }\n\n  if (client.options.queryOptions.consistency === undefined) {\n    client.options.queryOptions.consistency =\n      client.metadata.isDbaas() ? types.consistencies.localQuorum : types.consistencies.localOne;\n  }\n\n  client.options.pooling = utils.deepExtend(\n    {}, { coreConnectionsPerHost, maxRequestsPerConnection }, client.options.pooling);\n}\n\nexports.extend = extend;\nexports.defaultOptions = defaultOptions;\nexports.coreConnectionsPerHostV2 = coreConnectionsPerHostV2;\nexports.coreConnectionsPerHostV3 = coreConnectionsPerHostV3;\nexports.maxRequestsPerConnectionV2 = maxRequestsPerConnectionV2;\nexports.maxRequestsPerConnectionV3 = maxRequestsPerConnectionV3;\nexports.setMetadataDependent = setMetadataDependent;\nexports.continuousPageUnitBytes = continuousPageUnitBytes;\nexports.continuousPageDefaultSize = continuousPageDefaultSize;\nexports.continuousPageDefaultHighWaterMark = continuousPageDefaultHighWaterMark;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst utils = require('./utils');\nconst types = require('./types');\nconst promiseUtils = require('./promise-utils');\n\n/**\n * Creates a new instance of {@link ExecutionProfile}.\n * @classdesc\n * Represents a set configurations to be used in a statement execution to be used for a single {@link Client} instance.\n * <p>\n *   An {@link ExecutionProfile} instance should not be shared across different {@link Client} instances.\n * </p>\n * @param {String} name Name of the execution profile.\n * <p>\n *   Use <code>'default'</code> to specify that the new instance should be the default {@link ExecutionProfile} if no\n *   profile is specified in the execution.\n * </p>\n * @param {Object} [options] Profile options, when any of the options is not specified the {@link Client} will the use\n * the ones defined in the default profile.\n * @param {Number} [options.consistency] The consistency level to use for this profile.\n * @param {LoadBalancingPolicy} [options.loadBalancing] The load-balancing policy to use for this profile.\n * @param {Number} [options.readTimeout] The client per-host request timeout to use for this profile.\n * @param {RetryPolicy} [options.retry] The retry policy to use for this profile.\n * @param {Number} [options.serialConsistency] The serial consistency level to use for this profile.\n * @param {Object} [options.graphOptions]\n * @param {String} [options.graphOptions.language] The graph language to use for graph queries.\n * <p>\n *   Note that this setting should normally be <code>undefined</code> or set by a utility method and it's not expected\n *   to be defined manually by the user.\n * </p>\n * @param {String} [options.graphOptions.results] The protocol to use for serializing and deserializing graph results.\n * <p>\n *   Note that this setting should normally be <code>undefined</code> or set by a utility method and it's not expected\n *   to be defined manually by the user.\n * </p>\n * @param {String} [options.graphOptions.name] The graph name to use for graph queries.\n * @param {Number} [options.graphOptions.readConsistency] The consistency level to use for graph read queries.\n * @param {String} [options.graphOptions.source] The graph traversal source name to use for graph queries.\n * @param {Number} [options.graphOptions.writeConsistency] The consistency level to use for graph write queries.\n * @param {LoadBalancingPolicy} [options.loadBalancing] The load-balancing policy to use for this profile.\n * @param {Number} [options.readTimeout] The client per-host request timeout to use for this profile.\n * @param {RetryPolicy} [options.retry] The retry policy to use for this profile.\n * @param {Number} [options.serialConsistency] The serial consistency level to use for this profile.\n * @example\n * const { Client, ExecutionProfile } = require('cassandra-driver');\n * const client = new Client({\n *   contactPoints: ['host1', 'host2'],\n *   profiles: [\n *     new ExecutionProfile('metrics-oltp', {\n *       consistency: consistency.localQuorum,\n *       retry: myRetryPolicy\n *     })\n *   ]\n * });\n *\n * client.execute(query, params, { executionProfile: 'metrics-oltp' }, callback);\n * @constructor\n */\nfunction ExecutionProfile(name, options) {\n  if (typeof name !== 'string') {\n    throw new TypeError('Execution profile name must be a string');\n  }\n  options = options || utils.emptyObject;\n  const graphOptions = options.graphOptions || utils.emptyObject;\n  /**\n   * Name of the execution profile.\n   * @type {String}\n   */\n  this.name = name;\n  /**\n   * Consistency level.\n   * @type {Number}\n   */\n  this.consistency = options.consistency;\n  /**\n   * Load-balancing policy\n   * @type {LoadBalancingPolicy}\n   */\n  this.loadBalancing = options.loadBalancing;\n  /**\n   * Client read timeout.\n   * @type {Number}\n   */\n  this.readTimeout = options.readTimeout;\n  /**\n   * Retry policy.\n   * @type {RetryPolicy}\n   */\n  this.retry = options.retry;\n  /**\n   * Serial consistency level.\n   * @type {Number}\n   */\n  this.serialConsistency = options.serialConsistency;\n  /**\n   * The graph options for this profile.\n   * @type {Object}\n   * @property {String} language The graph language.\n   * @property {String} name The graph name.\n   * @property {String} readConsistency The consistency to use for graph write queries.\n   * @property {String} source The graph traversal source.\n   * @property {String} writeConsistency The consistency to use for graph write queries.\n   */\n  this.graphOptions = {\n    language: graphOptions.language,\n    results: graphOptions.results,\n    name: graphOptions.name,\n    readConsistency: graphOptions.readConsistency,\n    source: graphOptions.source,\n    writeConsistency: graphOptions.writeConsistency\n  };\n}\n\n/**\n * Contains the logic to handle the different execution profiles of a {@link Client}.\n * @ignore\n */\nclass ProfileManager {\n\n  /**\n   * @param {ClientOptions} options\n   */\n  constructor(options) {\n    this._profiles = options.profiles || [];\n    this._defaultConfiguredRetryPolicy = undefined;\n    this._setDefault(options);\n    // A array of unique load balancing policies\n    this._loadBalancingPolicies = [];\n    // A dictionary of name keys and profile values\n    this._profilesMap = {};\n    // A dictionary of name keys and custom payload dictionaries as values\n    this._customPayloadCache = {};\n    // A dictionary of name keys and graph options as values\n    this._graphOptionsCache = {};\n    this._profiles.forEach(function (p) {\n      this._profilesMap[p.name] = p;\n      // Set required properties\n      p.loadBalancing = p.loadBalancing || this._defaultProfile.loadBalancing;\n      // Using array indexOf is not very efficient (O(n)) but the amount of profiles should be limited\n      // and a handful of load-balancing policies (no hashcode for load-Balancing policies)\n      if (this._loadBalancingPolicies.indexOf(p.loadBalancing) === -1) {\n        this._loadBalancingPolicies.push(p.loadBalancing);\n      }\n      return p;\n    }, this);\n  }\n\n  /**\n   * @param {Client} client\n   * @param {HostMap} hosts\n   */\n  async init(client, hosts) {\n    for (const lbp of this._loadBalancingPolicies) {\n      await promiseUtils.fromCallback(callback => lbp.init(client, hosts, callback));\n    }\n  }\n\n  /**\n   * Uses the load-balancing policies to get the relative distance to the host and return the closest one.\n   * @param {Host} host\n   */\n  getDistance(host) {\n    let distance = types.distance.ignored;\n    // this is performance critical: we can't use any other language features than for-loop :(\n    for (let i = 0; i < this._loadBalancingPolicies.length; i++) {\n      const d = this._loadBalancingPolicies[i].getDistance(host);\n      if (d < distance) {\n        distance = d;\n        if (distance === types.distance.local) {\n          break;\n        }\n      }\n    }\n\n    host.setDistance(distance);\n    return distance;\n  }\n\n  /**\n   * @param {String|ExecutionProfile} name\n   * @returns {ExecutionProfile|undefined} It returns the execution profile by name or the default profile when name is\n   * undefined. It returns undefined when the profile does not exist.\n   */\n  getProfile(name) {\n    if (name instanceof ExecutionProfile) {\n      return name;\n    }\n    return this._profilesMap[name || 'default'];\n  }\n\n  /** @returns {ExecutionProfile} */\n  getDefault() {\n    return this._defaultProfile;\n  }\n\n  /** @returns {LoadBalancingPolicy} */\n  getDefaultLoadBalancing() {\n    return this._defaultProfile.loadBalancing;\n  }\n\n  /**\n   * Gets the cached default graph options for a given profile. If it doesn't exist, it creates new options using the\n   * handler and inserts it into the cache\n   * @param {ExecutionProfile} profile\n   * @param {Function} createHandler\n   */\n  getOrCreateGraphOptions(profile, createHandler) {\n    let graphOptions = this._graphOptionsCache[profile.name];\n    if (!graphOptions) {\n      graphOptions = (this._graphOptionsCache[profile.name] = createHandler());\n    }\n    return graphOptions;\n  }\n\n  /**\n   * @private\n   * @param {ClientOptions} options\n   */\n  _setDefault(options) {\n    this._defaultProfile = this._profiles.filter(function (p) { return p.name === 'default'; })[0];\n    if (!this._defaultProfile) {\n      this._profiles.push(this._defaultProfile = new ExecutionProfile('default'));\n    }\n\n    // Store the default configured retry policy\n    this._defaultConfiguredRetryPolicy = this._defaultProfile.retry;\n\n    // Set the required properties\n    this._defaultProfile.loadBalancing = this._defaultProfile.loadBalancing || options.policies.loadBalancing;\n    this._defaultProfile.retry = this._defaultProfile.retry || options.policies.retry;\n  }\n\n  /**\n   * Gets all the execution profiles currently defined.\n   * @returns {Array.<ExecutionProfile>}\n   */\n  getAll() {\n    return this._profiles;\n  }\n\n  getDefaultConfiguredRetryPolicy() {\n    return this._defaultConfiguredRetryPolicy;\n  }\n}\n\nmodule.exports = {\n  ProfileManager,\n  ExecutionProfile\n};","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst events = require('events');\n\nconst types = require('./types');\nconst utils = require('./utils.js');\nconst FrameHeader = types.FrameHeader;\n\n/**\n * Contains the logic to write all the different types to the frame.\n */\nclass FrameWriter {\n  /**\n   * Creates a new instance of FrameWriter.\n   * @param {Number} opcode\n   */\n  constructor(opcode) {\n    if (!opcode) {\n      throw new Error('Opcode not provided');\n    }\n    this.buffers = [];\n    this.opcode = opcode;\n    this.bodyLength = 0;\n  }\n\n  add(buf) {\n    this.buffers.push(buf);\n    this.bodyLength += buf.length;\n  }\n\n  writeShort(num) {\n    const buf = utils.allocBufferUnsafe(2);\n    buf.writeUInt16BE(num, 0);\n    this.add(buf);\n  }\n\n  writeInt(num) {\n    const buf = utils.allocBufferUnsafe(4);\n    buf.writeInt32BE(num, 0);\n    this.add(buf);\n  }\n\n  /** @param {Long} num */\n  writeLong(num) {\n    this.add(types.Long.toBuffer(num));\n  }\n\n  /**\n   * Writes bytes according to Cassandra <int byteLength><bytes>\n   * @param {Buffer|null|types.unset} bytes\n   */\n  writeBytes(bytes) {\n    if (bytes === null) {\n      //Only the length buffer containing -1\n      this.writeInt(-1);\n      return;\n    }\n    if (bytes === types.unset) {\n      this.writeInt(-2);\n      return;\n    }\n    //Add the length buffer\n    this.writeInt(bytes.length);\n    //Add the actual buffer\n    this.add(bytes);\n  }\n\n  /**\n   * Writes a buffer according to Cassandra protocol: bytes.length (2) + bytes\n   * @param {Buffer} bytes\n   */\n  writeShortBytes(bytes) {\n    if(bytes === null) {\n      //Only the length buffer containing -1\n      this.writeShort(-1);\n      return;\n    }\n    //Add the length buffer\n    this.writeShort(bytes.length);\n    //Add the actual buffer\n    this.add(bytes);\n  }\n\n  /**\n   * Writes a single byte\n   * @param {Number} num Value of the byte, a number between 0 and 255.\n   */\n  writeByte(num) {\n    this.add(utils.allocBufferFromArray([num]));\n  }\n\n  writeString(str) {\n    if (typeof str === \"undefined\") {\n      throw new Error(\"can not write undefined\");\n    }\n    const len = Buffer.byteLength(str, 'utf8');\n    const buf = utils.allocBufferUnsafe(2 + len);\n    buf.writeUInt16BE(len, 0);\n    buf.write(str, 2, buf.length-2, 'utf8');\n    this.add(buf);\n  }\n\n  writeLString(str) {\n    const len = Buffer.byteLength(str, 'utf8');\n    const buf = utils.allocBufferUnsafe(4 + len);\n    buf.writeInt32BE(len, 0);\n    buf.write(str, 4, buf.length-4, 'utf8');\n    this.add(buf);\n  }\n\n  writeStringList(values) {\n    this.writeShort(values.length);\n    values.forEach(this.writeString, this);\n  }\n\n  writeCustomPayload(payload) {\n    const keys = Object.keys(payload);\n    this.writeShort(keys.length);\n    keys.forEach(k => {\n      this.writeString(k);\n      this.writeBytes(payload[k]);\n    });\n  }\n\n  writeStringMap(map) {\n    const keys = [];\n    for (const k in map) {\n      if (map.hasOwnProperty(k)) {\n        keys.push(k);\n      }\n    }\n\n    this.writeShort(keys.length);\n\n    for(let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      this.writeString(key);\n      this.writeString(map[key]);\n    }\n  }\n\n  /**\n   * @param {Number} version\n   * @param {Number} streamId\n   * @param {Number} [flags] Header flags\n   * @returns {Buffer}\n   * @throws {TypeError}\n   */\n  write(version, streamId, flags) {\n    const header = new FrameHeader(version, flags || 0, streamId, this.opcode, this.bodyLength);\n    const headerBuffer = header.toBuffer();\n    this.buffers.unshift(headerBuffer);\n    return Buffer.concat(this.buffers, headerBuffer.length + this.bodyLength);\n  }\n}\n\n/**\n * Represents a queue that process one write at a time (FIFO).\n * @extends {EventEmitter}\n */\nclass WriteQueue extends events.EventEmitter {\n  /**\n   * Creates a new WriteQueue instance.\n   * @param {Socket} netClient\n   * @param {Encoder} encoder\n   * @param {ClientOptions} options\n   */\n  constructor(netClient, encoder, options) {\n    super();\n    this.netClient = netClient;\n    this.encoder = encoder;\n    this.isRunning = false;\n    /** @type {Array<{operation: OperationState, callback: Function}>} */\n    this.queue = [];\n    this.coalescingThreshold = options.socketOptions.coalescingThreshold;\n    this.error = null;\n    this.canWrite = true;\n\n    // Listen to drain event that is going to be fired once\n    // the underlying buffer is empty\n    netClient.on('drain', () => {\n      this.canWrite = true;\n      this.run();\n    });\n  }\n\n  /**\n   * Enqueues a new request\n   * @param {OperationState} operation\n   * @param {Function} callback The write callback.\n   */\n  push(operation, callback) {\n    const self = this;\n\n    if (this.error) {\n      // There was a write error, there is no point in further trying to write to the socket.\n      return process.nextTick(function writePushError() {\n        callback(self.error);\n      });\n    }\n\n    this.queue.push({ operation: operation, callback: callback});\n    this.run();\n  }\n\n  run() {\n    if (!this.isRunning && this.canWrite) {\n      this.isRunning = true;\n      // Use nextTick to allow the queue to build up on the current phase\n      process.nextTick(() => this.process());\n    }\n  }\n\n  process() {\n    if (this.error) {\n      return;\n    }\n\n    const buffers = [];\n    const callbacks = [];\n    let totalLength = 0;\n\n    while (this.queue.length > 0 && totalLength < this.coalescingThreshold) {\n      const writeItem = this.queue.shift();\n      if (!writeItem.operation.canBeWritten()) {\n        // Invoke the write callback with an error that is not going to be yielded to user\n        // as the operation has timed out or was cancelled.\n        writeItem.callback(new Error('The operation was already cancelled or timeout elapsed'));\n        continue;\n      }\n      let data;\n      try {\n        data = writeItem.operation.request.write(this.encoder, writeItem.operation.streamId);\n      }\n      catch (err) {\n        writeItem.callback(err);\n        continue;\n      }\n      totalLength += data.length;\n      buffers.push(data);\n      callbacks.push(writeItem.callback);\n    }\n\n    if (totalLength === 0) {\n      this.isRunning = false;\n      return;\n    }\n\n    // We have to invoke the callbacks to avoid race conditions.\n    // There is a performance benefit from executing all of them in a loop\n    for (let i = 0; i < callbacks.length; i++) {\n      callbacks[i]();\n    }\n\n    // Concatenate buffers and write it to the socket\n    // Further writes will be throttled until flushed\n    this.canWrite = this.netClient.write(Buffer.concat(buffers, totalLength), err => {\n      if (err) {\n        this.setWriteError(err);\n        return;\n      }\n\n      if (this.queue.length === 0 || !this.canWrite) {\n        // It will start running once we get the next message or has drained\n        this.isRunning = false;\n        return;\n      }\n\n      // Allow IO between writes\n      setImmediate(() => this.process());\n    });\n  }\n\n  /**\n   * Emits the 'error' event and callbacks items that haven't been written and clears them from the queue.\n   * @param err\n   */\n  setWriteError(err) {\n    err.isSocketError = true;\n    this.error = new types.DriverError('Socket was closed');\n    this.error.isSocketError = true;\n    // Use an special flag for items that haven't been written\n    this.error.requestNotWritten = true;\n    this.error.innerError = err;\n    const q = this.queue;\n    // Not more items can be added to the queue.\n    this.queue = utils.emptyArray;\n    for (let i = 0; i < q.length; i++) {\n      const item = q[i];\n      // Use the error marking that it was not written\n      item.callback(this.error);\n    }\n  }\n}\n\nmodule.exports = { FrameWriter, WriteQueue };\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst utils = require('./utils');\nconst types = require('./types');\nconst errors = require('./errors');\n\nconst proxyExecuteKey = 'ProxyExecute';\n\n/**\n * A base class that represents a wrapper around the user provided query options with getter methods and proper\n * default values.\n * <p>\n *   Note that getter methods might return <code>undefined</code> when not set on the query options or default\n *  {@link Client} options.\n * </p>\n */\nclass ExecutionOptions {\n\n  /**\n   * Creates a new instance of {@link ExecutionOptions}.\n   */\n  constructor() {\n  }\n\n  /**\n   * Creates an empty instance, where all methods return undefined, used internally.\n   * @ignore\n   * @return {ExecutionOptions}\n   */\n  static empty() {\n    return new ExecutionOptions();\n  }\n\n  /**\n   * Determines if the stack trace before the query execution should be maintained.\n   * @abstract\n   * @returns {Boolean}\n   */\n  getCaptureStackTrace() {\n\n  }\n\n  /**\n   * Gets the [Consistency level]{@link module:types~consistencies} to be used for the execution.\n   * @abstract\n   * @returns {Number}\n   */\n  getConsistency() {\n\n  }\n\n  /**\n   * Key-value payload to be passed to the server. On the server side, implementations of QueryHandler can use\n   * this data.\n   * @abstract\n   * @returns {Object}\n   */\n  getCustomPayload() {\n\n  }\n\n  /**\n   * Gets the amount of rows to retrieve per page.\n   * @abstract\n   * @returns {Number}\n   */\n  getFetchSize() {\n\n  }\n\n  /**\n   * When a fixed host is set on the query options and the query plan for the load-balancing policy is not used, it\n   * gets the host that should handle the query.\n   * @returns {Host}\n   */\n  getFixedHost() {\n\n  }\n\n  /**\n   * Gets the type hints for parameters given in the query, ordered as for the parameters.\n   * @abstract\n   * @returns {Array|Array<Array>}\n   */\n  getHints() {\n\n  }\n\n  /**\n   * Determines whether the driver must retrieve the following result pages automatically.\n   * <p>\n   *   This setting is only considered by the [Client#eachRow()]{@link Client#eachRow} method.\n   * </p>\n   * @abstract\n   * @returns {Boolean}\n   */\n  isAutoPage() {\n\n  }\n\n  /**\n   * Determines whether its a counter batch. Only valid for [Client#batch()]{@link Client#batch}, it will be ignored by\n   * other methods.\n   * @abstract\n   * @returns {Boolean} A <code>Boolean</code> value, it can't be <code>undefined</code>.\n   */\n  isBatchCounter() {\n\n  }\n\n  /**\n   * Determines whether the batch should be written to the batchlog. Only valid for\n   * [Client#batch()]{@link Client#batch}, it will be ignored by other methods.\n   * @abstract\n   * @returns {Boolean} A <code>Boolean</code> value, it can't be <code>undefined</code>.\n   */\n  isBatchLogged() {\n\n  }\n\n  /**\n   * Determines whether the query can be applied multiple times without changing the result beyond the initial\n   * application.\n   * @abstract\n   * @returns {Boolean}\n   */\n  isIdempotent() {\n\n  }\n\n  /**\n   * Determines whether the query must be prepared beforehand.\n   * @abstract\n   * @returns {Boolean} A <code>Boolean</code> value, it can't be <code>undefined</code>.\n   */\n  isPrepared() {\n\n  }\n\n  /**\n   * Determines whether query tracing is enabled for the execution.\n   * @abstract\n   * @returns {Boolean}\n   */\n  isQueryTracing() {\n\n  }\n\n  /**\n   * Gets the keyspace for the query when set at query options level.\n   * <p>\n   *   Note that this method will return <code>undefined</code> when the keyspace is not set at query options level.\n   *   It will only return the keyspace name when the user provided a different keyspace than the current\n   *   {@link Client} keyspace.\n   * </p>\n   * @abstract\n   * @returns {String}\n   */\n  getKeyspace() {\n\n  }\n\n  /**\n   * Gets the load balancing policy used for this execution.\n   * @returns {LoadBalancingPolicy} A <code>LoadBalancingPolicy</code> instance, it can't be <code>undefined</code>.\n   */\n  getLoadBalancingPolicy() {\n\n  }\n\n  /**\n   * Gets the Buffer representing the paging state.\n   * @abstract\n   * @returns {Buffer}\n   */\n  getPageState() {\n\n  }\n\n  /**\n   * Internal method that gets the preferred host.\n   * @abstract\n   * @ignore\n   */\n  getPreferredHost() {\n\n  }\n\n  /**\n   * Gets the query options as provided to the execution method without setting the default values.\n   * @returns {QueryOptions}\n   */\n  getRawQueryOptions() {\n\n  }\n\n  /**\n   * Gets the timeout in milliseconds to be used for the execution per coordinator.\n   * <p>\n   *   A value of <code>0</code> disables client side read timeout for the execution. Default: <code>undefined</code>.\n   * </p>\n   * @abstract\n   * @returns {Number}\n   */\n  getReadTimeout() {\n\n  }\n\n  /**\n   * Gets the [retry policy]{@link module:policies/retry} to be used.\n   * @abstract\n   * @returns {RetryPolicy} A <code>RetryPolicy</code> instance, it can't be <code>undefined</code>.\n   */\n  getRetryPolicy() {\n\n  }\n\n  /**\n   * Internal method to obtain the row callback, for \"by row\" results.\n   * @abstract\n   * @ignore\n   */\n  getRowCallback() {\n\n  }\n\n  /**\n   * Internal method to get or generate a timestamp for the request execution.\n   * @ignore\n   * @returns {Long|null}\n   */\n  getOrGenerateTimestamp() {\n\n  }\n\n  /**\n   * Gets the index of the parameters that are part of the partition key to determine the routing.\n   * @abstract\n   * @ignore\n   * @returns {Array}\n   */\n  getRoutingIndexes() {\n\n  }\n\n  /**\n   * Gets the partition key(s) to determine which coordinator should be used for the query.\n   * @abstract\n   * @returns {Buffer|Array<Buffer>}\n   */\n  getRoutingKey() {\n\n  }\n\n  /**\n   * Gets the array of the parameters names that are part of the partition key to determine the\n   * routing. Only valid for non-prepared requests.\n   * @abstract\n   * @ignore\n   */\n  getRoutingNames() {\n\n  }\n\n  /**\n   * Gets the the consistency level to be used for the serial phase of conditional updates.\n   * @abstract\n   * @returns {Number}\n   */\n  getSerialConsistency() {\n\n  }\n\n  /**\n   * Gets the provided timestamp for the execution in microseconds from the unix epoch (00:00:00, January 1st, 1970).\n   * <p>When a timestamp generator is used, this method returns <code>undefined</code>.</p>\n   * @abstract\n   * @returns {Number|Long|undefined|null}\n   */\n  getTimestamp() {\n\n  }\n\n  /**\n   * @param {Array} hints\n   * @abstract\n   * @ignore\n   */\n  setHints(hints) {\n\n  }\n\n  /**\n   * Sets the keyspace for the execution.\n   * @ignore\n   * @abstract\n   * @param {String} keyspace\n   */\n  setKeyspace(keyspace) {\n\n  }\n\n  /**\n   * @abstract\n   * @ignore\n   */\n  setPageState() {\n\n  }\n\n  /**\n   * Internal method that sets the preferred host.\n   * @abstract\n   * @ignore\n   */\n  setPreferredHost() {\n\n  }\n\n  /**\n   * Sets the index of the parameters that are part of the partition key to determine the routing.\n   * @param {Array} routingIndexes\n   * @abstract\n   * @ignore\n   */\n  setRoutingIndexes(routingIndexes) {\n\n  }\n\n  /**\n   * Sets the routing key.\n   * @abstract\n   * @ignore\n   */\n  setRoutingKey(value) {\n\n  }\n}\n\n/**\n * Internal implementation of {@link ExecutionOptions} that uses the value from the client options and execution\n * profile into account.\n * @ignore\n */\nclass DefaultExecutionOptions extends ExecutionOptions {\n  /**\n   * Creates a new instance of {@link ExecutionOptions}.\n   * @param {QueryOptions} queryOptions\n   * @param {Client} client\n   * @param {Function|null} rowCallback\n   */\n  constructor(queryOptions, client, rowCallback) {\n    super();\n\n    this._queryOptions = queryOptions;\n    this._rowCallback = rowCallback;\n    this._routingKey = this._queryOptions.routingKey;\n    this._hints = this._queryOptions.hints;\n    this._keyspace = this._queryOptions.keyspace;\n    this._routingIndexes = this._queryOptions.routingIndexes;\n    this._pageState = typeof this._queryOptions.pageState === 'string' ?\n      utils.allocBufferFromString(this._queryOptions.pageState, 'hex') : this._queryOptions.pageState;\n    this._preferredHost = null;\n\n    this._client = client;\n    this._defaultQueryOptions = client.options.queryOptions;\n    this._profile = client.profileManager.getProfile(this._queryOptions.executionProfile);\n\n    // Build a custom payload object designed for DSE-specific functionality\n    this._customPayload = DefaultExecutionOptions.createCustomPayload(this._queryOptions, this._defaultQueryOptions);\n\n    if (!this._profile) {\n      throw new errors.ArgumentError(`Execution profile \"${this._queryOptions.executionProfile}\" not found`);\n    }\n  }\n\n  /**\n   * Creates a payload for given user.\n   * @param {QueryOptions} userOptions\n   * @param {QueryOptions} defaultQueryOptions\n   * @private\n   */\n  static createCustomPayload(userOptions, defaultQueryOptions) {\n    let customPayload = userOptions.customPayload || defaultQueryOptions.customPayload;\n    const executeAs = userOptions.executeAs || defaultQueryOptions.executeAs;\n\n    if (executeAs) {\n      if (!customPayload) {\n        customPayload = {};\n        customPayload[proxyExecuteKey] = utils.allocBufferFromString(executeAs);\n      } else if (!customPayload[proxyExecuteKey]) {\n        // Avoid appending to the existing payload object\n        customPayload = utils.extend({}, customPayload);\n        customPayload[proxyExecuteKey] = utils.allocBufferFromString(executeAs);\n      }\n    }\n\n    return customPayload;\n  }\n\n  /**\n   * Creates a new instance {@link ExecutionOptions}, based on the query options.\n   * @param {QueryOptions|null} queryOptions\n   * @param {Client} client\n   * @param {Function|null} [rowCallback]\n   * @ignore\n   * @return {ExecutionOptions}\n   */\n  static create(queryOptions, client, rowCallback) {\n    if (!queryOptions || typeof queryOptions === 'function') {\n      // queryOptions can be null/undefined and could be of type function when is an optional parameter\n      queryOptions = utils.emptyObject;\n    }\n    return new DefaultExecutionOptions(queryOptions, client, rowCallback);\n  }\n\n  getCaptureStackTrace() {\n    return ifUndefined(this._queryOptions.captureStackTrace, this._defaultQueryOptions.captureStackTrace);\n  }\n\n  getConsistency() {\n    return ifUndefined3(this._queryOptions.consistency, this._profile.consistency,\n      this._defaultQueryOptions.consistency);\n  }\n\n  getCustomPayload() {\n    return this._customPayload;\n  }\n\n  getFetchSize() {\n    return ifUndefined(this._queryOptions.fetchSize, this._defaultQueryOptions.fetchSize);\n  }\n\n  getFixedHost() {\n    return this._queryOptions.host;\n  }\n\n  getHints() {\n    return this._hints;\n  }\n\n  isAutoPage() {\n    return ifUndefined(this._queryOptions.autoPage, this._defaultQueryOptions.autoPage);\n  }\n\n  isBatchCounter() {\n    return ifUndefined(this._queryOptions.counter, false);\n  }\n\n  isBatchLogged() {\n    return ifUndefined3(this._queryOptions.logged, this._defaultQueryOptions.logged, true);\n  }\n\n  isIdempotent() {\n    return ifUndefined(this._queryOptions.isIdempotent, this._defaultQueryOptions.isIdempotent);\n  }\n\n  /**\n   * Determines if the query execution must be prepared beforehand.\n   * @return {Boolean}\n   */\n  isPrepared() {\n    return ifUndefined(this._queryOptions.prepare, this._defaultQueryOptions.prepare);\n  }\n\n  isQueryTracing() {\n    return ifUndefined(this._queryOptions.traceQuery, this._defaultQueryOptions.traceQuery);\n  }\n\n  getKeyspace() {\n    return this._keyspace;\n  }\n\n  getLoadBalancingPolicy() {\n    return this._profile.loadBalancing;\n  }\n\n  getOrGenerateTimestamp() {\n    let result = this.getTimestamp();\n\n    if (result === undefined) {\n      const generator = this._client.options.policies.timestampGeneration;\n\n      if ( types.protocolVersion.supportsTimestamp(this._client.controlConnection.protocolVersion) && generator) {\n        result = generator.next(this._client);\n      } else {\n        result = null;\n      }\n    }\n\n    return typeof result === 'number' ? types.Long.fromNumber(result) : result;\n  }\n\n  getPageState() {\n    return this._pageState;\n  }\n\n  /**\n   * Gets the profile defined by the user or the default profile\n   * @internal\n   * @ignore\n   */\n  getProfile() {\n    return this._profile;\n  }\n\n  getRawQueryOptions() {\n    return this._queryOptions;\n  }\n\n  getReadTimeout() {\n    return ifUndefined3(this._queryOptions.readTimeout, this._profile.readTimeout,\n      this._client.options.socketOptions.readTimeout);\n  }\n\n  getRetryPolicy() {\n    return ifUndefined3(this._queryOptions.retry, this._profile.retry, this._client.options.policies.retry);\n  }\n\n  getRoutingIndexes() {\n    return this._routingIndexes;\n  }\n\n  getRoutingKey() {\n    return this._routingKey;\n  }\n\n  getRoutingNames() {\n    return this._queryOptions.routingNames;\n  }\n\n  /**\n   * Internal method to obtain the row callback, for \"by row\" results.\n   * @ignore\n   */\n  getRowCallback() {\n    return this._rowCallback;\n  }\n\n  getSerialConsistency() {\n    return ifUndefined3(\n      this._queryOptions.serialConsistency, this._profile.serialConsistency, this._defaultQueryOptions.serialConsistency);\n  }\n\n  getTimestamp() {\n    return this._queryOptions.timestamp;\n  }\n\n  /**\n   * Internal property to set the custom payload.\n   * @ignore\n   * @internal\n   * @param {Object} payload\n   */\n  setCustomPayload(payload) {\n    this._customPayload = payload;\n  }\n\n  /**\n   * @param {Array} hints\n   */\n  setHints(hints) {\n    this._hints = hints;\n  }\n\n  /**\n   * @param {String} keyspace\n   */\n  setKeyspace(keyspace) {\n    this._keyspace = keyspace;\n  }\n\n  /**\n   * @param {Buffer} pageState\n   */\n  setPageState(pageState) {\n    this._pageState = pageState;\n  }\n\n  /**\n   * @param {Array} routingIndexes\n   */\n  setRoutingIndexes(routingIndexes) {\n    this._routingIndexes = routingIndexes;\n  }\n\n  setRoutingKey(value) {\n    this._routingKey = value;\n  }\n}\n\nfunction ifUndefined(v1, v2) {\n  return v1 !== undefined ? v1 : v2;\n}\n\nfunction ifUndefined3(v1, v2, v3) {\n  if (v1 !== undefined) {\n    return v1;\n  }\n  return v2 !== undefined ? v2 : v3;\n}\n\nmodule.exports = { ExecutionOptions, DefaultExecutionOptions, proxyExecuteKey };","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\n\nconst { FrameWriter } = require('./writers');\nconst types = require('./types');\nconst utils = require('./utils');\nconst { ExecutionOptions } = require('./execution-options');\nconst packageInfo = require('../package.json');\n\n/**\n * Options for the execution of the query / prepared statement\n * @private\n */\nconst queryFlag = {\n  values:                 0x01,\n  skipMetadata:           0x02,\n  pageSize:               0x04,\n  withPagingState:        0x08,\n  withSerialConsistency:  0x10,\n  withDefaultTimestamp:   0x20,\n  withNameForValues:      0x40,\n  withKeyspace:           0x80,\n  withPageSizeBytes: 0x40000000,\n  withContinuousPaging: 0x80000000\n};\n\n/**\n * Options for the execution of a batch request from protocol v3 and above\n * @private\n */\nconst batchFlag = {\n  withSerialConsistency:  0x10,\n  withDefaultTimestamp:   0x20,\n  withNameForValues:      0x40,\n  withKeyspace:           0x80\n};\n\n/**\n * Options for execution of a prepare request from protocol DSE_V2 and above\n * @private\n */\nconst prepareFlag = {\n  withKeyspace:           0x01\n};\n\nconst batchType = {\n  logged: 0,\n  unlogged: 1,\n  counter: 2\n};\n\n/**\n * Abstract class Request\n */\nclass Request {\n  constructor() {\n    this.length = 0;\n  }\n\n  /**\n   * @abstract\n   * @param {Encoder} encoder\n   * @param {Number} streamId\n   * @throws {TypeError}\n   * @returns {Buffer}\n   */\n  write(encoder, streamId) {\n    throw new Error('Method must be implemented');\n  }\n\n  /**\n   * Creates a new instance using the same constructor as the current instance, copying the properties.\n   * @return {Request}\n   */\n  clone() {\n    const newRequest = new (this.constructor)();\n    const keysArray = Object.keys(this);\n    for (let i = 0; i < keysArray.length; i++) {\n      const key = keysArray[i];\n      newRequest[key] = this[key];\n    }\n    return newRequest;\n  }\n}\n\n/**\n * Writes a execute query (given a prepared queryId)\n * @param {String} query\n * @param {Buffer} queryId\n * @param {Array} params\n * @param options\n */\nclass ExecuteRequest extends Request {\n  /**\n   * @param {String} query\n   * @param queryId\n   * @param params\n   * @param {ExecutionOptions} execOptions\n   * @param meta\n   */\n  constructor(query, queryId, params, execOptions, meta) {\n    super();\n\n    this.query = query;\n    this.queryId = queryId;\n    this.params = params;\n    this.meta = meta;\n    this.options = execOptions || ExecutionOptions.empty();\n    this.consistency = this.options.getConsistency() || types.consistencies.one;\n    // Only QUERY request parameters are encoded as named parameters\n    // EXECUTE request parameters are always encoded as positional parameters\n    this.namedParameters = false;\n  }\n\n  getParamType(index) {\n    const columnInfo = this.meta.columns[index];\n    return columnInfo ? columnInfo.type : null;\n  }\n\n  write(encoder, streamId) {\n    //v1: <queryId>\n    //      <n><value_1>....<value_n><consistency>\n    //v2: <queryId>\n    //      <consistency><flags>[<n><value_1>...<value_n>][<result_page_size>][<paging_state>][<serial_consistency>]\n    //v3: <queryId>\n    //      <consistency><flags>[<n>[name_1]<value_1>...[name_n]<value_n>][<result_page_size>][<paging_state>][<serial_consistency>][<timestamp>]\n    const frameWriter = new FrameWriter(types.opcodes.execute);\n    let headerFlags = this.options.isQueryTracing() ? types.frameFlags.tracing : 0;\n    if (this.options.getCustomPayload()) {\n      //The body may contain the custom payload\n      headerFlags |= types.frameFlags.customPayload;\n      frameWriter.writeCustomPayload(this.options.getCustomPayload());\n    }\n    frameWriter.writeShortBytes(this.queryId);\n    if(types.protocolVersion.supportsResultMetadataId(encoder.protocolVersion)) {\n      frameWriter.writeShortBytes(this.meta.resultId);\n    }\n    this.writeQueryParameters(frameWriter, encoder);\n\n    // Record the length of the body of the request before writing it\n    this.length = frameWriter.bodyLength;\n\n    return frameWriter.write(encoder.protocolVersion, streamId, headerFlags);\n  }\n\n  /**\n   * Writes v1 and v2 execute query parameters\n   * @param {FrameWriter} frameWriter\n   * @param {Encoder} encoder\n   * @param {Boolean} [isQuery] True if query, otherwise assumed to be execute request.\n   */\n  writeQueryParameters(frameWriter, encoder, isQuery) {\n    //v1: <n><value_1>....<value_n><consistency>\n    //v2: <consistency><flags>[<n><value_1>...<value_n>][<result_page_size>][<paging_state>][<serial_consistency>]\n    //v3: <consistency><flags>[<n>[name_1]<value_1>...[name_n]<value_n>][<result_page_size>][<paging_state>][<serial_consistency>][<timestamp>]\n    //dse_v1: <consistency><flags>[<n>[name_1]<value_1>...[name_n]<value_n>][<result_page_size>][<paging_state>]\n    //          [<serial_consistency>][<timestamp>][continuous_paging_options]\n    //dse_v2: <consistency><flags>[<n>[name_1]<value_1>...[name_n]<value_n>][<result_page_size>][<paging_state>]\n    //          [<serial_consistency>][<timestamp>][keyspace][continuous_paging_options]\n    let flags = 0;\n\n    const timestamp = this.options.getOrGenerateTimestamp();\n\n    if (types.protocolVersion.supportsPaging(encoder.protocolVersion)) {\n      flags |= (this.params && this.params.length) ? queryFlag.values : 0;\n      flags |= (this.options.getFetchSize() > 0) ? queryFlag.pageSize : 0;\n      flags |= this.options.getPageState() ? queryFlag.withPagingState : 0;\n      flags |= this.options.getSerialConsistency() ? queryFlag.withSerialConsistency : 0;\n      flags |= timestamp !== null && timestamp !== undefined ? queryFlag.withDefaultTimestamp : 0;\n      flags |= this.namedParameters ? queryFlag.withNameForValues : 0;\n\n      // Don't inject keyspace for EXECUTE requests as inherited from prepared statement.\n      const supportsKeyspace = isQuery && types.protocolVersion.supportsKeyspaceInRequest(encoder.protocolVersion);\n      flags |= supportsKeyspace && this.options.getKeyspace() ? queryFlag.withKeyspace : 0;\n\n      frameWriter.writeShort(this.consistency);\n      if (types.protocolVersion.uses4BytesQueryFlags(encoder.protocolVersion)) {\n        frameWriter.writeInt(flags);\n      }\n      else {\n        frameWriter.writeByte(flags);\n      }\n    }\n\n    if (this.params && this.params.length) {\n      frameWriter.writeShort(this.params.length);\n      for (let i = 0; i < this.params.length; i++) {\n        let paramValue = this.params[i];\n        if (flags & queryFlag.withNameForValues) {\n          //parameter is composed by name / value\n          frameWriter.writeString(paramValue.name);\n          paramValue = paramValue.value;\n        }\n        frameWriter.writeBytes(encoder.encode(paramValue, this.getParamType(i)));\n      }\n    }\n\n    if (!types.protocolVersion.supportsPaging(encoder.protocolVersion)) {\n      if (!this.params || !this.params.length) {\n        //zero parameters\n        frameWriter.writeShort(0);\n      }\n      frameWriter.writeShort(this.consistency);\n      return;\n    }\n    if (flags & queryFlag.pageSize) {\n      frameWriter.writeInt(this.options.getFetchSize());\n    }\n    if (flags & queryFlag.withPagingState) {\n      frameWriter.writeBytes(this.options.getPageState());\n    }\n    if (flags & queryFlag.withSerialConsistency) {\n      frameWriter.writeShort(this.options.getSerialConsistency());\n    }\n    if (flags & queryFlag.withDefaultTimestamp) {\n      frameWriter.writeLong(timestamp);\n    }\n    if (flags & queryFlag.withKeyspace) {\n      frameWriter.writeString(this.options.getKeyspace());\n    }\n  }\n}\n\nclass QueryRequest extends ExecuteRequest {\n  /**\n   * @param {String} query\n   * @param params\n   * @param {ExecutionOptions} [execOptions]\n   * @param {Boolean} [namedParameters]\n   */\n  constructor(query, params, execOptions, namedParameters) {\n    super(query, null, params, execOptions, null);\n    this.hints = this.options.getHints() || utils.emptyArray;\n    this.namedParameters = namedParameters;\n  }\n\n  getParamType(index) {\n    return this.hints[index];\n  }\n\n  write(encoder, streamId) {\n    //v1: <query><consistency>\n    //v2: <query>\n    //      <consistency><flags>[<n><value_1>...<value_n>][<result_page_size>][<paging_state>][<serial_consistency>]\n    //v3: <query>\n    //      <consistency><flags>[<n>[name_1]<value_1>...[name_n]<value_n>][<result_page_size>][<paging_state>][<serial_consistency>][<timestamp>]\n    const frameWriter = new FrameWriter(types.opcodes.query);\n    let headerFlags = this.options.isQueryTracing() ? types.frameFlags.tracing : 0;\n    if (this.options.getCustomPayload()) {\n      //The body may contain the custom payload\n      headerFlags |= types.frameFlags.customPayload;\n      frameWriter.writeCustomPayload(this.options.getCustomPayload());\n    }\n\n    frameWriter.writeLString(this.query);\n\n    if (!types.protocolVersion.supportsPaging(encoder.protocolVersion)) {\n      frameWriter.writeShort(this.consistency);\n    } else {\n      //Use the same fields as the execute writer\n      this.writeQueryParameters(frameWriter, encoder, true);\n    }\n\n    // Record the length of the body of the request before writing it\n    this.length = frameWriter.bodyLength;\n\n    return frameWriter.write(encoder.protocolVersion, streamId, headerFlags);\n  }\n}\n\nclass PrepareRequest extends Request {\n  constructor(query, keyspace) {\n    super();\n    this.query = query;\n    this.keyspace = keyspace;\n  }\n\n  write(encoder, streamId) {\n    const frameWriter = new FrameWriter(types.opcodes.prepare);\n    frameWriter.writeLString(this.query);\n    if (types.protocolVersion.supportsPrepareFlags(encoder.protocolVersion)) {\n      const flags = this.keyspace && types.protocolVersion.supportsKeyspaceInRequest(encoder.protocolVersion) ? prepareFlag.withKeyspace : 0;\n      frameWriter.writeInt(flags);\n      if (flags & prepareFlag.withKeyspace) {\n        frameWriter.writeString(this.keyspace);\n      }\n    }\n    return frameWriter.write(encoder.protocolVersion, streamId);\n  }\n}\n\nclass StartupRequest extends Request {\n\n  /**\n   * Creates a new instance of {@link StartupRequest}.\n   * @param {Object} [options]\n   * @param [options.cqlVersion]\n   * @param [options.noCompact]\n   * @param [options.clientId]\n   * @param [options.applicationName]\n   * @param [options.applicationVersion]\n   */\n  constructor(options) {\n    super();\n    this.options = options || {};\n  }\n\n  write(encoder, streamId) {\n    const frameWriter = new FrameWriter(types.opcodes.startup);\n\n    const startupOptions = {\n      CQL_VERSION: this.options.cqlVersion || '3.0.0',\n      DRIVER_NAME: packageInfo.description,\n      DRIVER_VERSION: packageInfo.version\n    };\n\n    if(this.options.noCompact) {\n      startupOptions['NO_COMPACT'] = 'true';\n    }\n\n    if (this.options.clientId) {\n      startupOptions['CLIENT_ID'] = this.options.clientId.toString();\n    }\n\n    if (this.options.applicationName) {\n      startupOptions['APPLICATION_NAME'] = this.options.applicationName;\n    }\n\n    if (this.options.applicationVersion) {\n      startupOptions['APPLICATION_VERSION'] = this.options.applicationVersion;\n    }\n\n    frameWriter.writeStringMap(startupOptions);\n    return frameWriter.write(encoder.protocolVersion, streamId);\n  }\n}\n\nclass RegisterRequest extends Request {\n  constructor(events) {\n    super();\n    this.events = events;\n  }\n\n  write(encoder, streamId) {\n    const frameWriter = new FrameWriter(types.opcodes.register);\n    frameWriter.writeStringList(this.events);\n    return frameWriter.write(encoder.protocolVersion, streamId);\n  }\n}\n\n/**\n * Represents an AUTH_RESPONSE request\n * @param {Buffer} token\n */\nclass AuthResponseRequest extends Request {\n  constructor(token) {\n    super();\n    this.token = token;\n  }\n\n  write(encoder, streamId) {\n    const frameWriter = new FrameWriter(types.opcodes.authResponse);\n    frameWriter.writeBytes(this.token);\n    return frameWriter.write(encoder.protocolVersion, streamId);\n  }\n}\n\n/**\n * Represents a protocol v1 CREDENTIALS request message\n */\nclass CredentialsRequest extends Request {\n  constructor(username, password) {\n    super();\n    this.username = username;\n    this.password = password;\n  }\n\n  write(encoder, streamId) {\n    const frameWriter = new FrameWriter(types.opcodes.credentials);\n    frameWriter.writeStringMap({ username:this.username, password:this.password });\n    return frameWriter.write(encoder.protocolVersion, streamId);\n  }\n}\n\nclass BatchRequest extends Request {\n  /**\n   * Creates a new instance of BatchRequest.\n   * @param {Array.<{query, params, [info]}>} queries Array of objects with the properties query and params\n   * @param {ExecutionOptions} execOptions\n   */\n  constructor(queries, execOptions) {\n    super();\n    this.queries = queries;\n    this.options = execOptions;\n    this.hints = execOptions.getHints() || utils.emptyArray;\n    this.type = batchType.logged;\n\n    if (execOptions.isBatchCounter()) {\n      this.type = batchType.counter;\n    } else if (!execOptions.isBatchLogged()) {\n      this.type = batchType.unlogged;\n    }\n  }\n\n  /**\n  * Writes a batch request\n  */\n  write(encoder, streamId) {\n    //v2: <type><n><query_1>...<query_n><consistency>\n    //v3: <type><n><query_1>...<query_n><consistency><flags>[<serial_consistency>][<timestamp>]\n    //dseV1+: similar to v3/v4, flags is an int instead of a byte\n    if (!this.queries || !(this.queries.length > 0)) {\n      throw new TypeError(util.format('Invalid queries provided %s', this.queries));\n    }\n    const frameWriter = new FrameWriter(types.opcodes.batch);\n    let headerFlags = this.options.isQueryTracing() ? types.frameFlags.tracing : 0;\n    if (this.options.getCustomPayload()) {\n      //The body may contain the custom payload\n      headerFlags |= types.frameFlags.customPayload;\n      frameWriter.writeCustomPayload(this.options.getCustomPayload());\n    }\n    frameWriter.writeByte(this.type);\n    frameWriter.writeShort(this.queries.length);\n    const self = this;\n    this.queries.forEach(function eachQuery(item, i) {\n      const hints = self.hints[i];\n      const params = item.params || utils.emptyArray;\n      let getParamType;\n      if (item.queryId) {\n        // Contains prepared queries\n        frameWriter.writeByte(1);\n        frameWriter.writeShortBytes(item.queryId);\n        getParamType = i => item.meta.columns[i].type;\n      }\n      else {\n        // Contains string queries\n        frameWriter.writeByte(0);\n        frameWriter.writeLString(item.query);\n        getParamType = hints ? (i => hints[i]) : (() => null);\n      }\n\n      frameWriter.writeShort(params.length);\n      params.forEach((param, index) => frameWriter.writeBytes(encoder.encode(param, getParamType(index))));\n    }, this);\n\n    frameWriter.writeShort(this.options.getConsistency());\n\n    if (types.protocolVersion.supportsTimestamp(encoder.protocolVersion)) {\n      // Batch flags\n      let flags = this.options.getSerialConsistency() ? batchFlag.withSerialConsistency : 0;\n      const timestamp = this.options.getOrGenerateTimestamp();\n      flags |= timestamp !== null && timestamp !== undefined ? batchFlag.withDefaultTimestamp : 0;\n\n      flags |= this.options.getKeyspace() && types.protocolVersion.supportsKeyspaceInRequest(encoder.protocolVersion)\n        ? batchFlag.withKeyspace : 0;\n\n      if (types.protocolVersion.uses4BytesQueryFlags(encoder.protocolVersion)) {\n        frameWriter.writeInt(flags);\n      }\n      else {\n        frameWriter.writeByte(flags);\n      }\n\n      if (flags & batchFlag.withSerialConsistency) {\n        frameWriter.writeShort(this.options.getSerialConsistency());\n      }\n\n      if (flags & batchFlag.withDefaultTimestamp) {\n        frameWriter.writeLong(timestamp);\n      }\n\n      if (flags & batchFlag.withKeyspace) {\n        frameWriter.writeString(this.options.getKeyspace());\n      }\n    }\n\n    // Set the length of the body of the request before writing it\n    this.length = frameWriter.bodyLength;\n\n    return frameWriter.write(encoder.protocolVersion, streamId, headerFlags);\n  }\n\n  clone() {\n    return new BatchRequest(this.queries, this.options);\n  }\n}\n\nfunction CancelRequest(operationId) {\n  this.streamId = null;\n  this.operationId = operationId;\n}\n\nutil.inherits(CancelRequest, Request);\n\nCancelRequest.prototype.write = function (encoder, streamId) {\n  const frameWriter = new FrameWriter(types.opcodes.cancel);\n  frameWriter.writeInt(1);\n  frameWriter.writeInt(this.operationId);\n  return frameWriter.write(encoder.protocolVersion, streamId);\n};\n\nclass OptionsRequest extends Request {\n\n  write(encoder, streamId) {\n    const frameWriter = new FrameWriter(types.opcodes.options);\n    return frameWriter.write(encoder.protocolVersion, streamId, 0);\n  }\n\n  clone() {\n    // since options has no unique state, simply return self.\n    return this;\n  }\n}\n\nconst options = new OptionsRequest();\n\nexports.AuthResponseRequest = AuthResponseRequest;\nexports.BatchRequest = BatchRequest;\nexports.CancelRequest = CancelRequest;\nexports.CredentialsRequest = CredentialsRequest;\nexports.ExecuteRequest = ExecuteRequest;\nexports.PrepareRequest = PrepareRequest;\nexports.QueryRequest = QueryRequest;\nexports.Request = Request;\nexports.RegisterRequest = RegisterRequest;\nexports.StartupRequest = StartupRequest;\nexports.options = options;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst util = require('util');\nconst errors = require('../errors');\n\n/**\n * Represents the state of a {@link Client}.\n * <p>\n * Exposes information on the connections maintained by a Client at a specific time.\n * </p>\n * @alias module:metadata~ClientState\n * @constructor\n */\nclass ClientState {\n\n  /**\n   * Creates a new instance of <code>ClientState</code>.\n   * @param {Array<Host>} hosts\n   * @param {Object.<String, Number>} openConnections\n   * @param {Object.<String, Number>} inFlightQueries\n   */\n  constructor(hosts, openConnections, inFlightQueries) {\n    this._hosts = hosts;\n    this._openConnections = openConnections;\n    this._inFlightQueries = inFlightQueries;\n  }\n\n  /**\n   * Get an array of hosts to which the client is connected to.\n   * @return {Array<Host>}\n   */\n  getConnectedHosts() {\n    return this._hosts;\n  }\n\n  /**\n   * Gets the amount of open connections to a given host.\n   * @param {Host} host\n   * @return {Number}\n   */\n  getOpenConnections(host) {\n    if (!host) {\n      throw new errors.ArgumentError('Host is not defined');\n    }\n\n    return this._openConnections[host.address] || 0;\n  }\n\n  /**\n   * Gets the amount of queries that are currently being executed through a given host.\n   * <p>\n   * This corresponds to the number of queries that have been sent by the Client to server Host on one of its connections\n   * but haven't yet obtained a response.\n   * </p>\n   * @param {Host} host\n   * @return {Number}\n   */\n  getInFlightQueries(host) {\n    if (!host) {\n      throw new errors.ArgumentError('Host is not defined');\n    }\n\n    return this._inFlightQueries[host.address] || 0;\n  }\n\n  /**\n   * Returns the string representation of the instance.\n   */\n  toString() {\n    return util.format('{\"hosts\": %j, \"openConnections\": %j, \"inFlightQueries\": %j}',\n      this._hosts.map(function (h) { return h.address; }), this._openConnections, this._inFlightQueries);\n  }\n\n  /**\n   * Creates a new instance from the provided client.\n   * @param {Client} client\n   * @internal\n   * @ignore\n   */\n  static from(client) {\n    const openConnections = {};\n    const inFlightQueries = {};\n    const hostArray = [];\n\n    client.hosts.forEach(host => {\n      if (host.pool.connections.length === 0) {\n        return;\n      }\n\n      hostArray.push(host);\n      openConnections[host.address] = host.pool.connections.length;\n      inFlightQueries[host.address] = host.getInFlight();\n    });\n\n    return new ClientState(hostArray, openConnections, inFlightQueries);\n  }\n}\n\nmodule.exports = ClientState;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nconst Long = require('long');\n\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n\n/**\n * Constructs a signed int64 representation.\n * @ignore\n */\nclass MutableLong {\n  constructor(b00, b16, b32, b48) {\n    // Use an array of uint16\n    this._arr = [b00 & 0xffff, b16 & 0xffff, b32 & 0xffff, b48 & 0xffff];\n  }\n\n  toString() {\n    return this.toImmutable().toString();\n  }\n\n  /**\n   * Compares this value with the provided value.\n   * @param {MutableLong} other\n   * @return {number}\n   */\n  compare(other) {\n    const thisNeg = this.isNegative();\n    const otherNeg = other.isNegative();\n    if (thisNeg && !otherNeg) {\n      return -1;\n    }\n    if (!thisNeg && otherNeg) {\n      return 1;\n    }\n    // At this point the sign bits are the same\n    return this._compareBits(other);\n  }\n\n  _compareBits(other) {\n    for (let i = 3; i >= 0; i--) {\n      if (this._arr[i] > other._arr[i]) {\n        return 1;\n      }\n      if (this._arr[i] < other._arr[i]) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  getUint16(index) {\n    return this._arr[index];\n  }\n\n  getLowBitsUnsigned() {\n    return (this._arr[0] | ((this._arr[1] & 0xffff) << 16)) >>> 0;\n  }\n\n  getHighBitsUnsigned() {\n    return (this._arr[2] | (this._arr[3] << 16)) >>> 0;\n  }\n\n  toNumber() {\n    return (this._arr[3] << 16 | this._arr[2]) * TWO_PWR_32_DBL + ((this._arr[1] << 16 | this._arr[0]) >>> 0);\n  }\n\n  /**\n   * Performs the bitwise NOT of this value.\n   * @return {MutableLong}\n   */\n  not() {\n    this._arr[0] = ~this._arr[0] & 0xffff;\n    this._arr[1] = ~this._arr[1] & 0xffff;\n    this._arr[2] = ~this._arr[2] & 0xffff;\n    this._arr[3] = ~this._arr[3] & 0xffff;\n    return this;\n  }\n\n  add(addend) {\n    let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += this._arr[0] + addend._arr[0];\n    this._arr[0] = c00 & 0xffff;\n    c16 += c00 >>> 16;\n    c16 += this._arr[1] + addend._arr[1];\n    this._arr[1] = c16 & 0xffff;\n    c32 += c16 >>> 16;\n    c32 += this._arr[2] + addend._arr[2];\n    this._arr[2] = c32 & 0xffff;\n    c48 += c32 >>> 16;\n    c48 += this._arr[3] + addend._arr[3];\n    this._arr[3] = c48 & 0xffff;\n    return this;\n  }\n\n  shiftLeft(numBits) {\n    if (numBits === 0) {\n      return this;\n    }\n    if (numBits >= 64) {\n      return this.toZero();\n    }\n    const remainingBits = numBits % 16;\n    const pos = Math.floor(numBits / 16);\n    if (pos > 0) {\n      this._arr[3] = this._arr[3 - pos];\n      this._arr[2] = pos > 2 ? 0 : this._arr[2 - pos];\n      this._arr[1] = pos > 1 ? 0 : this._arr[0];\n      this._arr[0] = 0;\n    }\n    if (remainingBits > 0) {\n      // shift left within the int16 and the next one\n      this._arr[3] = ((this._arr[3] << remainingBits) | (this._arr[2] >>> (16 - remainingBits))) & 0xffff;\n      this._arr[2] = ((this._arr[2] << remainingBits) | (this._arr[1] >>> (16 - remainingBits))) & 0xffff;\n      this._arr[1] = ((this._arr[1] << remainingBits) | (this._arr[0] >>> (16 - remainingBits))) & 0xffff;\n      this._arr[0] = (this._arr[0] << remainingBits) & 0xffff;\n    }\n    return this;\n  }\n\n  shiftRightUnsigned(numBits) {\n    if (numBits === 0) {\n      return this;\n    }\n    if (numBits >= 64) {\n      return this.toZero();\n    }\n    const remainingBits = numBits % 16;\n    const pos = Math.floor(numBits / 16);\n    if (pos > 0) {\n      this._arr[0] = this._arr[pos];\n      this._arr[1] = pos > 2 ? 0 : this._arr[1 + pos];\n      this._arr[2] = pos > 1 ? 0 : this._arr[3];\n      this._arr[3] = 0;\n    }\n    if (remainingBits > 0) {\n      this._arr[0] = (this._arr[0] >>> remainingBits) | ((this._arr[1] << (16 - remainingBits)) & 0xffff);\n      this._arr[1] = (this._arr[1] >>> remainingBits) | ((this._arr[2] << (16 - remainingBits)) & 0xffff);\n      this._arr[2] = (this._arr[2] >>> remainingBits) | ((this._arr[3] << (16 - remainingBits)) & 0xffff);\n      this._arr[3] = this._arr[3] >>> remainingBits;\n    }\n    return this;\n  }\n\n  or(other) {\n    this._arr[0] |= other._arr[0];\n    this._arr[1] |= other._arr[1];\n    this._arr[2] |= other._arr[2];\n    this._arr[3] |= other._arr[3];\n    return this;\n  }\n\n  /**\n   * Returns the bitwise XOR of this Long and the given one.\n   * @param {MutableLong} other\n   * @returns {MutableLong} this instance.\n   */\n  xor(other) {\n    this._arr[0] ^= other._arr[0];\n    this._arr[1] ^= other._arr[1];\n    this._arr[2] ^= other._arr[2];\n    this._arr[3] ^= other._arr[3];\n    return this;\n  }\n\n  clone() {\n    return new MutableLong(this._arr[0], this._arr[1], this._arr[2], this._arr[3]);\n  }\n\n  /**\n   * Performs the product of this and the specified Long.\n   * @param {MutableLong} multiplier\n   * @returns {MutableLong} this instance.\n   */\n  multiply(multiplier) {\n    let negate = false;\n    if (this.isZero() || multiplier.isZero()) {\n      return this.toZero();\n    }\n    if (this.isNegative()) {\n      this.negate();\n      negate = !negate;\n    }\n    if (multiplier.isNegative()) {\n      multiplier = multiplier.clone().negate();\n      negate = !negate;\n    }\n    // We can skip products that would overflow.\n    let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += this._arr[0] * multiplier._arr[0];\n    c16 += c00 >>> 16;\n    c16 += this._arr[1] * multiplier._arr[0];\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += this._arr[0] * multiplier._arr[1];\n    c32 += c16 >>> 16;\n    c32 += this._arr[2] * multiplier._arr[0];\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += this._arr[1] * multiplier._arr[1];\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += this._arr[0] * multiplier._arr[2];\n    c48 += c32 >>> 16;\n    c48 += this._arr[3] * multiplier._arr[0] + this._arr[2] * multiplier._arr[1] +\n      this._arr[1] * multiplier._arr[2] + this._arr[0] * multiplier._arr[3];\n    this._arr[0] = c00 & 0xffff;\n    this._arr[1] = c16 & 0xffff;\n    this._arr[2] = c32 & 0xffff;\n    this._arr[3] = c48 & 0xffff;\n    if (negate) {\n      this.negate();\n    }\n    return this;\n  }\n\n  toZero() {\n    this._arr[3] = this._arr[2] = this._arr[1] = this._arr[0] = 0;\n    return this;\n  }\n\n  isZero() {\n    return (this._arr[3] === 0 && this._arr[2] === 0 && this._arr[1] === 0 && this._arr[0] === 0);\n  }\n\n  isNegative() {\n    // most significant bit turned on\n    return (this._arr[3] & 0x8000) > 0;\n  }\n\n  /**\n   * Negates this value.\n   * @return {MutableLong}\n   */\n  negate() {\n    return this.not().add(MutableLong.one);\n  }\n\n  equals(other) {\n    if (!(other instanceof MutableLong)) {\n      return false;\n    }\n    return (this._arr[0] === other._arr[0] && this._arr[1] === other._arr[1] &&\n      this._arr[2] === other._arr[2] && this._arr[3] === other._arr[3]);\n  }\n\n  toImmutable() {\n    return Long.fromBits(this.getLowBitsUnsigned(), this.getHighBitsUnsigned(), false);\n  }\n\n  static fromNumber(value) {\n    if (isNaN(value) || !isFinite(value)) {\n      return new MutableLong();\n    }\n    if (value < 0) {\n      return MutableLong.fromNumber(-value).negate();\n    }\n    const low32Bits = value % TWO_PWR_32_DBL;\n    const high32Bits = value / TWO_PWR_32_DBL;\n    return MutableLong.fromBits(low32Bits, high32Bits);\n  }\n\n  static fromBits(low32Bits, high32Bits) {\n    return new MutableLong(low32Bits, low32Bits >>> 16, high32Bits, high32Bits >>> 16);\n  }\n\n  /**\n   * Returns a Long representation of the given string, written using the specified radix.\n   * @param {String} str\n   * @param {Number} [radix]\n   * @return {MutableLong}\n   */\n  static fromString(str, radix) {\n    if (typeof str !== 'string') {\n      throw new Error('String format is not valid: ' + str);\n    }\n    if (str.length === 0) {\n      throw Error('number format error: empty string');\n    }\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\") {\n      return new MutableLong();\n    }\n    radix = radix || 10;\n    if (radix < 2 || radix > 36) {\n      throw Error('radix out of range: ' + radix);\n    }\n    let p;\n    if ((p = str.indexOf('-')) > 0) {\n      throw Error('number format error: interior \"-\" character: ' + str);\n    }\n    if (p === 0) {\n      return MutableLong.fromString(str.substring(1), radix).negate();\n    }\n    // Do several (8) digits each time through the loop\n    const radixToPower = MutableLong.fromNumber(Math.pow(radix, 8));\n    const result = new MutableLong();\n    for (let i = 0; i < str.length; i += 8) {\n      const size = Math.min(8, str.length - i);\n      const value = parseInt(str.substring(i, i + size), radix);\n      if (size < 8) {\n        const power = MutableLong.fromNumber(Math.pow(radix, size));\n        result.multiply(power).add(MutableLong.fromNumber(value));\n        break;\n      }\n      result.multiply(radixToPower);\n      result.add(MutableLong.fromNumber(value));\n    }\n    return result;\n  }\n}\n\nMutableLong.one = new MutableLong(1, 0, 0, 0);\n\nmodule.exports = MutableLong;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst types = require('./types');\nconst util = require('util');\n\nconst _Murmur3TokenType = types.dataTypes.getByName('bigint');\nconst _RandomTokenType = types.dataTypes.getByName('varint');\nconst _OrderedTokenType = types.dataTypes.getByName('blob');\n\n/**\n * Represents a token on the Cassandra ring.\n */\nclass Token {\n  constructor(value) {\n    this._value = value;\n  }\n\n  /**\n   * @returns {{code: number, info: *|Object}} The type info for the\n   *                                           type of the value of the token.\n   */\n  getType() {\n    throw new Error('You must implement a getType function for this Token instance');\n  }\n\n  /**\n   * @returns {*} The raw value of the token.\n   */\n  getValue() {\n    return this._value;\n  }\n\n  toString() {\n    return this._value.toString();\n  }\n\n  /**\n   * Returns 0 if the values are equal, 1 if greater than other, -1\n   * otherwise.\n   *\n   * @param {Token} other \n   * @returns {Number}\n   */\n  compare(other) {\n    return this._value.compare(other._value);\n  }\n\n  equals(other) {\n    return this.compare(other) === 0;\n  }\n\n  inspect() {\n    return this.constructor.name + ' { ' + this.toString() + ' }';\n  }\n}\n\n/**\n * Represents a token from a Cassandra ring where the partitioner\n * is Murmur3Partitioner.\n * \n * The raw token type is a varint (represented by MutableLong).\n */\nclass Murmur3Token extends Token {\n  constructor(value) {\n    super(value);\n  }\n\n  getType() {\n    return _Murmur3TokenType;\n  }\n}\n\n/**\n * Represents a token from a Cassandra ring where the partitioner\n * is RandomPartitioner.\n * \n * The raw token type is a bigint (represented by Number).\n */\nclass RandomToken extends Token {\n  constructor(value) {\n    super(value);\n  }\n\n  getType() {\n    return _RandomTokenType;\n  }\n}\n\n/**\n * Represents a token from a Cassandra ring where the partitioner\n * is ByteOrderedPartitioner.\n * \n * The raw token type is a blob (represented by Buffer or Array).\n */\nclass ByteOrderedToken extends Token {\n  constructor(value) {\n    super(value);\n  }\n\n  getType() {\n    return _OrderedTokenType;\n  }\n\n  toString() {\n    return this._value.toString('hex').toUpperCase();\n  }\n}\n\n/** \n * Represents a range of tokens on a Cassandra ring.\n *\n * A range is start-exclusive and end-inclusive.  It is empty when\n * start and end are the same token, except if that is the minimum\n * token, in which case the range covers the whole ring (this is\n * consistent with the behavior of CQL range queries).\n *\n * Note that CQL does not handle wrapping.  To query all partitions\n * in a range, see {@link unwrap}.\n */\nclass TokenRange {\n  constructor(start, end, tokenizer) {\n    this.start = start;\n    this.end = end;\n    Object.defineProperty(this, '_tokenizer', { value: tokenizer, enumerable: false});\n  }\n\n  /**\n   * Splits this range into a number of smaller ranges of equal \"size\"\n   * (referring to the number of tokens, not the actual amount of data).\n   *\n   * Splitting an empty range is not permitted.  But not that, in edge\n   * cases, splitting a range might produce one or more empty ranges.\n   *\n   * @param {Number} numberOfSplits Number of splits to make.\n   * @returns {TokenRange[]} Split ranges.\n   * @throws {Error} If splitting an empty range.\n   */\n  splitEvenly(numberOfSplits) {\n    if (numberOfSplits < 1) {\n      throw new Error(util.format(\"numberOfSplits (%d) must be greater than 0.\", numberOfSplits));\n    }\n    if (this.isEmpty()) {\n      throw new Error(\"Can't split empty range \" + this.toString());\n    }\n\n    const tokenRanges = [];\n    const splitPoints = this._tokenizer.split(this.start, this.end, numberOfSplits);\n    let splitStart = this.start;\n    let splitEnd;\n    for (let splitIndex = 0; splitIndex < splitPoints.length; splitIndex++) {\n      splitEnd = splitPoints[splitIndex];\n      tokenRanges.push(new TokenRange(splitStart, splitEnd, this._tokenizer));\n      splitStart = splitEnd;\n    }\n    tokenRanges.push(new TokenRange(splitStart, this.end, this._tokenizer));\n    return tokenRanges;\n  }\n\n  /**\n   * A range is empty when start and end are the same token, except if\n   * that is the minimum token, in which case the range covers the\n   * whole ring.  This is consistent with the behavior of CQL range\n   * queries.\n   *\n   * @returns {boolean} Whether this range is empty.\n   */\n  isEmpty() {\n    return this.start.equals(this.end) && !this.start.equals(this._tokenizer.minToken());\n  }\n\n  /**\n   * A range wraps around the end of the ring when the start token\n   * is greater than the end token and the end token is not the \n   * minimum token.\n   *\n   * @returns {boolean} Whether this range wraps around.\n   */\n  isWrappedAround() {\n    return this.start.compare(this.end) > 0 && !this.end.equals(this._tokenizer.minToken());\n  }\n\n  /**\n   * Splits this range into a list of two non-wrapping ranges.\n   *\n   * This will return the range itself if it is non-wrapped, or two\n   * ranges otherwise.\n   *\n   * This is useful for CQL range queries, which do not handle\n   * wrapping.\n   *\n   * @returns {TokenRange[]} The list of non-wrapping ranges.\n   */\n  unwrap() {\n    if (this.isWrappedAround()) {\n      return [\n        new TokenRange(this.start, this._tokenizer.minToken(), this._tokenizer),\n        new TokenRange(this._tokenizer.minToken(), this.end, this._tokenizer)\n      ];\n    }\n    return [this];\n  }\n\n  /**\n   * Whether this range contains a given Token.\n   * \n   * @param {*} token Token to check for.\n   * @returns {boolean} Whether or not the Token is in this range.\n   */\n  contains(token) {\n    if (this.isEmpty()) {\n      return false;\n    }\n    const minToken = this._tokenizer.minToken();\n    if (this.end.equals(minToken)) {\n      if (this.start.equals(minToken)) {\n        return true; // ]minToken, minToken] === full ring\n      } else if (token.equals(minToken)) {\n        return true;\n      }\n      return token.compare(this.start) > 0;\n    }\n\n    const isAfterStart = token.compare(this.start) > 0;\n    const isBeforeEnd = token.compare(this.end) <= 0;\n    // if wrapped around ring, token is in ring if its after start or before end.\n    // otherwise, token is in ring if its after start and before end.\n    return this.isWrappedAround() \n      ? isAfterStart || isBeforeEnd\n      : isAfterStart && isBeforeEnd;\n  }\n\n  /**\n   * Determines if the input range is equivalent to this one.\n   * \n   * @param {TokenRange} other Range to compare with.\n   * @returns {boolean} Whether or not the ranges are equal.\n   */\n  equals(other) {\n    if (other === this) {\n      return true;\n    } else if (other instanceof TokenRange) {\n      return this.compare(other) === 0;\n    }\n    return false;\n  }\n\n  /**\n   * Returns 0 if the values are equal, otherwise compares against\n   * start, if start is equal, compares against end.\n   *  \n   * @param {TokenRange} other Range to compare with.\n   * @returns {Number} \n   */\n  compare(other) {\n    const compareStart = this.start.compare(other.start);\n    return compareStart !== 0 ? compareStart : this.end.compare(other.end);\n  }\n\n  toString() {\n    return util.format(']%s, %s]', \n      this.start.toString(),\n      this.end.toString()\n    );\n  }\n}\n\nexports.Token = Token;\nexports.TokenRange = TokenRange;\nexports.ByteOrderedToken = ByteOrderedToken;\nexports.Murmur3Token = Murmur3Token;\nexports.RandomToken = RandomToken;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst utils = require('../../utils');\nconst Long = require('long');\n\n/**\n * Regex to parse dates in the following format YYYY-MM-DDThh:mm:ss.mssZ\n * Looks cumbersome but it's straightforward:\n * - \"(\\d{1,6})\": year mandatory 1 to 6 digits\n * - (?:-(\\d{1,2}))?(?:-(\\d{1,2}))? two non-capturing groups representing the month and day (1 to 2 digits captured).\n * - (?:T(\\d{1,2}?)?(?::(\\d{1,2}))?(?::(\\d{1,2}))?)?Z? A non-capturing group for the time portion\n * @private\n */\nconst dateRegex =\n  /^[-+]?(\\d{1,6})(?:-(\\d{1,2}))?(?:-(\\d{1,2}))?(?:T(\\d{1,2}?)?(?::(\\d{1,2}))?(?::(\\d{1,2})(?:\\.(\\d{1,3}))?)?)?Z?$/;\nconst multipleBoundariesRegex = /^\\[(.+?) TO (.+)]$/;\nconst unbounded = Object.freeze(new DateRangeBound(null, -1));\n\nconst dateRangeType = {\n  // single value as in \"2001-01-01\"\n  singleValue: 0,\n  // closed range as in \"[2001-01-01 TO 2001-01-31]\"\n  closedRange: 1,\n  // open range high as in \"[2001-01-01 TO *]\"\n  openRangeHigh: 2,\n  // - 0x03 - open range low as in \"[* TO 2001-01-01]\"\n  openRangeLow: 3,\n  // - 0x04 - both ranges open as in \"[* TO *]\"\n  openBoth: 4,\n  // - 0x05 - single open range as in \"[*]\"\n  openSingle: 5\n};\n\n/**\n * Defines the possible values of date range precision.\n * @type {Object}\n * @property {Number} year\n * @property {Number} month\n * @property {Number} day\n * @property {Number} hour\n * @property {Number} minute\n * @property {Number} second\n * @property {Number} millisecond\n * @memberof module:search\n */\nconst dateRangePrecision = {\n  year: 0,\n  month: 1,\n  day: 2,\n  hour: 3,\n  minute: 4,\n  second: 5,\n  millisecond: 6\n};\n\n/**\n * Creates a new instance of <code>DateRange</code> using a lower bound and an upper bound.\n * <p>Consider using <code>DateRange.fromString()</code> to create instances more easily.</p>\n * @classdesc\n * Represents a range of dates, corresponding to the Apache Solr type\n * <a href=\"https://cwiki.apache.org/confluence/display/solr/Working+with+Dates\"><code>DateRangeField</code></a>.\n * <p>\n *   A date range can have one or two bounds, namely lower bound and upper bound, to represent an interval of time.\n *   Date range bounds are both inclusive. For example:\n * </p>\n * <ul>\n *   <li><code>2015 TO 2016-10</code> represents from the first day of 2015 to the last day of October 2016</li>\n *   <li><code>2015</code> represents during the course of the year 2015.</li>\n *   <li><code>2017 TO *</code> represents any date greater or equals to the first day of the year 2017.</li>\n * </ul>\n * <p>\n *   Note that this JavaScript representation of <code>DateRangeField</code> does not support Dates outside of the range\n *   supported by ECMAScript Date: –100,000,000 days to 100,000,000 days measured relative to midnight at the\n *   beginning of 01 January, 1970 UTC. Being <code>-271821-04-20T00:00:00.000Z</code> the minimum lower boundary\n *   and <code>275760-09-13T00:00:00.000Z</code> the maximum higher boundary.\n * <p>\n * @param {DateRangeBound} lowerBound A value representing the range lower bound, composed by a\n * <code>Date</code> and a precision. Use <code>DateRangeBound.unbounded</code> for an open lower bound.\n * @param {DateRangeBound} [upperBound] A value representing the range upper bound, composed by a\n * <code>Date</code> and a precision. Use <code>DateRangeBound.unbounded</code> for an open upper bound. When it's not\n * defined, the <code>DateRange</code> instance is considered as a single value range.\n * @constructor\n * @memberOf module:datastax/search\n */\nfunction DateRange(lowerBound, upperBound) {\n  if (!lowerBound) {\n    throw new TypeError('The lower boundaries must be defined');\n  }\n  /**\n   * Gets the lower bound of this range (inclusive).\n   * @type {DateRangeBound}\n   */\n  this.lowerBound = lowerBound;\n  /**\n   * Gets the upper bound of this range (inclusive).\n   * @type {DateRangeBound|null}\n   */\n  this.upperBound = upperBound || null;\n\n  // Define the type\n  if (this.upperBound === null) {\n    if (this.lowerBound !== unbounded) {\n      this._type = dateRangeType.singleValue;\n    }\n    else {\n      this._type = dateRangeType.openSingle;\n    }\n  }\n  else {\n    if (this.lowerBound !== unbounded) {\n      this._type = this.upperBound !== unbounded ? dateRangeType.closedRange : dateRangeType.openRangeHigh;\n    }\n    else {\n      this._type = this.upperBound !== unbounded ? dateRangeType.openRangeLow : dateRangeType.openBoth;\n    }\n  }\n}\n\n/**\n * Returns true if the value of this DateRange instance and other are the same.\n * @param {DateRange} other\n * @returns {Boolean}\n */\nDateRange.prototype.equals = function (other) {\n  if (!(other instanceof DateRange)) {\n    return false;\n  }\n  return (other.lowerBound.equals(this.lowerBound) &&\n  (other.upperBound ? other.upperBound.equals(this.upperBound) : !this.upperBound));\n};\n\n/**\n * Returns the string representation of the instance.\n * @return {String}\n */\nDateRange.prototype.toString = function () {\n  if (this.upperBound === null) {\n    return this.lowerBound.toString();\n  }\n  return '[' + this.lowerBound.toString() + ' TO ' + this.upperBound.toString() + ']';\n};\n\nDateRange.prototype.toBuffer = function () {\n  // Serializes the value containing:\n  // <type>[<time0><precision0><time1><precision1>]\n  if (this._type === dateRangeType.openBoth || this._type === dateRangeType.openSingle) {\n    return utils.allocBufferFromArray([ this._type ]);\n  }\n  let buffer;\n  let offset = 0;\n  if (this._type !== dateRangeType.closedRange) {\n    // byte + long + byte\n    const boundary = this._type !== dateRangeType.openRangeLow ? this.lowerBound : this.upperBound;\n    buffer = utils.allocBufferUnsafe(10);\n    buffer.writeUInt8(this._type, offset++);\n    offset = writeDate(boundary.date, buffer, offset);\n    buffer.writeUInt8(boundary.precision, offset);\n    return buffer;\n  }\n  // byte + long + byte + long + byte\n  buffer = utils.allocBufferUnsafe(19);\n  buffer.writeUInt8(this._type, offset++);\n  offset = writeDate(this.lowerBound.date, buffer, offset);\n  buffer.writeUInt8(this.lowerBound.precision, offset++);\n  offset = writeDate(this.upperBound.date, buffer, offset);\n  buffer.writeUInt8(this.upperBound.precision, offset);\n  return buffer;\n};\n\n/**\n * Returns the <code>DateRange</code> representation of a given string.\n * <p>String representations of dates are always expressed in Coordinated Universal Time (UTC)</p>\n * @param {String} dateRangeString\n */\nDateRange.fromString = function (dateRangeString) {\n  const matches = multipleBoundariesRegex.exec(dateRangeString);\n  if (!matches) {\n    return new DateRange(DateRangeBound.toLowerBound(DateRangeBound.fromString(dateRangeString)));\n  }\n  return new DateRange(DateRangeBound.toLowerBound(DateRangeBound.fromString(matches[1])), DateRangeBound.toUpperBound(DateRangeBound.fromString(matches[2])));\n};\n\n/**\n * Deserializes the buffer into a <code>DateRange</code>\n * @param {Buffer} buffer\n * @return {DateRange}\n */\nDateRange.fromBuffer = function (buffer) {\n  if (buffer.length === 0) {\n    throw new TypeError('DateRange serialized value must have at least 1 byte');\n  }\n  const type = buffer.readUInt8(0);\n  if (type === dateRangeType.openBoth) {\n    return new DateRange(unbounded, unbounded);\n  }\n  if (type === dateRangeType.openSingle) {\n    return new DateRange(unbounded);\n  }\n  let offset = 1;\n  let date1;\n  let lowerBound;\n  let upperBound = null;\n  if (type !== dateRangeType.closedRange) {\n    date1 = readDate(buffer, offset);\n    offset += 8;\n    lowerBound = new DateRangeBound(date1, buffer.readUInt8(offset));\n    if (type === dateRangeType.openRangeLow) {\n      // lower boundary is open, the first serialized boundary is the upperBound\n      upperBound = lowerBound;\n      lowerBound = unbounded;\n    }\n    else {\n      upperBound = type === dateRangeType.openRangeHigh ? unbounded : null;\n    }\n    return new DateRange(lowerBound, upperBound);\n  }\n  date1 = readDate(buffer, offset);\n  offset += 8;\n  lowerBound = new DateRangeBound(date1, buffer.readUInt8(offset++));\n  const date2 = readDate(buffer, offset);\n  offset += 8;\n  upperBound = new DateRangeBound(date2, buffer.readUInt8(offset));\n  return new DateRange(lowerBound, upperBound);\n};\n\n/**\n * Writes a Date, long millis since epoch, to a buffer starting from offset.\n * @param {Date} date\n * @param {Buffer} buffer\n * @param {Number} offset\n * @return {Number} The new offset.\n * @private\n */\nfunction writeDate(date, buffer, offset) {\n  const long = Long.fromNumber(date.getTime());\n  buffer.writeUInt32BE(long.getHighBitsUnsigned(), offset);\n  buffer.writeUInt32BE(long.getLowBitsUnsigned(), offset + 4);\n  return offset + 8;\n}\n\n/**\n * Reads a Date, long millis since epoch, from a buffer starting from offset.\n * @param {Buffer} buffer\n * @param {Number} offset\n * @return {Date}\n * @private\n */\nfunction readDate(buffer, offset) {\n  const long = new Long(buffer.readInt32BE(offset+4), buffer.readInt32BE(offset));\n  return new Date(long.toNumber());\n}\n\n/**\n * @classdesc\n * Represents a date range boundary, composed by a <code>Date</code> and a precision.\n * @param {Date} date The timestamp portion, representing a single moment in time. Consider using\n * <code>Date.UTC()</code> method to build the <code>Date</code> instance.\n * @param {Number} precision The precision portion. Valid values for <code>DateRangeBound</code> precision are\n * defined in the [dateRangePrecision]{@link module:datastax/search~dateRangePrecision} member.\n * @constructor\n * @memberOf module:datastax/search\n */\nfunction DateRangeBound(date, precision) {\n  /**\n   * The timestamp portion of the boundary.\n   * @type {Date}\n   */\n  this.date = date;\n  /**\n   * The precision portion of the boundary. Valid values are defined in the\n   * [dateRangePrecision]{@link module:datastax/search~dateRangePrecision} member.\n   * @type {Number}\n   */\n  this.precision = precision;\n}\n\n/**\n * Returns the string representation of the instance.\n * @return {String}\n */\nDateRangeBound.prototype.toString = function () {\n  if (this.precision === -1) {\n    return '*';\n  }\n  let precision = 0;\n  const isoString = this.date.toISOString();\n  let i;\n  let char;\n  // The years take at least the first 4 characters\n  for (i = 4; i < isoString.length && precision <= this.precision; i++) {\n    char = isoString.charAt(i);\n    if (precision === dateRangePrecision.day && char === 'T') {\n      precision = dateRangePrecision.hour;\n      continue;\n    }\n    if (precision >= dateRangePrecision.hour && char === ':' || char === '.') {\n      precision++;\n      continue;\n    }\n    if (precision < dateRangePrecision.day && char === '-') {\n      precision++;\n    }\n  }\n  let start = 0;\n  const firstChar = isoString.charAt(0);\n  let sign = '';\n  let toRemoveIndex = 4;\n  if (firstChar === '+' || firstChar === '-') {\n    sign = firstChar;\n    if (firstChar === '-') {\n      // since we are retaining the -, don't remove as many zeros.\n      toRemoveIndex = 3;\n    }\n    // Remove additional zeros\n    for (start = 1; start < toRemoveIndex; start++) {\n      if (isoString.charAt(start) !== '0') {\n        break;\n      }\n    }\n  }\n  if (this.precision !== dateRangePrecision.millisecond) {\n    // i holds the position of the first char that marks the end of a precision (ie: '-', 'T', ...),\n    // we should not include it in the result, except its the 'Z' char for the complete representation\n    i--;\n  }\n  return sign + isoString.substring(start, i);\n};\n\n/**\n * Returns true if the value of this DateRange instance and other are the same.\n * @param {DateRangeBound} other\n * @return {boolean}\n */\nDateRangeBound.prototype.equals = function (other) {\n  if (!(other instanceof DateRangeBound)) {\n    return false;\n  }\n  if (other.precision !== this.precision) {\n    return false;\n  }\n  return datesEqual(other.date, this.date);\n};\n\nfunction datesEqual(d1, d2) {\n  const t1 = d1 ? d1.getTime() : null;\n  const t2 = d2 ? d2.getTime() : null;\n  return t1 === t2;\n}\n\nDateRangeBound.prototype.isUnbounded = function () {\n  return (this.precision === -1);\n};\n\n/**\n * Parses a date string and returns a DateRangeBound.\n * @param {String} boundaryString\n * @return {DateRangeBound}\n */\nDateRangeBound.fromString = function(boundaryString) {\n  if (!boundaryString) {\n    return null;\n  }\n  if (boundaryString === '*') {\n    return unbounded;\n  }\n  const matches = dateRegex.exec(boundaryString);\n  if (!matches) {\n    throw TypeError('String provided is not a valid date ' + boundaryString);\n  }\n  if (matches[7] !== undefined && matches[5] === undefined) {\n    // Due to a limitation in the regex, its possible to match dates like 2015T03:02.001, without the seconds\n    // portion but with the milliseconds specified.\n    throw new TypeError('String representation of the date contains the milliseconds portion but not the seconds: ' +\n      boundaryString);\n  }\n  const builder = new BoundaryBuilder(boundaryString.charAt(0) === '-');\n  for (let i = 1; i < matches.length; i++) {\n    builder.set(i-1, matches[i], boundaryString);\n  }\n  return builder.build();\n};\n\n/**\n * The unbounded {@link DateRangeBound} instance. Unbounded bounds are syntactically represented by a <code>*</code>\n * (star) sign.\n * @type {DateRangeBound}\n */\nDateRangeBound.unbounded = unbounded;\n\n/**\n * Converts a {DateRangeBound} into a lower-bounded bound by rounding down its date\n * based on its precision.\n *\n * @param {DateRangeBound} bound The bound to round down.\n * @returns {DateRangeBound} with the date rounded down to the given precision.\n */\nDateRangeBound.toLowerBound = function (bound) {\n  if(bound === unbounded) {\n    return bound;\n  }\n  const rounded = new Date(bound.date.getTime());\n  // in this case we want to fallthrough\n  /* eslint-disable no-fallthrough */\n  switch (bound.precision) {\n    case dateRangePrecision.year:\n      rounded.setUTCMonth(0);\n    case dateRangePrecision.month:\n      rounded.setUTCDate(1);\n    case dateRangePrecision.day:\n      rounded.setUTCHours(0);\n    case dateRangePrecision.hour:\n      rounded.setUTCMinutes(0);\n    case dateRangePrecision.minute:\n      rounded.setUTCSeconds(0);\n    case dateRangePrecision.second:\n      rounded.setUTCMilliseconds(0);\n  }\n  /* eslint-enable no-fallthrough */\n  return new DateRangeBound(rounded, bound.precision);\n};\n\n/**\n * Converts a {DateRangeBound} into a upper-bounded bound by rounding up its date\n * based on its precision.\n *\n * @param {DateRangeBound} bound The bound to round up.\n * @returns {DateRangeBound} with the date rounded up to the given precision.\n */\nDateRangeBound.toUpperBound = function (bound) {\n  if (bound === unbounded) {\n    return bound;\n  }\n  const rounded = new Date(bound.date.getTime());\n  // in this case we want to fallthrough\n  /* eslint-disable no-fallthrough */\n  switch (bound.precision) {\n    case dateRangePrecision.year:\n      rounded.setUTCMonth(11);\n    case dateRangePrecision.month:\n      // Advance to the beginning of next month and set day of month to 0\n      // which sets the date to the last day of the previous month.\n      // This gives us the effect of YYYY-MM-LastDayOfThatMonth\n      rounded.setUTCMonth(rounded.getUTCMonth() + 1, 0);\n    case dateRangePrecision.day:\n      rounded.setUTCHours(23);\n    case dateRangePrecision.hour:\n      rounded.setUTCMinutes(59);\n    case dateRangePrecision.minute:\n      rounded.setUTCSeconds(59);\n    case dateRangePrecision.second:\n      rounded.setUTCMilliseconds(999);\n  }\n  /* eslint-enable no-fallthrough */\n  return new DateRangeBound(rounded, bound.precision);\n};\n\n/** @private */\nfunction BoundaryBuilder(isNegative) {\n  this._sign = isNegative ? -1 : 1;\n  this._index = 0;\n  this._values = new Int32Array(7);\n}\n\nBoundaryBuilder.prototype.set = function (index, value, stringDate) {\n  if (value === undefined) {\n    return;\n  }\n  if (index > 6) {\n    throw new TypeError('Index out of bounds: ' + index);\n  }\n  if (index > this._index) {\n    this._index = index;\n  }\n  const numValue = +value;\n  switch (index) {\n    case dateRangePrecision.month:\n      if (numValue < 1 || numValue > 12) {\n        throw new TypeError('Month portion is not valid for date: ' + stringDate);\n      }\n      break;\n    case dateRangePrecision.day:\n      if (numValue < 1 || numValue > 31) {\n        throw new TypeError('Day portion is not valid for date: ' + stringDate);\n      }\n      break;\n    case dateRangePrecision.hour:\n      if (numValue > 23) {\n        throw new TypeError('Hour portion is not valid for date: ' + stringDate);\n      }\n      break;\n    case dateRangePrecision.minute:\n    case dateRangePrecision.second:\n      if (numValue > 59) {\n        throw new TypeError('Minute/second portion is not valid for date: ' + stringDate);\n      }\n      break;\n    case dateRangePrecision.millisecond:\n      if (numValue > 999) {\n        throw new TypeError('Millisecond portion is not valid for date: ' + stringDate);\n      }\n      break;\n  }\n  this._values[index] = numValue;\n};\n\n/** @return {DateRangeBound} */\nBoundaryBuilder.prototype.build = function () {\n  const date = new Date(0);\n  let month = this._values[1];\n  if (month) {\n    // ES Date months are represented from 0 to 11\n    month--;\n  }\n  date.setUTCFullYear(this._sign * this._values[0], month, this._values[2] || 1);\n  date.setUTCHours(this._values[3], this._values[4], this._values[5], this._values[6]);\n  return new DateRangeBound(date, this._index);\n};\n\nexports.unbounded = unbounded;\nexports.dateRangePrecision = dateRangePrecision;\nexports.DateRange = DateRange;\nexports.DateRangeBound = DateRangeBound;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst dateRangeModule = require('./date-range');\n\n/**\n * Search module.\n * <p>\n *   Contains the classes to represent the set of  types for search data that come with DSE 5.1+\n * </p>\n * @module datastax/search\n */\n\nexports.DateRange = dateRangeModule.DateRange;\nexports.DateRangeBound = dateRangeModule.DateRangeBound;\nexports.dateRangePrecision = dateRangeModule.dateRangePrecision;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst endianness = {\n  '0': 'BE',\n  '1': 'LE'\n};\n\nfunction Geometry() {\n\n}\n\nGeometry.types = {\n  Point2D: 1,\n  LineString: 2,\n  Polygon: 3\n};\n\n/**\n * @protected\n * @param {Number} code\n * @returns {String}\n * @ignore\n */\nGeometry.getEndianness = function (code) {\n  const value = endianness[code.toString()];\n  if (typeof value === 'undefined') {\n    throw new TypeError('Invalid endianness with code ' + code);\n  }\n  return value;\n};\n\n/**\n * Reads an int32 from binary representation based on endianness.\n * @protected\n * @param {Buffer} buffer\n * @param {String} endianness\n * @param {Number} offset\n * @returns Number\n * @ignore\n */\nGeometry.readInt32 = function (buffer, endianness, offset) {\n  if (endianness === 'BE') {\n    return buffer.readInt32BE(offset, true);\n  }\n  return buffer.readInt32LE(offset, true);\n};\n\n/**\n * Reads an 64-bit double from binary representation based on endianness.\n * @protected\n * @param {Buffer} buffer\n * @param {String} endianness\n * @param {Number} offset\n * @returns Number\n * @ignore\n */\nGeometry.readDouble = function (buffer, endianness, offset) {\n  if (endianness === 'BE') {\n    return buffer.readDoubleBE(offset, true);\n  }\n  return buffer.readDoubleLE(offset, true);\n};\n\n/**\n * Writes an 32-bit integer to binary representation based on OS endianness.\n * @protected\n * @param {Number} val\n * @param {Buffer} buffer\n * @param {Number} offset\n * @ignore\n */\nGeometry.prototype.writeInt32 = function (val, buffer, offset) {\n  if (this.useBESerialization()) {\n    return buffer.writeInt32BE(val, offset, true);\n  }\n  return buffer.writeInt32LE(val, offset, true);\n};\n\n/**\n * Writes an 64-bit double to binary representation based on OS endianness.\n * @protected\n * @param {Number} val\n * @param {Buffer} buffer\n * @param {Number} offset\n * @ignore\n */\nGeometry.prototype.writeDouble = function (val, buffer, offset) {\n  if (this.useBESerialization()) {\n    return buffer.writeDoubleBE(val, offset, true);\n  }\n  return buffer.writeDoubleLE(val, offset, true);\n};\n\n/**\n * Writes an 8-bit int that represents the OS endianness.\n * @protected\n * @param {Buffer} buffer\n * @param {Number} offset\n * @ignore\n */\nGeometry.prototype.writeEndianness = function (buffer, offset) {\n  if (this.useBESerialization()) {\n    return buffer.writeInt8(0, offset, true);\n  }\n  return buffer.writeInt8(1, offset, true);\n};\n\n/**\n * Returns true if the serialization must be done in big-endian format.\n * Designed to allow injection of OS endianness.\n * @abstract\n * @ignore\n */\nGeometry.prototype.useBESerialization = function () {\n  throw new Error('Not Implemented');\n};\n\nmodule.exports = Geometry;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\nconst utils = require('../utils');\nconst Geometry = require('./geometry');\n\n/**\n * Creates a new {@link Point} instance.\n * @classdesc\n * A Point is a zero-dimensional object that represents a specific (X,Y)\n * location in a two-dimensional XY-Plane. In case of Geographic Coordinate\n * Systems, the X coordinate is the longitude and the Y is the latitude.\n * @param {Number} x The X coordinate.\n * @param {Number} y The Y coordinate.\n * @extends {Geometry}\n * @alias module:geometry~Point\n * @constructor\n */\nfunction Point(x, y) {\n  if (typeof x !== 'number' || typeof y !== 'number') {\n    throw new TypeError('X and Y must be numbers');\n  }\n  if (isNaN(x) || isNaN(y)) {\n    throw new TypeError('X and Y must be numbers');\n  }\n  /**\n   * Returns the X coordinate of this 2D point.\n   * @type {Number}\n   */\n  this.x = x;\n  /**\n   * Returns the Y coordinate of this 2D point.\n   * @type {Number}\n   */\n  this.y = y;\n}\n\n//noinspection JSCheckFunctionSignatures\nutil.inherits(Point, Geometry);\n\n/**\n * Creates a {@link Point} instance from\n * a <a href=\"https://en.wikipedia.org/wiki/Well-known_text\">Well-known Text (WKT)</a>\n * representation of a 2D point.\n * @param {Buffer} buffer\n * @returns {Point}\n */\nPoint.fromBuffer = function (buffer) {\n  if (!buffer || buffer.length !== 21) {\n    throw new TypeError('2D Point buffer should contain 21 bytes');\n  }\n  const endianness = Geometry.getEndianness(buffer.readInt8(0, true));\n  if (Geometry.readInt32(buffer, endianness, 1) !== Geometry.types.Point2D) {\n    throw new TypeError('Binary representation was not a point');\n  }\n  return new Point(Geometry.readDouble(buffer, endianness, 5), Geometry.readDouble(buffer, endianness, 13));\n};\n\n/**\n * Creates a {@link Point} instance from\n * a <a href=\"https://en.wikipedia.org/wiki/Well-known_text\">Well-known Text (WKT)</a>\n * representation of a 2D point.\n * @param {String} textValue\n * @returns {Point}\n */\nPoint.fromString = function (textValue) {\n  const wktRegex = /^POINT\\s?\\(([-0-9.]+) ([-0-9.]+)\\)$/g;\n  const matches = wktRegex.exec(textValue);\n  if (!matches || matches.length !== 3) {\n    throw new TypeError('2D Point WTK should contain 2 coordinates');\n  }\n  return new Point(parseFloat(matches[1]), parseFloat(matches[2]));\n};\n\n/**\n * Returns a <a href=\"https://en.wikipedia.org/wiki/Well-known_text#Well-known_binary\">Well-known Binary</a> (WKB)\n * representation of this instance.\n * @returns {Buffer}\n */\nPoint.prototype.toBuffer = function () {\n  const buffer = utils.allocBufferUnsafe(21);\n  this.writeEndianness(buffer, 0);\n  this.writeInt32(Geometry.types.Point2D, buffer, 1);\n  this.writeDouble(this.x, buffer, 5);\n  this.writeDouble(this.y, buffer, 13);\n  return buffer;\n};\n\n/**\n * Returns true if the values of the point are the same, otherwise it returns false.\n * @param {Point} other\n * @returns {Boolean}\n */\nPoint.prototype.equals = function (other) {\n  if (!(other instanceof Point)) {\n    return false;\n  }\n  return (this.x === other.x && this.y === other.y);\n};\n\n/**\n * Returns Well-known text (WKT) representation of the geometry object.\n * @returns {String}\n */\nPoint.prototype.toString = function () {\n  return util.format('POINT (%d %d)', this.x, this.y);\n};\n\nPoint.prototype.useBESerialization = function () {\n  return false;\n};\n\n/**\n * Returns a JSON representation of this geo-spatial type.\n */\nPoint.prototype.toJSON = function () {\n  return { type: 'Point', coordinates: [ this.x, this.y ]};\n};\n\nmodule.exports = Point;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\nconst utils = require('../utils');\nconst Geometry = require('./geometry');\nconst Point = require('./point');\n\n/**\n * Creates a new {@link LineString} instance.\n * @classdesc\n * A LineString is a one-dimensional object representing a sequence of points and the line segments connecting them.\n * @param {...Point}[point] A sequence of [Point]{@link module:geometry~Point} items as arguments.\n * @example\n * new LineString(new Point(10.99, 20.02), new Point(14, 26), new Point(34, 1.2));\n * @constructor\n * @alias module:geometry~LineString\n * @extends {Geometry}\n */\nfunction LineString(point) {\n  let points = Array.prototype.slice.call(arguments);\n  if (points.length === 1 && Array.isArray(points) && Array.isArray(points[0])) {\n    //The first argument is an array of the points\n    points = points[0];\n  }\n  if (points.length === 1) {\n    throw new TypeError('LineString can be either empty or contain 2 or more points');\n  }\n  /**\n   * Returns a frozen Array of points that represent the line.\n   * @type {Array.<Point>}\n   */\n  this.points = Object.freeze(points);\n}\n\n//noinspection JSCheckFunctionSignatures\nutil.inherits(LineString, Geometry);\n\n/**\n * Creates a {@link LineString} instance from\n * a <a href=\"https://en.wikipedia.org/wiki/Well-known_text\">Well-known Text (WKT)</a>\n * representation of a line.\n * @param {Buffer} buffer\n * @returns {LineString}\n */\nLineString.fromBuffer = function (buffer) {\n  if (!buffer || buffer.length < 9) {\n    throw new TypeError('A linestring buffer should contain at least 9 bytes');\n  }\n  const endianness = Geometry.getEndianness(buffer.readInt8(0, true));\n  let offset = 1;\n  if (Geometry.readInt32(buffer, endianness, offset) !== Geometry.types.LineString) {\n    throw new TypeError('Binary representation was not a LineString');\n  }\n  offset += 4;\n  const length = Geometry.readInt32(buffer, endianness, offset);\n  offset += 4;\n  if (buffer.length !== offset + length * 16) {\n    throw new TypeError(util.format('Length of the buffer does not match %d !== %d', buffer.length, offset + length * 8));\n  }\n  const points = new Array(length);\n  for (let i = 0; i < length; i++) {\n    points[i] = new Point(\n      Geometry.readDouble(buffer, endianness, offset),\n      Geometry.readDouble(buffer, endianness, offset + 8));\n    offset += 16;\n  }\n  //noinspection JSCheckFunctionSignatures\n  return new LineString(points);\n};\n\n/**\n * Creates a {@link LineString} instance from\n * a <a href=\"https://en.wikipedia.org/wiki/Well-known_text\">Well-known Text (WKT)</a>\n * representation of a line.\n * @param {String} textValue\n * @returns {LineString}\n */\nLineString.fromString = function (textValue) {\n  const wktRegex = /^LINESTRING ?\\(([-0-9. ,]+)\\)+$/g;\n  const matches = wktRegex.exec(textValue);\n  if (!matches || matches.length !== 2) {\n    throw new TypeError('Invalid WKT: ' + textValue);\n  }\n  const points = LineString.parseSegments(matches[1]);\n  return new LineString(points);\n};\n\n/**\n * Internal method that parses a series of WKT points.\n * @param {String} textValue\n * @returns {Array<Point>}\n * @internal\n * @ignore\n */\nLineString.parseSegments = function (textValue) {\n  const points = [];\n  const pointParts = textValue.split(',');\n  for (let i = 0; i < pointParts.length; i++) {\n    const p = pointParts[i].trim();\n    if (p.length === 0) {\n      throw new TypeError('Invalid WKT segment: ' + textValue);\n    }\n    const xyText = p.split(' ').filter(function (element) {\n      return (element.trim().length > 0);\n    });\n    if (xyText.length !== 2) {\n      throw new TypeError('Invalid WKT segment: ' + textValue);\n    }\n    points.push(new Point(parseFloat(xyText[0]), parseFloat(xyText[1])));\n  }\n  return points;\n};\n\n/**\n * Returns a <a href=\"https://en.wikipedia.org/wiki/Well-known_text#Well-known_binary\">Well-known Binary</a> (WKB)\n * representation of this instance.\n * @returns {Buffer}\n */\nLineString.prototype.toBuffer = function () {\n  const buffer = utils.allocBufferUnsafe(9 + this.points.length * 16);\n  this.writeEndianness(buffer, 0);\n  let offset = 1;\n  this.writeInt32(Geometry.types.LineString, buffer, offset);\n  offset += 4;\n  this.writeInt32(this.points.length, buffer, offset);\n  offset += 4;\n  this.points.forEach(function (p) {\n    this.writeDouble(p.x, buffer, offset);\n    this.writeDouble(p.y, buffer, offset + 8);\n    offset += 16;\n  }, this);\n  return buffer;\n};\n\n/**\n * Returns true if the values of the linestrings are the same, otherwise it returns false.\n * @param {LineString} other\n * @returns {Boolean}\n */\nLineString.prototype.equals = function (other) {\n  if (!(other instanceof LineString)) {\n    return false;\n  }\n  if (this.points.length !== other.points.length) {\n    return false;\n  }\n  for (let i = 0; i < this.points.length; i++) {\n    if (!this.points[i].equals(other.points[i])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Returns Well-known text (WKT) representation of the geometry object.\n * @returns {String}\n */\nLineString.prototype.toString = function () {\n  if (this.points.length === 0) {\n    return 'LINESTRING EMPTY';\n  }\n  return 'LINESTRING ('\n    + this.points.map(function (p) {\n      return p.x + ' ' + p.y;\n    }).join(', ')\n    + ')';\n};\n\nLineString.prototype.useBESerialization = function () {\n  return false;\n};\n\n/**\n * Returns a JSON representation of this geo-spatial type.\n */\nLineString.prototype.toJSON = function () {\n  return { type: 'LineString', coordinates: this.points.map(function (p) {\n    return [p.x, p.y];\n  })};\n};\n\nmodule.exports = LineString;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\nconst utils = require('../utils');\nconst Geometry = require('./geometry');\nconst Point = require('./point');\nconst LineString = require('./line-string');\n\n/**\n * Creates a new {@link Polygon} instance.\n * @classdesc\n * Represents is a plane geometry figure that is bounded by a finite chain of straight line segments closing in a loop\n * to form a closed chain or circuit.\n * @param {...Array.<Point>}[ringPoints] A sequence of Array of [Point]{@link module:geometry~Point} items as arguments\n * representing the rings of the polygon.\n * @example\n * new Polygon([ new Point(30, 10), new Point(40, 40), new Point(10, 20), new Point(30, 10) ]);\n * @example\n * //polygon with a hole\n * new Polygon(\n *  [ new Point(30, 10), new Point(40, 40), new Point(10, 20), new Point(30, 10) ],\n *  [ new Point(25, 20), new Point(30, 30), new Point(20, 20), new Point(25, 20) ]\n * );\n * @alias module:geometry~Polygon\n * @constructor\n */\nfunction Polygon(ringPoints) {\n  const rings = Array.prototype.slice.call(arguments);\n  /**\n   * Returns a frozen Array of array of points that represent the different rings in the polygon.\n   * @type {Array}\n   */\n  this.rings = Object.freeze(rings);\n}\n\n//noinspection JSCheckFunctionSignatures\nutil.inherits(Polygon, Geometry);\n\n/**\n * Creates a {@link Polygon} instance from\n * a <a href=\"https://en.wikipedia.org/wiki/Well-known_text\">Well-known Text (WKT)</a>\n * representation of a polygon.\n * @param {Buffer} buffer\n * @returns {Polygon}\n */\nPolygon.fromBuffer = function (buffer) {\n  if (!buffer || buffer.length < 9) {\n    throw new TypeError('A Polygon buffer should contain at least 9 bytes');\n  }\n  const endianness = Geometry.getEndianness(buffer.readInt8(0, true));\n  let offset = 1;\n  if (Geometry.readInt32(buffer, endianness, offset) !== Geometry.types.Polygon) {\n    throw new TypeError('Binary representation was not a Polygon');\n  }\n  offset += 4;\n  const ringsLength = Geometry.readInt32(buffer, endianness, offset);\n  offset += 4;\n  const ringsArray = new Array(ringsLength);\n  for (let ringIndex = 0; ringIndex < ringsLength; ringIndex++) {\n    const pointsLength = Geometry.readInt32(buffer, endianness, offset);\n    offset += 4;\n    if (buffer.length < offset + pointsLength * 16) {\n      throw new TypeError(util.format('Length of the buffer does not match'));\n    }\n    const ring = new Array(pointsLength);\n    for (let i = 0; i < pointsLength; i++) {\n      ring[i] = new Point(\n        Geometry.readDouble(buffer, endianness, offset),\n        Geometry.readDouble(buffer, endianness, offset + 8));\n      offset += 16;\n    }\n    ringsArray[ringIndex] = ring;\n  }\n  //Invoke the constructor with each ring as a parameter\n  //ringsArray.unshift(null);\n  //return new (Function.prototype.bind.apply(Polygon, ringsArray));\n  return construct(ringsArray);\n};\n\n/**\n * Creates a {@link Polygon} instance from\n * a <a href=\"https://en.wikipedia.org/wiki/Well-known_text\">Well-known Text (WKT)</a>\n * representation of a shape.\n * @param {String} textValue\n * @returns {Polygon}\n */\nPolygon.fromString = function (textValue) {\n  const wktRegex = /^POLYGON ?\\((\\(.*\\))\\)$/g;\n  const matches = wktRegex.exec(textValue);\n  function validateWkt(condition) {\n    if (condition) {\n      throw new TypeError('Invalid WKT: ' + textValue);\n    }\n  }\n  validateWkt(!matches || matches.length !== 2);\n\n  const ringsText = matches[1];\n  const ringsArray = [];\n  let ringStart = null;\n  for (let i = 0; i < ringsText.length; i++) {\n    const c = ringsText[i];\n    if (c === '(') {\n      validateWkt(ringStart !== null);\n      ringStart = i+1;\n      continue;\n    }\n    if (c === ')') {\n      validateWkt(ringStart === null);\n      ringsArray.push(ringsText.substring(ringStart, i));\n      ringStart = null;\n      continue;\n    }\n    validateWkt(ringStart === null && c !== ' ' && c !== ',');\n  }\n  return construct(ringsArray.map(LineString.parseSegments));\n};\n\n/**\n * Creates a new instance of Polygon with each array item as a parameter\n * @private\n * @param {Array<Array<Point>>} argsArray\n * @returns {Polygon}\n */\nfunction construct(argsArray) {\n  function F() {\n    return Polygon.apply(this, argsArray);\n  }\n  F.prototype = Polygon.prototype;\n  return new F();\n}\n\n/**\n * Returns a <a href=\"https://en.wikipedia.org/wiki/Well-known_text#Well-known_binary\">Well-known Binary</a> (WKB)\n * representation of this instance.\n * @returns {Buffer}\n */\nPolygon.prototype.toBuffer = function () {\n  let totalRingsLength = 0;\n  this.rings.forEach(function (ring) {\n    totalRingsLength += 4 + ring.length * 16;\n  }, this);\n  const buffer = utils.allocBufferUnsafe(9 + totalRingsLength);\n  this.writeEndianness(buffer, 0);\n  let offset = 1;\n  this.writeInt32(Geometry.types.Polygon, buffer, offset);\n  offset += 4;\n  this.writeInt32(this.rings.length, buffer, offset);\n  offset += 4;\n  this.rings.forEach(function (ring) {\n    this.writeInt32(ring.length, buffer, offset);\n    offset += 4;\n    ring.forEach(function (p) {\n      this.writeDouble(p.x, buffer, offset);\n      this.writeDouble(p.y, buffer, offset + 8);\n      offset += 16;\n    }, this);\n  }, this);\n  return buffer;\n};\n\n/**\n * Returns true if the values of the polygons are the same, otherwise it returns false.\n * @param {Polygon} other\n * @returns {Boolean}\n */\nPolygon.prototype.equals = function (other) {\n  if (!(other instanceof Polygon)) {\n    return false;\n  }\n  if (this.rings.length !== other.rings.length) {\n    return false;\n  }\n  for (let i = 0; i < this.rings.length; i++) {\n    const r1 = this.rings[i];\n    const r2 = other.rings[i];\n    if (r1.length !== r2.length) {\n      return false;\n    }\n    for (let j = 0; j < r1.length; j++) {\n      if (!r1[i].equals(r2[i])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nPolygon.prototype.useBESerialization = function () {\n  return false;\n};\n\n/**\n * Returns Well-known text (WKT) representation of the geometry object.\n * @returns {String}\n */\nPolygon.prototype.toString = function () {\n  if (this.rings.length === 0) {\n    return 'POLYGON EMPTY';\n  }\n  let ringStrings = '';\n  this.rings.forEach(function (r, i) {\n    if (i > 0) {\n      ringStrings += ', ';\n    }\n    ringStrings += '(' +\n      r.map(function (p) {\n        return p.x + ' ' + p.y;\n      }).join(', ')\n      + ')';\n  });\n  return 'POLYGON (' + ringStrings + ')';\n};\n\n/**\n * Returns a JSON representation of this geo-spatial type.\n */\nPolygon.prototype.toJSON = function () {\n  return { type: 'Polygon', coordinates: this.rings.map(function (r) {\n    return r.map(function (p) {\n      return [ p.x, p.y ];\n    });\n  })};\n};\n\nmodule.exports = Polygon;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\n/**\n * Geometry module.\n * <p>\n *   Contains the classes to represent the set of additional CQL types for geospatial data that come with\n *   DSE 5.0.\n * </p>\n * @module geometry\n */\n\nexports.Geometry = require('./geometry');\nexports.LineString = require('./line-string');\nexports.Point = require('./point');\nexports.Polygon = require('./polygon');","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\n\nconst types = require('./types');\nconst dataTypes = types.dataTypes;\nconst Long = types.Long;\nconst Integer = types.Integer;\nconst BigDecimal = types.BigDecimal;\nconst MutableLong = require('./types/mutable-long');\nconst utils = require('./utils');\nconst token = require('./token');\nconst { DateRange } = require('./datastax/search');\nconst geo = require('./geometry');\nconst Geometry = geo.Geometry;\nconst LineString = geo.LineString;\nconst Point = geo.Point;\nconst Polygon = geo.Polygon;\n\nconst uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nconst buffers = {\n  int16Zero: utils.allocBufferFromArray([0, 0]),\n  int32Zero: utils.allocBufferFromArray([0, 0, 0, 0]),\n  int8Zero: utils.allocBufferFromArray([0]),\n  int8One: utils.allocBufferFromArray([1]),\n  int8MaxValue: utils.allocBufferFromArray([0xff])\n};\n\n// BigInt: Avoid using literals (e.g., 32n) as we must be able to compile with older engines\nconst isBigIntSupported = typeof BigInt !== 'undefined';\nconst bigInt32 = isBigIntSupported ? BigInt(32) : null;\nconst bigInt8 = isBigIntSupported ? BigInt(8) : null;\nconst bigInt0 = isBigIntSupported ? BigInt(0) : null;\nconst bigIntMinus1 = isBigIntSupported ? BigInt(-1) : null;\nconst bigInt32BitsOn = isBigIntSupported ? BigInt(0xffffffff) : null;\nconst bigInt8BitsOn = isBigIntSupported ? BigInt(0xff) : null;\n\nconst complexTypeNames = Object.freeze({\n  list      : 'org.apache.cassandra.db.marshal.ListType',\n  set       : 'org.apache.cassandra.db.marshal.SetType',\n  map       : 'org.apache.cassandra.db.marshal.MapType',\n  udt       : 'org.apache.cassandra.db.marshal.UserType',\n  tuple     : 'org.apache.cassandra.db.marshal.TupleType',\n  frozen    : 'org.apache.cassandra.db.marshal.FrozenType',\n  reversed  : 'org.apache.cassandra.db.marshal.ReversedType',\n  composite : 'org.apache.cassandra.db.marshal.CompositeType',\n  empty     : 'org.apache.cassandra.db.marshal.EmptyType',\n  collection: 'org.apache.cassandra.db.marshal.ColumnToCollectionType'\n});\nconst cqlNames = Object.freeze({\n  frozen: 'frozen',\n  list: 'list',\n  'set': 'set',\n  map: 'map',\n  tuple: 'tuple',\n  empty: 'empty',\n  duration: 'duration'\n});\nconst singleTypeNames = Object.freeze({\n  'org.apache.cassandra.db.marshal.UTF8Type':           dataTypes.varchar,\n  'org.apache.cassandra.db.marshal.AsciiType':          dataTypes.ascii,\n  'org.apache.cassandra.db.marshal.UUIDType':           dataTypes.uuid,\n  'org.apache.cassandra.db.marshal.TimeUUIDType':       dataTypes.timeuuid,\n  'org.apache.cassandra.db.marshal.Int32Type':          dataTypes.int,\n  'org.apache.cassandra.db.marshal.BytesType':          dataTypes.blob,\n  'org.apache.cassandra.db.marshal.FloatType':          dataTypes.float,\n  'org.apache.cassandra.db.marshal.DoubleType':         dataTypes.double,\n  'org.apache.cassandra.db.marshal.BooleanType':        dataTypes.boolean,\n  'org.apache.cassandra.db.marshal.InetAddressType':    dataTypes.inet,\n  'org.apache.cassandra.db.marshal.SimpleDateType':     dataTypes.date,\n  'org.apache.cassandra.db.marshal.TimeType':           dataTypes.time,\n  'org.apache.cassandra.db.marshal.ShortType':          dataTypes.smallint,\n  'org.apache.cassandra.db.marshal.ByteType':           dataTypes.tinyint,\n  'org.apache.cassandra.db.marshal.DateType':           dataTypes.timestamp,\n  'org.apache.cassandra.db.marshal.TimestampType':      dataTypes.timestamp,\n  'org.apache.cassandra.db.marshal.LongType':           dataTypes.bigint,\n  'org.apache.cassandra.db.marshal.DecimalType':        dataTypes.decimal,\n  'org.apache.cassandra.db.marshal.IntegerType':        dataTypes.varint,\n  'org.apache.cassandra.db.marshal.CounterColumnType':  dataTypes.counter\n});\nconst singleFqTypeNamesLength = Object.keys(singleTypeNames).reduce(function (previous, current) {\n  return current.length > previous ? current.length : previous;\n}, 0);\n\nconst customTypeNames = Object.freeze({\n  duration: 'org.apache.cassandra.db.marshal.DurationType',\n  lineString: 'org.apache.cassandra.db.marshal.LineStringType',\n  point: 'org.apache.cassandra.db.marshal.PointType',\n  polygon: 'org.apache.cassandra.db.marshal.PolygonType',\n  dateRange: 'org.apache.cassandra.db.marshal.DateRangeType'\n});\n\nconst nullValueBuffer = utils.allocBufferFromArray([255, 255, 255, 255]);\nconst unsetValueBuffer = utils.allocBufferFromArray([255, 255, 255, 254]);\n\n/**\n * For backwards compatibility, empty buffers as text/blob/custom values are supported.\n * In the case of other types, they are going to be decoded as a <code>null</code> value.\n * @private\n * @type {Set}\n */\nconst zeroLengthTypesSupported = new Set([\n  dataTypes.text,\n  dataTypes.ascii,\n  dataTypes.varchar,\n  dataTypes.custom,\n  dataTypes.blob\n]);\n\n/**\n * Serializes and deserializes to and from a CQL type and a Javascript Type.\n * @param {Number} protocolVersion\n * @param {ClientOptions} options\n * @constructor\n */\nfunction Encoder(protocolVersion, options) {\n  this.encodingOptions = options.encoding || utils.emptyObject;\n  defineInstanceMembers.call(this);\n  this.setProtocolVersion(protocolVersion);\n  setEncoders.call(this);\n  if (this.encodingOptions.copyBuffer) {\n    this.handleBuffer = handleBufferCopy;\n  }\n  else {\n    this.handleBuffer = handleBufferRef;\n  }\n}\n\n/**\n * Declares the privileged instance members.\n * @private\n */\nfunction defineInstanceMembers() {\n  /**\n   * Sets the protocol version and the encoding/decoding methods depending on the protocol version\n   * @param {Number} value\n   * @ignore\n   * @internal\n   */\n  this.setProtocolVersion = function (value) {\n    this.protocolVersion = value;\n    //Set the collection serialization based on the protocol version\n    this.decodeCollectionLength = decodeCollectionLengthV3;\n    this.getLengthBuffer = getLengthBufferV3;\n    this.collectionLengthSize = 4;\n    if (!types.protocolVersion.uses4BytesCollectionLength(this.protocolVersion)) {\n      this.decodeCollectionLength = decodeCollectionLengthV2;\n      this.getLengthBuffer = getLengthBufferV2;\n      this.collectionLengthSize = 2;\n    }\n  };\n\n  const customDecoders = {\n    [customTypeNames.duration]: decodeDuration,\n    [customTypeNames.lineString]: decodeLineString,\n    [customTypeNames.point]: decodePoint,\n    [customTypeNames.polygon]: decodePolygon,\n    [customTypeNames.dateRange]: decodeDateRange\n  };\n\n  const customEncoders = {\n    [customTypeNames.duration]: encodeDuration,\n    [customTypeNames.lineString]: encodeLineString,\n    [customTypeNames.point]: encodePoint,\n    [customTypeNames.polygon]: encodePolygon,\n    [customTypeNames.dateRange]: encodeDateRange\n  };\n\n  // Decoding methods\n  this.decodeBlob = function (bytes) {\n    return this.handleBuffer(bytes);\n  };\n  this.decodeCustom = function (bytes, typeName) {\n    const handler = customDecoders[typeName];\n    if (handler) {\n      return handler.call(this, bytes);\n    }\n    return this.handleBuffer(bytes);\n  };\n  this.decodeUtf8String = function (bytes) {\n    return bytes.toString('utf8');\n  };\n  this.decodeAsciiString = function (bytes) {\n    return bytes.toString('ascii');\n  };\n  this.decodeBoolean = function (bytes) {\n    return !!bytes.readUInt8(0);\n  };\n  this.decodeDouble = function (bytes) {\n    return bytes.readDoubleBE(0);\n  };\n  this.decodeFloat = function (bytes) {\n    return bytes.readFloatBE(0);\n  };\n  this.decodeInt = function (bytes) {\n    return bytes.readInt32BE(0);\n  };\n  this.decodeSmallint = function (bytes) {\n    return bytes.readInt16BE(0);\n  };\n  this.decodeTinyint = function (bytes) {\n    return bytes.readInt8(0);\n  };\n\n  this._decodeCqlLongAsLong = function (bytes) {\n    return Long.fromBuffer(bytes);\n  };\n\n  this._decodeCqlLongAsBigInt = function (bytes) {\n    return BigInt.asIntN(64, (BigInt(bytes.readUInt32BE(0)) << bigInt32) | BigInt(bytes.readUInt32BE(4)));\n  };\n\n  this.decodeLong = this.encodingOptions.useBigIntAsLong\n    ? this._decodeCqlLongAsBigInt\n    : this._decodeCqlLongAsLong;\n\n  this._decodeVarintAsInteger = function (bytes) {\n    return Integer.fromBuffer(bytes);\n  };\n\n  this._decodeVarintAsBigInt = function decodeVarintAsBigInt(bytes) {\n    let result = bigInt0;\n    if (bytes[0] <= 0x7f) {\n      for (let i = 0; i < bytes.length; i++) {\n        const b = BigInt(bytes[bytes.length - 1 - i]);\n        result = result | (b << BigInt(i * 8));\n      }\n    } else {\n      for (let i = 0; i < bytes.length; i++) {\n        const b = BigInt(bytes[bytes.length - 1 - i]);\n        result = result | ((~b & bigInt8BitsOn) << BigInt(i * 8));\n      }\n      result = ~result;\n    }\n\n    return result;\n  };\n\n  this.decodeVarint = this.encodingOptions.useBigIntAsVarint\n    ? this._decodeVarintAsBigInt\n    : this._decodeVarintAsInteger;\n\n  this.decodeDecimal = function(bytes) {\n    return BigDecimal.fromBuffer(bytes);\n  };\n  this.decodeTimestamp = function(bytes) {\n    return new Date(this._decodeCqlLongAsLong(bytes).toNumber());\n  };\n  this.decodeDate = function (bytes) {\n    return types.LocalDate.fromBuffer(bytes);\n  };\n  this.decodeTime = function (bytes) {\n    return types.LocalTime.fromBuffer(bytes);\n  };\n  /*\n   * Reads a list from bytes\n   */\n  this.decodeList = function (bytes, subtype) {\n    const totalItems = this.decodeCollectionLength(bytes, 0);\n    let offset = this.collectionLengthSize;\n    const list = new Array(totalItems);\n    for (let i = 0; i < totalItems; i++) {\n      //bytes length of the item\n      const length = this.decodeCollectionLength(bytes, offset);\n      offset += this.collectionLengthSize;\n      //slice it\n      list[i] = this.decode(bytes.slice(offset, offset+length), subtype);\n      offset += length;\n    }\n    return list;\n  };\n  /*\n   * Reads a Set from bytes\n   */\n  this.decodeSet = function (bytes, subtype) {\n    const arr = this.decodeList(bytes, subtype);\n    if (this.encodingOptions.set) {\n      const setConstructor = this.encodingOptions.set;\n      return new setConstructor(arr);\n    }\n    return arr;\n  };\n  /*\n   * Reads a map (key / value) from bytes\n   */\n  this.decodeMap = function (bytes, subtypes) {\n    let map;\n    const totalItems = this.decodeCollectionLength(bytes, 0);\n    let offset = this.collectionLengthSize;\n    const self = this;\n    function readValues(callback, thisArg) {\n      for (let i = 0; i < totalItems; i++) {\n        const keyLength = self.decodeCollectionLength(bytes, offset);\n        offset += self.collectionLengthSize;\n        const key = self.decode(bytes.slice(offset, offset + keyLength), subtypes[0]);\n        offset += keyLength;\n        const valueLength = self.decodeCollectionLength(bytes, offset);\n        offset += self.collectionLengthSize;\n        if (valueLength < 0) {\n          callback.call(thisArg, key, null);\n          continue;\n        }\n        const value = self.decode(bytes.slice(offset, offset + valueLength), subtypes[1]);\n        offset += valueLength;\n        callback.call(thisArg, key, value);\n      }\n    }\n    if (this.encodingOptions.map) {\n      const mapConstructor = this.encodingOptions.map;\n      map = new mapConstructor();\n      readValues(map.set, map);\n    }\n    else {\n      map = {};\n      readValues(function (key, value) {\n        map[key] = value;\n      });\n    }\n    return map;\n  };\n  this.decodeUuid = function (bytes) {\n    return new types.Uuid(this.handleBuffer(bytes));\n  };\n  this.decodeTimeUuid = function (bytes) {\n    return new types.TimeUuid(this.handleBuffer(bytes));\n  };\n  this.decodeInet = function (bytes) {\n    return new types.InetAddress(this.handleBuffer(bytes));\n  };\n  /**\n   * Decodes a user defined type into an object\n   * @param {Buffer} bytes\n   * @param {{fields: Array}} udtInfo\n   * @private\n   */\n  this.decodeUdt = function (bytes, udtInfo) {\n    const result = {};\n    let offset = 0;\n    for (let i = 0; i < udtInfo.fields.length && offset < bytes.length; i++) {\n      //bytes length of the field value\n      const length = bytes.readInt32BE(offset);\n      offset += 4;\n      //slice it\n      const field = udtInfo.fields[i];\n      if (length < 0) {\n        result[field.name] = null;\n        continue;\n      }\n      result[field.name] = this.decode(bytes.slice(offset, offset+length), field.type);\n      offset += length;\n    }\n    return result;\n  };\n\n  this.decodeTuple = function (bytes, tupleInfo) {\n    const elements = new Array(tupleInfo.length);\n    let offset = 0;\n\n    for (let i = 0; i < tupleInfo.length && offset < bytes.length; i++) {\n      const length = bytes.readInt32BE(offset);\n      offset += 4;\n\n      if (length < 0) {\n        elements[i] = null;\n        continue;\n      }\n\n      elements[i] = this.decode(bytes.slice(offset, offset+length), tupleInfo[i]);\n      offset += length;\n    }\n\n    return types.Tuple.fromArray(elements);\n  };\n\n  //Encoding methods\n  this.encodeFloat = function (value) {\n    if (typeof value === 'string') {\n      // All numeric types are supported as strings for historical reasons\n      value = parseFloat(value);\n\n      if (Number.isNaN(value)) {\n        throw new TypeError(`Expected string representation of a number, obtained ${util.inspect(value)}`);\n      }\n    }\n\n    if (typeof value !== 'number') {\n      throw new TypeError('Expected Number, obtained ' + util.inspect(value));\n    }\n\n    const buf = utils.allocBufferUnsafe(4);\n    buf.writeFloatBE(value, 0);\n    return buf;\n  };\n\n  this.encodeDouble = function (value) {\n    if (typeof value === 'string') {\n      // All numeric types are supported as strings for historical reasons\n      value = parseFloat(value);\n\n      if (Number.isNaN(value)) {\n        throw new TypeError(`Expected string representation of a number, obtained ${util.inspect(value)}`);\n      }\n    }\n\n    if (typeof value !== 'number') {\n      throw new TypeError('Expected Number, obtained ' + util.inspect(value));\n    }\n\n    const buf = utils.allocBufferUnsafe(8);\n    buf.writeDoubleBE(value, 0);\n    return buf;\n  };\n\n  /**\n   * @param {Date|String|Long|Number} value\n   * @private\n   */\n  this.encodeTimestamp = function (value) {\n    const originalValue = value;\n    if (typeof value === 'string') {\n      value = new Date(value);\n    }\n    if (value instanceof Date) {\n      //milliseconds since epoch\n      value = value.getTime();\n      if (isNaN(value)) {\n        throw new TypeError('Invalid date: ' + originalValue);\n      }\n    }\n    if (this.encodingOptions.useBigIntAsLong) {\n      value = BigInt(value);\n    }\n    return this.encodeLong(value);\n  };\n  /**\n   * @param {Date|String|LocalDate} value\n   * @returns {Buffer}\n   * @throws {TypeError}\n   * @private\n   */\n  this.encodeDate = function (value) {\n    const originalValue = value;\n    try {\n      if (typeof value === 'string') {\n        value = types.LocalDate.fromString(value);\n      }\n      if (value instanceof Date) {\n        value = types.LocalDate.fromDate(value);\n      }\n    }\n    catch (err) {\n      //Wrap into a TypeError\n      throw new TypeError('LocalDate could not be parsed ' + err);\n    }\n    if (!(value instanceof types.LocalDate)) {\n      throw new TypeError('Expected Date/String/LocalDate, obtained ' + util.inspect(originalValue));\n    }\n    return value.toBuffer();\n  };\n  /**\n   * @param {String|LocalDate} value\n   * @returns {Buffer}\n   * @throws {TypeError}\n   * @private\n   */\n  this.encodeTime = function (value) {\n    const originalValue = value;\n    try {\n      if (typeof value === 'string') {\n        value = types.LocalTime.fromString(value);\n      }\n    }\n    catch (err) {\n      //Wrap into a TypeError\n      throw new TypeError('LocalTime could not be parsed ' + err);\n    }\n    if (!(value instanceof types.LocalTime)) {\n      throw new TypeError('Expected String/LocalTime, obtained ' + util.inspect(originalValue));\n    }\n    return value.toBuffer();\n  };\n  /**\n   * @param {Uuid|String|Buffer} value\n   * @private\n   */\n  this.encodeUuid = function (value) {\n    if (typeof value === 'string') {\n      try {\n        value = types.Uuid.fromString(value).getBuffer();\n      }\n      catch (err) {\n        throw new TypeError(err.message);\n      }\n    } else if (value instanceof types.Uuid) {\n      value = value.getBuffer();\n    } else {\n      throw new TypeError('Not a valid Uuid, expected Uuid/String/Buffer, obtained ' + util.inspect(value));\n    }\n\n    return value;\n  };\n  /**\n   * @param {String|InetAddress|Buffer} value\n   * @returns {Buffer}\n   * @private\n   */\n  this.encodeInet = function (value) {\n    if (typeof value === 'string') {\n      value = types.InetAddress.fromString(value);\n    }\n    if (value instanceof types.InetAddress) {\n      value = value.getBuffer();\n    }\n    if (!(value instanceof Buffer)) {\n      throw new TypeError('Not a valid Inet, expected InetAddress/Buffer, obtained ' + util.inspect(value));\n    }\n    return value;\n  };\n\n  /**\n   * @param {Long|Buffer|String|Number} value\n   * @private\n   */\n  this._encodeBigIntFromLong = function (value) {\n    if (typeof value === 'number') {\n      value = Long.fromNumber(value);\n    } else if (typeof value === 'string') {\n      value = Long.fromString(value);\n    }\n\n    let buf = null;\n\n    if (value instanceof Long) {\n      buf = Long.toBuffer(value);\n    } else if (value instanceof MutableLong) {\n      buf = Long.toBuffer(value.toImmutable());\n    }\n\n    if (buf === null) {\n      throw new TypeError('Not a valid bigint, expected Long/Number/String/Buffer, obtained ' + util.inspect(value));\n    }\n\n    return buf;\n  };\n\n  this._encodeBigIntFromBigInt = function (value) {\n    if (typeof value === 'string') {\n      // All numeric types are supported as strings for historical reasons\n      value = BigInt(value);\n    }\n\n    // eslint-disable-next-line valid-typeof\n    if (typeof value !== 'bigint') {\n      // Only BigInt values are supported\n      throw new TypeError('Not a valid BigInt value, obtained ' + util.inspect(value));\n    }\n\n    const buffer = utils.allocBufferUnsafe(8);\n    buffer.writeUInt32BE(Number(value >> bigInt32) >>> 0, 0);\n    buffer.writeUInt32BE(Number(value & bigInt32BitsOn), 4);\n    return buffer;\n  };\n\n  this.encodeLong = this.encodingOptions.useBigIntAsLong\n    ? this._encodeBigIntFromBigInt\n    : this._encodeBigIntFromLong;\n\n  /**\n   * @param {Integer|Buffer|String|Number} value\n   * @returns {Buffer}\n   * @private\n   */\n  this._encodeVarintFromInteger = function (value) {\n    if (typeof value === 'number') {\n      value = Integer.fromNumber(value);\n    }\n    if (typeof value === 'string') {\n      value = Integer.fromString(value);\n    }\n    let buf = null;\n    if (value instanceof Buffer) {\n      buf = value;\n    }\n    if (value instanceof Integer) {\n      buf = Integer.toBuffer(value);\n    }\n    if (buf === null) {\n      throw new TypeError('Not a valid varint, expected Integer/Number/String/Buffer, obtained ' + util.inspect(value));\n    }\n    return buf;\n  };\n\n  this._encodeVarintFromBigInt = function (value) {\n    if (typeof value === 'string') {\n      // All numeric types are supported as strings for historical reasons\n      value = BigInt(value);\n    }\n\n    // eslint-disable-next-line valid-typeof\n    if (typeof value !== 'bigint') {\n      throw new TypeError('Not a valid varint, expected BigInt, obtained ' + util.inspect(value));\n    }\n\n    if (value === bigInt0) {\n      return buffers.int8Zero;\n\n    }\n    else if (value === bigIntMinus1) {\n      return buffers.int8MaxValue;\n    }\n\n    const parts = [];\n\n    if (value > bigInt0){\n      while (value !== bigInt0) {\n        parts.unshift(Number(value & bigInt8BitsOn));\n        value = value >> bigInt8;\n      }\n\n      if (parts[0] > 0x7f) {\n        // Positive value needs a padding\n        parts.unshift(0);\n      }\n    } else {\n      while (value !== bigIntMinus1) {\n        parts.unshift(Number(value & bigInt8BitsOn));\n        value = value >> bigInt8;\n      }\n\n      if (parts[0] <= 0x7f) {\n        // Negative value needs a padding\n        parts.unshift(0xff);\n      }\n    }\n\n    return utils.allocBufferFromArray(parts);\n  };\n\n  this.encodeVarint = this.encodingOptions.useBigIntAsVarint\n    ? this._encodeVarintFromBigInt\n    : this._encodeVarintFromInteger;\n\n  /**\n   * @param {BigDecimal|Buffer|String|Number} value\n   * @returns {Buffer}\n   * @private\n   */\n  this.encodeDecimal = function (value) {\n    if (typeof value === 'number') {\n      value = BigDecimal.fromNumber(value);\n    } else if (typeof value === 'string') {\n      value = BigDecimal.fromString(value);\n    }\n\n    let buf = null;\n\n    if (value instanceof BigDecimal) {\n      buf = BigDecimal.toBuffer(value);\n    } else {\n      throw new TypeError('Not a valid varint, expected BigDecimal/Number/String/Buffer, obtained ' + util.inspect(value));\n    }\n\n    return buf;\n  };\n  this.encodeString = function (value, encoding) {\n    if (typeof value !== 'string') {\n      throw new TypeError('Not a valid text value, expected String obtained ' + util.inspect(value));\n    }\n    return utils.allocBufferFromString(value, encoding);\n  };\n  this.encodeUtf8String = function (value) {\n    return this.encodeString(value, 'utf8');\n  };\n  this.encodeAsciiString = function (value) {\n    return this.encodeString(value, 'ascii');\n  };\n  this.encodeBlob = function (value) {\n    if (!(value instanceof Buffer)) {\n      throw new TypeError('Not a valid blob, expected Buffer obtained ' + util.inspect(value));\n    }\n    return value;\n  };\n  this.encodeCustom = function (value, name) {\n    const handler = customEncoders[name];\n    if (handler) {\n      return handler.call(this, value);\n    }\n    throw new TypeError('No encoding handler found for type ' + name);\n  };\n  /**\n   * @param {Boolean} value\n   * @returns {Buffer}\n   * @private\n   */\n  this.encodeBoolean = function (value) {\n    return value ? buffers.int8One : buffers.int8Zero;\n  };\n  /**\n   * @param {Number|String} value\n   * @private\n   */\n  this.encodeInt = function (value) {\n    if (isNaN(value)) {\n      throw new TypeError('Expected Number, obtained ' + util.inspect(value));\n    }\n    const buf = utils.allocBufferUnsafe(4);\n    buf.writeInt32BE(value, 0);\n    return buf;\n  };\n  /**\n   * @param {Number|String} value\n   * @private\n   */\n  this.encodeSmallint = function (value) {\n    if (isNaN(value)) {\n      throw new TypeError('Expected Number, obtained ' + util.inspect(value));\n    }\n    const buf = utils.allocBufferUnsafe(2);\n    buf.writeInt16BE(value, 0);\n    return buf;\n  };\n  /**\n   * @param {Number|String} value\n   * @private\n   */\n  this.encodeTinyint = function (value) {\n    if (isNaN(value)) {\n      throw new TypeError('Expected Number, obtained ' + util.inspect(value));\n    }\n    const buf = utils.allocBufferUnsafe(1);\n    buf.writeInt8(value, 0);\n    return buf;\n  };\n  this.encodeList = function (value, subtype) {\n    if (!Array.isArray(value)) {\n      throw new TypeError('Not a valid list value, expected Array obtained ' + util.inspect(value));\n    }\n    if (value.length === 0) {\n      return null;\n    }\n    const parts = [];\n    parts.push(this.getLengthBuffer(value));\n    for (let i = 0;i < value.length;i++) {\n      const val = value[i];\n      if (val === null || typeof val === 'undefined' || val === types.unset) {\n        throw new TypeError('A collection can\\'t contain null or unset values');\n      }\n      const bytes = this.encode(val, subtype);\n      //include item byte length\n      parts.push(this.getLengthBuffer(bytes));\n      //include item\n      parts.push(bytes);\n    }\n    return Buffer.concat(parts);\n  };\n  this.encodeSet = function (value, subtype) {\n    if (this.encodingOptions.set && value instanceof this.encodingOptions.set) {\n      const arr = [];\n      value.forEach(function (x) {\n        arr.push(x);\n      });\n      return this.encodeList(arr, subtype);\n    }\n    return this.encodeList(value, subtype);\n  };\n  /**\n   * Serializes a map into a Buffer\n   * @param value\n   * @param {Array} [subtypes]\n   * @returns {Buffer}\n   * @private\n   */\n  this.encodeMap = function (value, subtypes) {\n    const parts = [];\n    let propCounter = 0;\n    let keySubtype = null;\n    let valueSubtype = null;\n    const self = this;\n    if (subtypes) {\n      keySubtype = subtypes[0];\n      valueSubtype = subtypes[1];\n    }\n    function addItem(val, key) {\n      if (key === null || typeof key === 'undefined' || key === types.unset) {\n        throw new TypeError('A map can\\'t contain null or unset keys');\n      }\n      if (val === null || typeof val === 'undefined' || val === types.unset) {\n        throw new TypeError('A map can\\'t contain null or unset values');\n      }\n      const keyBuffer = self.encode(key, keySubtype);\n      //include item byte length\n      parts.push(self.getLengthBuffer(keyBuffer));\n      //include item\n      parts.push(keyBuffer);\n      //value\n      const valueBuffer = self.encode(val, valueSubtype);\n      //include item byte length\n      parts.push(self.getLengthBuffer(valueBuffer));\n      //include item\n      if (valueBuffer !== null) {\n        parts.push(valueBuffer);\n      }\n      propCounter++;\n    }\n    if (this.encodingOptions.map && value instanceof this.encodingOptions.map) {\n      //Use Map#forEach() method to iterate\n      value.forEach(addItem);\n    }\n    else {\n      //Use object\n      for (const key in value) {\n        if (!value.hasOwnProperty(key)) {\n          continue;\n        }\n        const val = value[key];\n        addItem(val, key);\n      }\n    }\n\n    parts.unshift(this.getLengthBuffer(propCounter));\n    return Buffer.concat(parts);\n  };\n  this.encodeUdt = function (value, udtInfo) {\n    const parts = [];\n    let totalLength = 0;\n    for (let i = 0; i < udtInfo.fields.length; i++) {\n      const field = udtInfo.fields[i];\n      const item = this.encode(value[field.name], field.type);\n      if (!item) {\n        parts.push(nullValueBuffer);\n        totalLength += 4;\n        continue;\n      }\n      if (item === types.unset) {\n        parts.push(unsetValueBuffer);\n        totalLength += 4;\n        continue;\n      }\n      const lengthBuffer = utils.allocBufferUnsafe(4);\n      lengthBuffer.writeInt32BE(item.length, 0);\n      parts.push(lengthBuffer);\n      parts.push(item);\n      totalLength += item.length + 4;\n    }\n    return Buffer.concat(parts, totalLength);\n  };\n  this.encodeTuple = function (value, tupleInfo) {\n    const parts = [];\n    let totalLength = 0;\n    const length = Math.min(tupleInfo.length, value.length);\n\n    for (let i = 0; i < length; i++) {\n      const type = tupleInfo[i];\n      const item = this.encode(value.get(i), type);\n\n      if (!item) {\n        parts.push(nullValueBuffer);\n        totalLength += 4;\n        continue;\n      }\n\n      if (item === types.unset) {\n        parts.push(unsetValueBuffer);\n        totalLength += 4;\n        continue;\n      }\n\n      const lengthBuffer = utils.allocBufferUnsafe(4);\n      lengthBuffer.writeInt32BE(item.length, 0);\n      parts.push(lengthBuffer);\n      parts.push(item);\n      totalLength += item.length + 4;\n    }\n\n    return Buffer.concat(parts, totalLength);\n  };\n\n  /**\n   * If not provided, it uses the array of buffers or the parameters and hints to build the routingKey\n   * @param {Array} params\n   * @param {ExecutionOptions} execOptions\n   * @param [keys] parameter keys and positions in the params array\n   * @throws TypeError\n   * @internal\n   * @ignore\n   */\n  this.setRoutingKeyFromUser = function (params, execOptions, keys) {\n    let totalLength = 0;\n    const userRoutingKey = execOptions.getRoutingKey();\n    if (Array.isArray(userRoutingKey)) {\n      if (userRoutingKey.length === 1) {\n        execOptions.setRoutingKey(userRoutingKey[0]);\n        return;\n      }\n\n      // Its a composite routing key\n      totalLength = 0;\n      for (let i = 0; i < userRoutingKey.length; i++) {\n        const item = userRoutingKey[i];\n        if (!item) {\n          // Invalid routing key part provided by the user, clear the value\n          execOptions.setRoutingKey(null);\n          return;\n        }\n        totalLength += item.length + 3;\n      }\n\n      execOptions.setRoutingKey(concatRoutingKey(userRoutingKey, totalLength));\n      return;\n    }\n    // If routingKey is present, ensure it is a Buffer, Token, or TokenRange.  Otherwise throw an error.\n    if (userRoutingKey) {\n      if (userRoutingKey instanceof Buffer || userRoutingKey instanceof token.Token\n        || userRoutingKey instanceof token.TokenRange) {\n        return;\n      }\n\n      throw new TypeError(`Unexpected routingKey '${util.inspect(userRoutingKey)}' provided. ` +\n        `Expected Buffer, Array<Buffer>, Token, or TokenRange.`);\n    }\n\n    // If no params are present, return as routing key cannot be determined.\n    if (!params || params.length === 0) {\n      return;\n    }\n\n    let routingIndexes = execOptions.getRoutingIndexes();\n    if (execOptions.getRoutingNames()) {\n      routingIndexes = execOptions.getRoutingNames().map(k => keys[k]);\n    }\n    if (!routingIndexes) {\n      return;\n    }\n\n    const parts = [];\n    const hints = execOptions.getHints() || utils.emptyArray;\n\n    const encodeParam = !keys ?\n      (i => this.encode(params[i], hints[i])) :\n      (i => this.encode(params[i].value, hints[i]));\n\n    try {\n      totalLength = this._encodeRoutingKeyParts(parts, routingIndexes, encodeParam);\n    } catch (e) {\n      // There was an error encoding a parameter that is part of the routing key,\n      // ignore now to fail afterwards\n    }\n\n    if (totalLength === 0) {\n      return;\n    }\n\n    execOptions.setRoutingKey(concatRoutingKey(parts, totalLength));\n  };\n\n  /**\n   * Sets the routing key in the options based on the prepared statement metadata.\n   * @param {Object} meta Prepared metadata\n   * @param {Array} params Array of parameters\n   * @param {ExecutionOptions} execOptions\n   * @throws TypeError\n   * @internal\n   * @ignore\n   */\n  this.setRoutingKeyFromMeta = function (meta, params, execOptions) {\n    const routingIndexes = execOptions.getRoutingIndexes();\n    if (!routingIndexes) {\n      return;\n    }\n    const parts = new Array(routingIndexes.length);\n    const encodeParam = i => {\n      const columnInfo = meta.columns[i];\n      return this.encode(params[i], columnInfo ? columnInfo.type : null);\n    };\n\n    let totalLength = 0;\n\n    try {\n      totalLength = this._encodeRoutingKeyParts(parts, routingIndexes, encodeParam);\n    } catch (e) {\n      // There was an error encoding a parameter that is part of the routing key,\n      // ignore now to fail afterwards\n    }\n\n    if (totalLength === 0) {\n      return;\n    }\n\n    execOptions.setRoutingKey(concatRoutingKey(parts, totalLength));\n  };\n\n  /**\n   * @param {Array} parts\n   * @param {Array} routingIndexes\n   * @param {Function} encodeParam\n   * @returns {Number} The total length\n   * @private\n   */\n  this._encodeRoutingKeyParts = function (parts, routingIndexes, encodeParam) {\n    let totalLength = 0;\n    for (let i = 0; i < routingIndexes.length; i++) {\n      const paramIndex = routingIndexes[i];\n      if (paramIndex === undefined) {\n        // Bad input from the user, ignore\n        return 0;\n      }\n\n      const item = encodeParam(paramIndex);\n      if (item === null || item === undefined || item === types.unset) {\n        // The encoded partition key should an instance of Buffer\n        // Let it fail later in the pipeline for null/undefined parameter values\n        return 0;\n      }\n\n      // Per each part of the routing key, 3 extra bytes are needed\n      totalLength += item.length + 3;\n      parts[i] = item;\n    }\n    return totalLength;\n  };\n\n  /**\n   * Parses a CQL name string into data type information\n   * @param {String} keyspace\n   * @param {String} typeName\n   * @param {Number} startIndex\n   * @param {Number|null} length\n   * @param {Function} udtResolver\n   * @returns {Promise<{err, info, options}>} callback Callback invoked with err and  {{code: number, info: Object|Array|null, options: {frozen: Boolean}}}\n   * @internal\n   * @ignore\n   */\n  this.parseTypeName = async function (keyspace, typeName, startIndex, length, udtResolver) {\n    startIndex = startIndex || 0;\n    if (!length) {\n      length = typeName.length;\n    }\n\n    const dataType = {\n      code: 0,\n      info: null,\n      options: {\n        frozen: false\n      }\n    };\n\n    let innerTypes;\n\n    if (typeName.indexOf(\"'\", startIndex) === startIndex) {\n      //If quoted, this is a custom type.\n      dataType.info = typeName.substr(startIndex+1, length-2);\n      return dataType;\n    }\n\n    if (!length) {\n      length = typeName.length;\n    }\n\n    if (typeName.indexOf(cqlNames.frozen, startIndex) === startIndex) {\n      //Remove the frozen token\n      startIndex += cqlNames.frozen.length + 1;\n      length -= cqlNames.frozen.length + 2;\n      dataType.options.frozen = true;\n    }\n\n    if (typeName.indexOf(cqlNames.list, startIndex) === startIndex) {\n      //move cursor across the name and bypass the angle brackets\n      startIndex += cqlNames.list.length + 1;\n      length -= cqlNames.list.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length, '<', '>');\n\n      if (innerTypes.length !== 1) {\n        throw new TypeError('Not a valid type ' + typeName);\n      }\n\n      dataType.code = dataTypes.list;\n      dataType.info = await this.parseTypeName(keyspace, innerTypes[0], 0, null, udtResolver);\n      return dataType;\n    }\n\n    if (typeName.indexOf(cqlNames.set, startIndex) === startIndex) {\n      //move cursor across the name and bypass the angle brackets\n      startIndex += cqlNames.set.length + 1;\n      length -= cqlNames.set.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length, '<', '>');\n\n      if (innerTypes.length !== 1) {\n        throw new TypeError('Not a valid type ' + typeName);\n      }\n\n      dataType.code = dataTypes.set;\n      dataType.info = await this.parseTypeName(keyspace, innerTypes[0], 0, null, udtResolver);\n      return dataType;\n    }\n\n    if (typeName.indexOf(cqlNames.map, startIndex) === startIndex) {\n      //move cursor across the name and bypass the angle brackets\n      startIndex += cqlNames.map.length + 1;\n      length -= cqlNames.map.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length, '<', '>');\n\n      //It should contain the key and value types\n      if (innerTypes.length !== 2) {\n        throw new TypeError('Not a valid type ' + typeName);\n      }\n\n      dataType.code = dataTypes.map;\n      dataType.info = await this._parseChildTypes(keyspace, innerTypes, udtResolver);\n      return dataType;\n    }\n\n    if (typeName.indexOf(cqlNames.tuple, startIndex) === startIndex) {\n      //move cursor across the name and bypass the angle brackets\n      startIndex += cqlNames.tuple.length + 1;\n      length -= cqlNames.tuple.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length, '<', '>');\n\n      if (innerTypes.length < 1) {\n        throw new TypeError('Not a valid type ' + typeName);\n      }\n\n      dataType.code = dataTypes.tuple;\n      dataType.info = await this._parseChildTypes(keyspace, innerTypes, udtResolver);\n      return dataType;\n    }\n\n    const quoted = typeName.indexOf('\"', startIndex) === startIndex;\n    if (quoted) {\n      // Remove quotes\n      startIndex++;\n      length -= 2;\n    }\n\n    // Quick check if its a single type\n    if (startIndex > 0) {\n      typeName = typeName.substr(startIndex, length);\n    }\n\n    // Un-escape double quotes if quoted.\n    if (quoted) {\n      typeName = typeName.replace('\"\"', '\"');\n    }\n\n    const typeCode = dataTypes[typeName];\n    if (typeof typeCode === 'number') {\n      dataType.code = typeCode;\n      return dataType;\n    }\n\n    if (typeName === cqlNames.duration) {\n      dataType.info = customTypeNames.duration;\n      return dataType;\n    }\n\n    if (typeName === cqlNames.empty) {\n      // Set as custom\n      dataType.info = 'empty';\n      return dataType;\n    }\n\n    const udtInfo = await udtResolver(keyspace, typeName);\n    if (udtInfo) {\n      dataType.code = dataTypes.udt;\n      dataType.info = udtInfo;\n      return dataType;\n    }\n\n    throw new TypeError('Not a valid type \"' + typeName + '\"');\n  };\n\n  /**\n   * @param {String} keyspace\n   * @param {Array} typeNames\n   * @param {Function} udtResolver\n   * @returns {Promise}\n   * @private\n   */\n  this._parseChildTypes = function (keyspace, typeNames, udtResolver) {\n    return Promise.all(typeNames.map(name => this.parseTypeName(keyspace, name.trim(), 0, null, udtResolver)));\n  };\n\n  /**\n   * Parses a Cassandra fully-qualified class name string into data type information\n   * @param {String} typeName\n   * @param {Number} [startIndex]\n   * @param {Number} [length]\n   * @throws TypeError\n   * @returns {{code: number, info: Object|Array|null, options: {frozen: Boolean, reversed: Boolean}}}\n   * @internal\n   * @ignore\n   */\n  this.parseFqTypeName = function (typeName, startIndex, length) {\n    const dataType = {\n      code: 0,\n      info: null,\n      options: {\n        reversed: false,\n        frozen: false\n      }\n    };\n    startIndex = startIndex || 0;\n    let innerTypes;\n    if (!length) {\n      length = typeName.length;\n    }\n    if (length > complexTypeNames.reversed.length && typeName.indexOf(complexTypeNames.reversed) === startIndex) {\n      //Remove the reversed token\n      startIndex += complexTypeNames.reversed.length + 1;\n      length -= complexTypeNames.reversed.length + 2;\n      dataType.options.reversed = true;\n    }\n    if (length > complexTypeNames.frozen.length &&\n        typeName.indexOf(complexTypeNames.frozen, startIndex) === startIndex) {\n      //Remove the frozen token\n      startIndex += complexTypeNames.frozen.length + 1;\n      length -= complexTypeNames.frozen.length + 2;\n      dataType.options.frozen = true;\n    }\n    if (typeName === complexTypeNames.empty) {\n      //set as custom\n      dataType.info = 'empty';\n      return dataType;\n    }\n    //Quick check if its a single type\n    if (length <= singleFqTypeNamesLength) {\n      if (startIndex > 0) {\n        typeName = typeName.substr(startIndex, length);\n      }\n      const typeCode = singleTypeNames[typeName];\n      if (typeof typeCode === 'number') {\n        dataType.code = typeCode;\n        return dataType;\n      }\n      throw new TypeError('Not a valid type \"' + typeName + '\"');\n    }\n    if (typeName.indexOf(complexTypeNames.list, startIndex) === startIndex) {\n      //Its a list\n      //org.apache.cassandra.db.marshal.ListType(innerType)\n      //move cursor across the name and bypass the parenthesis\n      startIndex += complexTypeNames.list.length + 1;\n      length -= complexTypeNames.list.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length);\n      if (innerTypes.length !== 1) {\n        throw new TypeError('Not a valid type ' + typeName);\n      }\n      dataType.code = dataTypes.list;\n      dataType.info = this.parseFqTypeName(innerTypes[0]);\n      return dataType;\n    }\n    if (typeName.indexOf(complexTypeNames.set, startIndex) === startIndex) {\n      //Its a set\n      //org.apache.cassandra.db.marshal.SetType(innerType)\n      //move cursor across the name and bypass the parenthesis\n      startIndex += complexTypeNames.set.length + 1;\n      length -= complexTypeNames.set.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length);\n      if (innerTypes.length !== 1)\n      {\n        throw new TypeError('Not a valid type ' + typeName);\n      }\n      dataType.code = dataTypes.set;\n      dataType.info = this.parseFqTypeName(innerTypes[0]);\n      return dataType;\n    }\n    if (typeName.indexOf(complexTypeNames.map, startIndex) === startIndex) {\n      //org.apache.cassandra.db.marshal.MapType(keyType,valueType)\n      //move cursor across the name and bypass the parenthesis\n      startIndex += complexTypeNames.map.length + 1;\n      length -= complexTypeNames.map.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length);\n      //It should contain the key and value types\n      if (innerTypes.length !== 2) {\n        throw new TypeError('Not a valid type ' + typeName);\n      }\n      dataType.code = dataTypes.map;\n      dataType.info = [this.parseFqTypeName(innerTypes[0]), this.parseFqTypeName(innerTypes[1])];\n      return dataType;\n    }\n    if (typeName.indexOf(complexTypeNames.udt, startIndex) === startIndex) {\n      //move cursor across the name and bypass the parenthesis\n      startIndex += complexTypeNames.udt.length + 1;\n      length -= complexTypeNames.udt.length + 2;\n      return this._parseUdtName(typeName, startIndex, length);\n    }\n    if (typeName.indexOf(complexTypeNames.tuple, startIndex) === startIndex) {\n      //move cursor across the name and bypass the parenthesis\n      startIndex += complexTypeNames.tuple.length + 1;\n      length -= complexTypeNames.tuple.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length);\n      if (innerTypes.length < 1) {\n        throw new TypeError('Not a valid type ' + typeName);\n      }\n      dataType.code = dataTypes.tuple;\n      dataType.info = innerTypes.map(x => this.parseFqTypeName(x));\n      return dataType;\n    }\n\n    // Assume custom type if cannot be parsed up to this point.\n    dataType.info = typeName.substr(startIndex, length);\n    return dataType;\n  };\n  /**\n   * Parses type names with composites\n   * @param {String} typesString\n   * @returns {{types: Array, isComposite: Boolean, hasCollections: Boolean}}\n   * @internal\n   * @ignore\n   */\n  this.parseKeyTypes = function (typesString) {\n    let i = 0;\n    let length = typesString.length;\n    const isComposite = typesString.indexOf(complexTypeNames.composite) === 0;\n    if (isComposite) {\n      i = complexTypeNames.composite.length + 1;\n      length--;\n    }\n    const types = [];\n    let startIndex = i;\n    let nested = 0;\n    let inCollectionType = false;\n    let hasCollections = false;\n    //as collection types are not allowed, it is safe to split by ,\n    while (++i < length) {\n      switch (typesString[i]) {\n        case ',':\n          if (nested > 0) {\n            break;\n          }\n          if (inCollectionType) {\n            //remove type id\n            startIndex = typesString.indexOf(':', startIndex) + 1;\n          }\n          types.push(typesString.substring(startIndex, i));\n          startIndex = i + 1;\n          break;\n        case '(':\n          if (nested === 0 && typesString.indexOf(complexTypeNames.collection, startIndex) === startIndex) {\n            inCollectionType = true;\n            hasCollections = true;\n            //skip collection type\n            i++;\n            startIndex = i;\n            break;\n          }\n          nested++;\n          break;\n        case ')':\n          if (inCollectionType && nested === 0){\n            types.push(typesString.substring(typesString.indexOf(':', startIndex) + 1, i));\n            startIndex = i + 1;\n            break;\n          }\n          nested--;\n          break;\n      }\n    }\n    if (startIndex < length) {\n      types.push(typesString.substring(startIndex, length));\n    }\n    return {\n      types: types.map(name => this.parseFqTypeName(name)),\n      hasCollections: hasCollections,\n      isComposite: isComposite\n    };\n  };\n  this._parseUdtName = function (typeName, startIndex, length) {\n    const udtParams = parseParams(typeName, startIndex, length);\n    if (udtParams.length < 2) {\n      //It should contain at least the keyspace, name of the udt and a type\n      throw new TypeError('Not a valid type ' + typeName);\n    }\n    const dataType = {\n      code: dataTypes.udt,\n      info: null\n    };\n    const udtInfo = {\n      keyspace: udtParams[0],\n      name: utils.allocBufferFromString(udtParams[1], 'hex').toString(),\n      fields: []\n    };\n    for (let i = 2; i < udtParams.length; i++) {\n      const p = udtParams[i];\n      const separatorIndex = p.indexOf(':');\n      const fieldType = this.parseFqTypeName(p, separatorIndex + 1, p.length - (separatorIndex + 1));\n      udtInfo.fields.push({\n        name: utils.allocBufferFromString(p.substr(0, separatorIndex), 'hex').toString(),\n        type: fieldType\n      });\n    }\n    dataType.info = udtInfo;\n    return dataType;\n  };\n}\n\n/**\n * Sets the encoder and decoder methods for this instance\n * @private\n */\nfunction setEncoders() {\n  this.decoders = {\n    [dataTypes.custom]: this.decodeCustom,\n    [dataTypes.ascii]: this.decodeAsciiString,\n    [dataTypes.bigint]: this.decodeLong,\n    [dataTypes.blob]: this.decodeBlob,\n    [dataTypes.boolean]: this.decodeBoolean,\n    [dataTypes.counter]: this.decodeLong,\n    [dataTypes.decimal]: this.decodeDecimal,\n    [dataTypes.double]: this.decodeDouble,\n    [dataTypes.float]: this.decodeFloat,\n    [dataTypes.int]: this.decodeInt,\n    [dataTypes.text]: this.decodeUtf8String,\n    [dataTypes.timestamp]: this.decodeTimestamp,\n    [dataTypes.uuid]: this.decodeUuid,\n    [dataTypes.varchar]: this.decodeUtf8String,\n    [dataTypes.varint]: this.decodeVarint,\n    [dataTypes.timeuuid]: this.decodeTimeUuid,\n    [dataTypes.inet]: this.decodeInet,\n    [dataTypes.date]: this.decodeDate,\n    [dataTypes.time]: this.decodeTime,\n    [dataTypes.smallint]: this.decodeSmallint,\n    [dataTypes.tinyint]: this.decodeTinyint,\n    [dataTypes.duration]: decodeDuration,\n    [dataTypes.list]: this.decodeList,\n    [dataTypes.map]: this.decodeMap,\n    [dataTypes.set]: this.decodeSet,\n    [dataTypes.udt]: this.decodeUdt,\n    [dataTypes.tuple]: this.decodeTuple\n  };\n\n  this.encoders = {\n    [dataTypes.custom]: this.encodeCustom,\n    [dataTypes.ascii]: this.encodeAsciiString,\n    [dataTypes.bigint]: this.encodeLong,\n    [dataTypes.blob]: this.encodeBlob,\n    [dataTypes.boolean]: this.encodeBoolean,\n    [dataTypes.counter]: this.encodeLong,\n    [dataTypes.decimal]: this.encodeDecimal,\n    [dataTypes.double]: this.encodeDouble,\n    [dataTypes.float]: this.encodeFloat,\n    [dataTypes.int]: this.encodeInt,\n    [dataTypes.text]: this.encodeUtf8String,\n    [dataTypes.timestamp]: this.encodeTimestamp,\n    [dataTypes.uuid]: this.encodeUuid,\n    [dataTypes.varchar]: this.encodeUtf8String,\n    [dataTypes.varint]: this.encodeVarint,\n    [dataTypes.timeuuid]: this.encodeUuid,\n    [dataTypes.inet]: this.encodeInet,\n    [dataTypes.date]: this.encodeDate,\n    [dataTypes.time]: this.encodeTime,\n    [dataTypes.smallint]: this.encodeSmallint,\n    [dataTypes.tinyint]: this.encodeTinyint,\n    [dataTypes.duration]: encodeDuration,\n    [dataTypes.list]: this.encodeList,\n    [dataTypes.map]: this.encodeMap,\n    [dataTypes.set]: this.encodeSet,\n    [dataTypes.udt]: this.encodeUdt,\n    [dataTypes.tuple]: this.encodeTuple\n  };\n}\n\n/**\n * Decodes Cassandra bytes into Javascript values.\n * <p>\n * This is part of an <b>experimental</b> API, this can be changed future releases.\n * </p>\n * @param {Buffer} buffer Raw buffer to be decoded.\n * @param {Object} type An object containing the data type <code>code</code> and <code>info</code>.\n * @param {Number} type.code Type code.\n * @param {Object} [type.info] Additional information on the type for complex / nested types.\n */\nEncoder.prototype.decode = function (buffer, type) {\n  if (buffer === null || (buffer.length === 0 && !zeroLengthTypesSupported.has(type.code))) {\n    return null;\n  }\n\n  const decoder = this.decoders[type.code];\n\n  if (!decoder) {\n    throw new Error('Unknown data type: ' + type.code);\n  }\n\n  return decoder.call(this, buffer, type.info);\n};\n\n/**\n * Encodes Javascript types into Buffer according to the Cassandra protocol.\n * <p>\n * This is part of an <b>experimental</b> API, this can be changed future releases.\n * </p>\n * @param {*} value The value to be converted.\n * @param {{code: number, info: *|Object}|String|Number} [typeInfo] The type information.\n * <p>It can be either a:</p>\n * <ul>\n *   <li>A <code>String</code> representing the data type.</li>\n *   <li>A <code>Number</code> with one of the values of {@link module:types~dataTypes dataTypes}.</li>\n *   <li>An <code>Object</code> containing the <code>type.code</code> as one of the values of\n *   {@link module:types~dataTypes dataTypes} and <code>type.info</code>.\n *   </li>\n * </ul>\n * @returns {Buffer}\n * @throws {TypeError} When there is an encoding error\n */\nEncoder.prototype.encode = function (value, typeInfo) {\n  if (value === undefined) {\n    value = this.encodingOptions.useUndefinedAsUnset && this.protocolVersion >= 4 ? types.unset : null;\n  }\n\n  if (value === types.unset) {\n    if (!types.protocolVersion.supportsUnset(this.protocolVersion)) {\n      throw new TypeError('Unset value can not be used for this version of Cassandra, protocol version: ' +\n        this.protocolVersion);\n    }\n\n    return value;\n  }\n\n  if (value === null || value instanceof Buffer) {\n    return value;\n  }\n\n  /** @type {{code: Number, info: object}} */\n  let type = {\n    code: null,\n    info: null\n  };\n\n  if (typeInfo) {\n    if (typeof typeInfo === 'number') {\n      type.code = typeInfo;\n    }\n    else if (typeof typeInfo === 'string') {\n      type = dataTypes.getByName(typeInfo);\n    }\n    if (typeof typeInfo.code === 'number') {\n      type.code = typeInfo.code;\n      type.info = typeInfo.info;\n    }\n    if (typeof type.code !== 'number') {\n      throw new TypeError('Type information not valid, only String and Number values are valid hints');\n    }\n  }\n  else {\n    //Lets guess\n    type = Encoder.guessDataType(value);\n    if (!type) {\n      throw new TypeError('Target data type could not be guessed, you should use prepared statements for accurate type mapping. Value: ' + util.inspect(value));\n    }\n  }\n\n  const encoder = this.encoders[type.code];\n\n  if (!encoder) {\n    throw new Error('Type not supported ' + type.code);\n  }\n\n  return encoder.call(this, value, type.info);\n};\n\n/**\n * Try to guess the Cassandra type to be stored, based on the javascript value type\n * @param value\n * @returns {{code: number, info: object}|null}\n * @ignore\n * @internal\n */\nEncoder.guessDataType = function (value) {\n  let code = null;\n  let info = null;\n  const esTypeName = (typeof value);\n  if (esTypeName === 'number') {\n    code = dataTypes.double;\n  }\n  else if (esTypeName === 'string') {\n    code = dataTypes.text;\n    if (value.length === 36 && uuidRegex.test(value)){\n      code = dataTypes.uuid;\n    }\n  }\n  else if (esTypeName === 'boolean') {\n    code = dataTypes.boolean;\n  }\n  else if (value instanceof Buffer) {\n    code = dataTypes.blob;\n  }\n  else if (value instanceof Date) {\n    code = dataTypes.timestamp;\n  }\n  else if (value instanceof Long) {\n    code = dataTypes.bigint;\n  }\n  else if (value instanceof Integer) {\n    code = dataTypes.varint;\n  }\n  else if (value instanceof BigDecimal) {\n    code = dataTypes.decimal;\n  }\n  else if (value instanceof types.Uuid) {\n    code = dataTypes.uuid;\n  }\n  else if (value instanceof types.InetAddress) {\n    code = dataTypes.inet;\n  }\n  else if (value instanceof types.Tuple) {\n    code = dataTypes.tuple;\n  }\n  else if (value instanceof types.LocalDate) {\n    code = dataTypes.date;\n  }\n  else if (value instanceof types.LocalTime) {\n    code = dataTypes.time;\n  }\n  else if (value instanceof types.Duration) {\n    code = dataTypes.custom;\n    info = customTypeNames.duration;\n  }\n  else if (Array.isArray(value)) {\n    code = dataTypes.list;\n  }\n  else if (value instanceof Geometry) {\n    code = dataTypes.custom;\n    if (value instanceof LineString) {\n      info = customTypeNames.lineString;\n    } else if (value instanceof Point) {\n      info = customTypeNames.point;\n    } else if (value instanceof Polygon) {\n      info = customTypeNames.polygon;\n    }\n  }\n  else if (value instanceof DateRange) {\n    code = dataTypes.custom;\n    info = customTypeNames.dateRange;\n  }\n\n  if (code === null) {\n    return null;\n  }\n  return { code: code, info: info };\n};\n\n/**\n * Gets a buffer containing with the bytes (BE) representing the collection length for protocol v2 and below\n * @param {Buffer|Number} value\n * @returns {Buffer}\n * @private\n */\nfunction getLengthBufferV2(value) {\n  if (!value) {\n    return buffers.int16Zero;\n  }\n  const lengthBuffer = utils.allocBufferUnsafe(2);\n  if (typeof value === 'number') {\n    lengthBuffer.writeUInt16BE(value, 0);\n  }\n  else {\n    lengthBuffer.writeUInt16BE(value.length, 0);\n  }\n  return lengthBuffer;\n}\n\n/**\n * Gets a buffer containing with the bytes (BE) representing the collection length for protocol v3 and above\n * @param {Buffer|Number} value\n * @returns {Buffer}\n * @private\n */\nfunction getLengthBufferV3(value) {\n  if (!value) {\n    return buffers.int32Zero;\n  }\n  const lengthBuffer = utils.allocBufferUnsafe(4);\n  if (typeof value === 'number') {\n    lengthBuffer.writeInt32BE(value, 0);\n  }\n  else {\n    lengthBuffer.writeInt32BE(value.length, 0);\n  }\n  return lengthBuffer;\n}\n\n/**\n * @param {Buffer} buffer\n * @private\n */\nfunction handleBufferCopy(buffer) {\n  if (buffer === null) {\n    return null;\n  }\n  return utils.copyBuffer(buffer);\n}\n\n/**\n * @param {Buffer} buffer\n * @private\n */\nfunction handleBufferRef(buffer) {\n  return buffer;\n}\n/**\n * Decodes collection length for protocol v3 and above\n * @param bytes\n * @param offset\n * @returns {Number}\n * @private\n */\nfunction decodeCollectionLengthV3(bytes, offset) {\n  return bytes.readInt32BE(offset);\n}\n/**\n * Decodes collection length for protocol v2 and below\n * @param bytes\n * @param offset\n * @returns {Number}\n * @private\n */\nfunction decodeCollectionLengthV2(bytes, offset) {\n  return bytes.readUInt16BE(offset);\n}\n\nfunction decodeDuration(bytes) {\n  return types.Duration.fromBuffer(bytes);\n}\n\nfunction encodeDuration(value) {\n  if (!(value instanceof types.Duration)) {\n    throw new TypeError('Not a valid duration, expected Duration/Buffer obtained ' + util.inspect(value));\n  }\n  return value.toBuffer();\n}\n\n/**\n * @private\n * @param {Buffer} buffer\n */\nfunction decodeLineString(buffer) {\n  return LineString.fromBuffer(buffer);\n}\n\n/**\n * @private\n * @param {LineString} value\n */\nfunction encodeLineString(value) {\n  return value.toBuffer();\n}\n\n/**\n * @private\n * @param {Buffer} buffer\n */\nfunction decodePoint(buffer) {\n  return Point.fromBuffer(buffer);\n}\n\n/**\n * @private\n * @param {LineString} value\n */\nfunction encodePoint(value) {\n  return value.toBuffer();\n}\n\n/**\n * @private\n * @param {Buffer} buffer\n */\nfunction decodePolygon(buffer) {\n  return Polygon.fromBuffer(buffer);\n}\n\n/**\n * @private\n * @param {Polygon} value\n */\nfunction encodePolygon(value) {\n  return value.toBuffer();\n}\n\nfunction decodeDateRange(buffer) {\n  return DateRange.fromBuffer(buffer);\n}\n\n/**\n * @private\n * @param {DateRange} value\n */\nfunction encodeDateRange(value) {\n  return value.toBuffer();\n}\n\n/**\n * @param {String} value\n * @param {Number} startIndex\n * @param {Number} length\n * @param {String} [open]\n * @param {String} [close]\n * @returns {Array}\n * @private\n */\nfunction parseParams(value, startIndex, length, open, close) {\n  open = open || '(';\n  close = close || ')';\n  const types = [];\n  let paramStart = startIndex;\n  let level = 0;\n  for (let i = startIndex; i < startIndex + length; i++) {\n    const c = value[i];\n    if (c === open) {\n      level++;\n    }\n    if (c === close) {\n      level--;\n    }\n    if (level === 0 && c === ',') {\n      types.push(value.substr(paramStart, i - paramStart));\n      paramStart = i + 1;\n    }\n  }\n  //Add the last one\n  types.push(value.substr(paramStart, length - (paramStart - startIndex)));\n  return types;\n}\n\n/**\n * @param {Array.<Buffer>} parts\n * @param {Number} totalLength\n * @returns {Buffer}\n * @private\n */\nfunction concatRoutingKey(parts, totalLength) {\n  if (totalLength === 0) {\n    return null;\n  }\n  if (parts.length === 1) {\n    return parts[0];\n  }\n  const routingKey = utils.allocBufferUnsafe(totalLength);\n  let offset = 0;\n  for (let i = 0; i < parts.length; i++) {\n    const item = parts[i];\n    routingKey.writeUInt16BE(item.length, offset);\n    offset += 2;\n    item.copy(routingKey, offset);\n    offset += item.length;\n    routingKey[offset] = 0;\n    offset++;\n  }\n  return routingKey;\n}\n\nmodule.exports = Encoder;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst utils = require('./utils');\nconst types = require('./types');\nconst errors = require('./errors');\n\n/**\n * Information on the formatting of the returned rows\n */\nconst resultFlag = {\n  globalTablesSpec:   0x0001,\n  hasMorePages:       0x0002,\n  noMetadata:         0x0004,\n  metadataChanged:    0x0008,\n  continuousPaging: 0x40000000,\n  lastContinuousPage: 0x80000000,\n};\n\n// templates for derived error messages.\nconst _writeTimeoutQueryMessage = 'Server timeout during write query at consistency %s (%d peer(s) acknowledged the write over %d required)';\nconst _writeTimeoutBatchLogMessage = 'Server timeout during batchlog write at consistency %s (%d peer(s) acknowledged the write over %d required)';\nconst _writeFailureMessage = 'Server failure during write query at consistency %s (%d responses were required but only %d replicas responded, %d failed)';\nconst _unavailableMessage = 'Not enough replicas available for query at consistency %s (%d required but only %d alive)';\nconst _readTimeoutMessage = 'Server timeout during read query at consistency %s (%s)';\nconst _readFailureMessage = 'Server failure during read query at consistency %s (%d responses were required but only %d replicas responded, %d failed)';\n\n/**\n * Buffer forward reader of CQL binary frames\n * @param {FrameHeader} header\n * @param {Buffer} body\n * @param {Number} [offset]\n */\nclass FrameReader {\n\n  /**\n   * Creates a new instance of the reader\n   * @param {FrameHeader} header\n   * @param {Buffer} body\n   * @param {Number} [offset]\n   */\n  constructor(header, body, offset) {\n    this.header = header;\n    this.opcode = header.opcode;\n    this.offset = offset || 0;\n    this.buf = body;\n  }\n\n  remainingLength() {\n    return this.buf.length - this.offset;\n  }\n\n  getBuffer() {\n    return this.buf;\n  }\n\n  /**\n   * Slices the underlining buffer\n   * @param {Number} begin\n   * @param {Number} [end]\n   * @returns {Buffer}\n   */\n  slice(begin, end) {\n    if (typeof end === 'undefined') {\n      end = this.buf.length;\n    }\n    return this.buf.slice(begin, end);\n  }\n\n  /**\n   * Modifies the underlying buffer, it concatenates the given buffer with the original (internalBuffer = concat(bytes, internalBuffer)\n   */\n  unshift(bytes) {\n    if (this.offset > 0) {\n      throw new Error('Can not modify the underlying buffer if already read');\n    }\n    this.buf = Buffer.concat([bytes, this.buf], bytes.length + this.buf.length);\n  }\n\n  /**\n   * Reads any number of bytes and moves the offset.\n   * if length not provided or it's larger than the remaining bytes, reads to end.\n   * @param length\n   * @returns {Buffer}\n   */\n  read(length) {\n    let end = this.buf.length;\n    if (typeof length !== 'undefined' && this.offset + length < this.buf.length) {\n      end = this.offset + length;\n    }\n    const bytes = this.slice(this.offset, end);\n    this.offset = end;\n    return bytes;\n  }\n\n  /**\n   * Moves the reader cursor to the end\n   */\n  toEnd() {\n    this.offset = this.buf.length;\n  }\n\n  /**\n   * Reads a BE Int and moves the offset\n   * @returns {Number}\n   */\n  readInt() {\n    const result = this.buf.readInt32BE(this.offset);\n    this.offset += 4;\n    return result;\n  }\n\n  /** @returns {Number} */\n  readShort() {\n    const result = this.buf.readUInt16BE(this.offset);\n    this.offset += 2;\n    return result;\n  }\n\n  readByte() {\n    const result = this.buf.readUInt8(this.offset);\n    this.offset += 1;\n    return result;\n  }\n\n  readString() {\n    const length = this.readShort();\n    this.checkOffset(length);\n    const result = this.buf.toString('utf8', this.offset, this.offset + length);\n    this.offset += length;\n    return result;\n  }\n\n  /**\n   * Checks that the new length to read is within the range of the buffer length. Throws a RangeError if not.\n   * @param {Number} newLength\n   */\n  checkOffset(newLength) {\n    if (this.offset + newLength > this.buf.length) {\n      const err = new RangeError('Trying to access beyond buffer length');\n      err.expectedLength = newLength;\n      throw err;\n    }\n  }\n\n  /**\n   * Reads a protocol string list\n   * @returns {Array}\n   */\n  readStringList() {\n    const length = this.readShort();\n    const list = new Array(length);\n    for (let i = 0; i < length; i++) {\n      list[i] = this.readString();\n    }\n    return list;\n  }\n\n  /**\n   * Reads the amount of bytes that the field has and returns them (slicing them).\n   * @returns {Buffer}\n   */\n  readBytes() {\n    const length = this.readInt();\n    if (length < 0) {\n      return null;\n    }\n    this.checkOffset(length);\n    return this.read(length);\n  }\n\n  readShortBytes() {\n    const length = this.readShort();\n    if (length < 0) {\n      return null;\n    }\n    this.checkOffset(length);\n    return this.read(length);\n  }\n\n  /**\n   * Reads an associative array of strings as keys and bytes as values\n   * @param {Number} length\n   * @param {Function} keyFn\n   * @param {Function} valueFn\n   * @returns {Object}\n   */\n  readMap(length, keyFn, valueFn) {\n    if (length < 0) {\n      return null;\n    }\n    const map = {};\n    for (let i = 0; i < length; i++) {\n      map[keyFn.call(this)] = valueFn.call(this);\n    }\n    return map;\n  }\n\n  /**\n   * Reads an associative array of strings as keys and string lists as values\n   * @returns {Object}\n   */\n  readStringMultiMap() {\n    //A [short] n, followed by n pair <k><v> where <k> is a\n    //[string] and <v> is a [string[]].\n    const length = this.readShort();\n    if (length < 0) {\n      return null;\n    }\n    const map = {};\n    for (let i = 0; i < length; i++) {\n      map[this.readString()] = this.readStringList();\n    }\n    return map;\n  }\n\n  /**\n   * Reads a data type definition\n   * @returns {{code: Number, info: Object|null}} An array of 2 elements\n   */\n  readType() {\n    let i;\n    const type = {\n      code: this.readShort(),\n      type: null\n    };\n    switch (type.code) {\n      case types.dataTypes.custom:\n        type.info = this.readString();\n        break;\n      case types.dataTypes.list:\n      case types.dataTypes.set:\n        type.info = this.readType();\n        break;\n      case types.dataTypes.map:\n        type.info = [this.readType(), this.readType()];\n        break;\n      case types.dataTypes.udt:\n        type.info = {\n          keyspace: this.readString(),\n          name: this.readString(),\n          fields: new Array(this.readShort())\n        };\n        for (i = 0; i < type.info.fields.length; i++) {\n          type.info.fields[i] = {\n            name: this.readString(),\n            type: this.readType()\n          };\n        }\n        break;\n      case types.dataTypes.tuple:\n        type.info = new Array(this.readShort());\n        for (i = 0; i < type.info.length; i++) {\n          type.info[i] = this.readType();\n        }\n        break;\n    }\n    return type;\n  }\n\n  /**\n   * Reads an Ip address and port\n   * @returns {{address: exports.InetAddress, port: Number}}\n   */\n  readInet() {\n    const length = this.readByte();\n    const address = this.read(length);\n    return { address: new types.InetAddress(address), port: this.readInt() };\n  }\n\n  /**\n   * Reads an Ip address\n   * @returns {InetAddress}\n   */\n  readInetAddress() {\n    const length = this.readByte();\n    return new types.InetAddress(this.read(length));\n  }\n\n  /**\n   * Reads the body bytes corresponding to the flags\n   * @returns {{traceId: Uuid, warnings: Array, customPayload}}\n   * @throws {RangeError}\n   */\n  readFlagsInfo() {\n    if (this.header.flags === 0) {\n      return utils.emptyObject;\n    }\n    const result = {};\n    if (this.header.flags & types.frameFlags.tracing) {\n      this.checkOffset(16);\n      result.traceId = new types.Uuid(utils.copyBuffer(this.read(16)));\n    }\n    if (this.header.flags & types.frameFlags.warning) {\n      result.warnings = this.readStringList();\n    }\n    if (this.header.flags & types.frameFlags.customPayload) {\n      // Custom payload is a Map<string, Buffer>\n      result.customPayload = this.readMap(this.readShort(), this.readString, this.readBytes);\n    }\n    return result;\n  }\n\n  /**\n   * Reads the metadata from a row or a prepared result response\n   * @param {Number} kind\n   * @returns {Object}\n   * @throws {RangeError}\n   */\n  readMetadata(kind) {\n    let i;\n    //Determines if its a prepared metadata\n    const isPrepared = (kind === types.resultKind.prepared);\n    const meta = {};\n    if (types.protocolVersion.supportsResultMetadataId(this.header.version) && isPrepared) {\n      meta.resultId = utils.copyBuffer(this.readShortBytes());\n    }\n    //as used in Rows and Prepared responses\n    const flags = this.readInt();\n    const columnLength = this.readInt();\n    if (types.protocolVersion.supportsPreparedPartitionKey(this.header.version) && isPrepared) {\n      //read the pk columns\n      meta.partitionKeys = new Array(this.readInt());\n      for (i = 0; i < meta.partitionKeys.length; i++) {\n        meta.partitionKeys[i] = this.readShort();\n      }\n    }\n    if (flags & resultFlag.hasMorePages) {\n      meta.pageState = utils.copyBuffer(this.readBytes());\n    }\n    if (flags & resultFlag.metadataChanged) {\n      meta.newResultId = utils.copyBuffer(this.readShortBytes());\n    }\n    if (flags & resultFlag.continuousPaging) {\n      meta.continuousPageIndex = this.readInt();\n      meta.lastContinuousPage = !!(flags & resultFlag.lastContinuousPage);\n    }\n    if (flags & resultFlag.globalTablesSpec) {\n      meta.global_tables_spec = true;\n      meta.keyspace = this.readString();\n      meta.table = this.readString();\n    }\n    meta.columns = new Array(columnLength);\n    meta.columnsByName = utils.emptyObject;\n    if (isPrepared) {\n      //for prepared metadata, we will need a index of the columns (param) by name\n      meta.columnsByName = {};\n    }\n    for (i = 0; i < columnLength; i++) {\n      const col = {};\n      if (!meta.global_tables_spec) {\n        col.ksname = this.readString();\n        col.tablename = this.readString();\n      }\n      col.name = this.readString();\n      col.type = this.readType();\n      meta.columns[i] = col;\n      if (isPrepared) {\n        meta.columnsByName[col.name] = i;\n      }\n    }\n    return meta;\n  }\n\n  /**\n   * Reads the error from the frame\n   * @throws {RangeError}\n   * @returns {ResponseError}\n   */\n  readError() {\n    const code = this.readInt();\n    const message = this.readString();\n    const err = new errors.ResponseError(code, message);\n    //read extra info\n    switch (code) {\n      case types.responseErrorCodes.unavailableException:\n        err.consistencies = this.readShort();\n        err.required = this.readInt();\n        err.alive = this.readInt();\n        err.message = util.format(_unavailableMessage, types.consistencyToString[err.consistencies], err.required, err.alive);\n        break;\n      case types.responseErrorCodes.readTimeout:\n      case types.responseErrorCodes.readFailure:\n        err.consistencies = this.readShort();\n        err.received = this.readInt();\n        err.blockFor = this.readInt();\n        if (code === types.responseErrorCodes.readFailure) {\n          if (types.protocolVersion.supportsFailureReasonMap(this.header.version)) {\n            err.failures = this.readInt();\n            err.reasons = this.readMap(err.failures, this.readInetAddress, this.readShort);\n          }\n          else {\n            err.failures = this.readInt();\n          }\n        }\n        err.isDataPresent = this.readByte();\n        if (code === types.responseErrorCodes.readTimeout) {\n          let details;\n          if (err.received < err.blockFor) {\n            details = util.format('%d replica(s) responded over %d required', err.received, err.blockFor);\n          }\n          else if (!err.isDataPresent) {\n            details = 'the replica queried for the data didn\\'t respond';\n          }\n          else {\n            details = 'timeout while waiting for repair of inconsistent replica';\n          }\n          err.message = util.format(_readTimeoutMessage, types.consistencyToString[err.consistencies], details);\n        }\n        else {\n          err.message = util.format(_readFailureMessage, types.consistencyToString[err.consistencies], err.blockFor, err.received, err.failures);\n        }\n        break;\n      case types.responseErrorCodes.writeTimeout:\n      case types.responseErrorCodes.writeFailure:\n        err.consistencies = this.readShort();\n        err.received = this.readInt();\n        err.blockFor = this.readInt();\n        if (code === types.responseErrorCodes.writeFailure) {\n          if (types.protocolVersion.supportsFailureReasonMap(this.header.version)) {\n            err.failures = this.readInt();\n            err.reasons = this.readMap(err.failures, this.readInetAddress, this.readShort);\n          }\n          else {\n            err.failures = this.readInt();\n          }\n        }\n        err.writeType = this.readString();\n        if (code === types.responseErrorCodes.writeTimeout) {\n          const template = err.writeType === 'BATCH_LOG' ? _writeTimeoutBatchLogMessage : _writeTimeoutQueryMessage;\n          err.message = util.format(template, types.consistencyToString[err.consistencies], err.received, err.blockFor);\n        }\n        else {\n          err.message = util.format(_writeFailureMessage, types.consistencyToString[err.consistencies], err.blockFor, err.received, err.failures);\n        }\n        break;\n      case types.responseErrorCodes.unprepared:\n        err.queryId = utils.copyBuffer(this.readShortBytes());\n        break;\n      case types.responseErrorCodes.functionFailure:\n        err.keyspace = this.readString();\n        err.functionName = this.readString();\n        err.argTypes = this.readStringList();\n        break;\n      case types.responseErrorCodes.alreadyExists: {\n        err.keyspace = this.readString();\n        const table = this.readString();\n        if (table.length > 0) {\n          err.table = table;\n        }\n        break;\n      }\n    }\n    return err;\n  }\n\n  /**\n   * Reads an event from Cassandra and returns the detail\n   * @returns {{eventType: String, inet: {address: Buffer, port: Number}}, *}\n   */\n  readEvent() {\n    const eventType = this.readString();\n    switch (eventType) {\n      case types.protocolEvents.topologyChange:\n        return {\n          added: this.readString() === 'NEW_NODE',\n          inet: this.readInet(),\n          eventType: eventType\n        };\n      case types.protocolEvents.statusChange:\n        return {\n          up: this.readString() === 'UP',\n          inet: this.readInet(),\n          eventType: eventType\n        };\n      case types.protocolEvents.schemaChange:\n        return this.parseSchemaChange();\n    }\n    //Forward compatibility\n    return { eventType: eventType };\n  }\n\n  parseSchemaChange() {\n    let result;\n    if (!types.protocolVersion.supportsSchemaChangeFullMetadata(this.header.version)) {\n      //v1/v2: 3 strings, the table value can be empty\n      result = {\n        eventType: types.protocolEvents.schemaChange,\n        schemaChangeType: this.readString(),\n        keyspace: this.readString(),\n        table: this.readString()\n      };\n      result.isKeyspace = !result.table;\n      return result;\n    }\n    //v3+: 3 or 4 strings: change_type, target, keyspace and (table, type, functionName or aggregate)\n    result = {\n      eventType: types.protocolEvents.schemaChange,\n      schemaChangeType: this.readString(),\n      target: this.readString(),\n      keyspace: this.readString(),\n      table: null,\n      udt: null,\n      signature: null\n    };\n    result.isKeyspace = result.target === 'KEYSPACE';\n    switch (result.target) {\n      case 'TABLE':\n        result.table = this.readString();\n        break;\n      case 'TYPE':\n        result.udt = this.readString();\n        break;\n      case 'FUNCTION':\n        result.functionName = this.readString();\n        result.signature = this.readStringList();\n        break;\n      case 'AGGREGATE':\n        result.aggregate = this.readString();\n        result.signature = this.readStringList();\n    }\n    return result;\n  }\n}\n\nmodule.exports = { FrameReader };\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst { Transform, Writable } = require('stream');\n\nconst types = require('./types');\nconst utils = require('./utils');\nconst errors = require('./errors');\nconst { FrameHeader } = types;\nconst { FrameReader } = require('./readers');\n\n/**\n * Transforms chunks, emits data objects {header, chunk}\n * @param options Stream options\n * @extends Transform\n */\nfunction Protocol (options) {\n  Transform.call(this, options);\n  this.header = null;\n  this.bodyLength = 0;\n  this.clearHeaderChunks();\n  this.version = 0;\n  this.headerSize = 0;\n}\n\nutil.inherits(Protocol, Transform);\n\nProtocol.prototype._transform = function (chunk, encoding, callback) {\n  let error = null;\n  try {\n    this.readItems(chunk);\n  }\n  catch (err) {\n    error = err;\n  }\n  callback(error);\n};\n\n/**\n * Parses the chunk into frames (header and body).\n * Emits (push) complete frames or frames with incomplete bodies. Following chunks containing the rest of the body will\n * be emitted using the same frame.\n * It buffers incomplete headers.\n * @param {Buffer} chunk\n */\nProtocol.prototype.readItems = function (chunk) {\n  if (!chunk || chunk.length === 0) {\n    return;\n  }\n  if (this.version === 0) {\n    //The server replies the first message with the max protocol version supported\n    this.version = FrameHeader.getProtocolVersion(chunk);\n    this.headerSize = FrameHeader.size(this.version);\n  }\n  let offset = 0;\n  let currentHeader = this.header;\n  this.header = null;\n  if (this.headerChunks.byteLength !== 0) {\n    //incomplete header was buffered try to read the header from the buffered chunks\n    this.headerChunks.parts.push(chunk);\n    if (this.headerChunks.byteLength + chunk.length < this.headerSize) {\n      this.headerChunks.byteLength += chunk.length;\n      return;\n    }\n    currentHeader = FrameHeader.fromBuffer(Buffer.concat(this.headerChunks.parts, this.headerSize));\n    offset = this.headerSize - this.headerChunks.byteLength;\n    this.clearHeaderChunks();\n  }\n  const items = [];\n  while (true) {\n    if (!currentHeader) {\n      if (this.headerSize > chunk.length - offset) {\n        if (chunk.length - offset <= 0) {\n          break;\n        }\n        //the header is incomplete, buffer it until the next chunk\n        const headerPart = chunk.slice(offset, chunk.length);\n        this.headerChunks.parts.push(headerPart);\n        this.headerChunks.byteLength = headerPart.length;\n        break;\n      }\n      //read header\n      currentHeader = FrameHeader.fromBuffer(chunk, offset);\n      offset += this.headerSize;\n    }\n    //parse body\n    const remaining = chunk.length - offset;\n    if (currentHeader.bodyLength <= remaining + this.bodyLength) {\n      items.push({ header: currentHeader, chunk: chunk, offset: offset, frameEnded: true });\n      offset += currentHeader.bodyLength - this.bodyLength;\n      //reset the body length\n      this.bodyLength = 0;\n    }\n    else if (remaining >= 0) {\n      //the body is not fully contained in this chunk\n      //will continue later\n      this.header = currentHeader;\n      this.bodyLength += remaining;\n      if (remaining > 0) {\n        //emit if there is at least a byte to emit\n        items.push({ header: currentHeader, chunk: chunk, offset: offset, frameEnded: false });\n      }\n      break;\n    }\n    currentHeader = null;\n  }\n  for (let i = 0; i < items.length; i++) {\n    this.push(items[i]);\n  }\n};\n\nProtocol.prototype.clearHeaderChunks = function () {\n  this.headerChunks = { byteLength: 0, parts: [] };\n};\n\n/**\n * A stream that gets reads header + body chunks and transforms them into header + (row | error)\n * @param {Object} streamOptions Node.js Stream options\n * @param {Encoder} encoder Encoder instance for the parser to use\n * @extends Transform\n */\nfunction Parser (streamOptions, encoder) {\n  Transform.call(this, streamOptions);\n  //frames that are streaming, indexed by id\n  this.frames = {};\n  this.encoder = encoder;\n}\n\nutil.inherits(Parser, Transform);\n\nParser.prototype._transform = function (item, encoding, callback) {\n  const frameInfo = this.frameState(item);\n\n  let error = null;\n  try {\n    this.parseBody(frameInfo, item);\n  }\n  catch (err) {\n    error = err;\n  }\n  callback(error);\n\n  if (item.frameEnded) {\n    if (frameInfo.cellBuffer) {\n      //Frame was being streamed but an error force it to buffer the result\n      this.push({\n        header: frameInfo.header,\n        error: new errors.DriverInternalError('There was an problem while parsing streaming frame, opcode ' +\n          frameInfo.header.opcode)\n      });\n    }\n    //all the parsing finished and it was streamed down\n    //emit an item that signals it\n    this.push({ header: frameInfo.header, frameEnded: true});\n  }\n};\n\n/**\n * @param frameInfo\n * @param {{header: FrameHeader, chunk: Buffer, offset: Number}} item\n */\nParser.prototype.parseBody = function (frameInfo, item) {\n  frameInfo.isStreaming = frameInfo.byRow && item.header.opcode === types.opcodes.result;\n  if (!this.handleFrameBuffers(frameInfo, item)) {\n    // Frame isn't complete and we are not streaming the frame\n    return;\n  }\n  const reader = new FrameReader(item.header, item.chunk, item.offset);\n  // Check that flags have not been parsed yet for this frame\n  if (frameInfo.flagsInfo === undefined) {\n    const originalOffset = reader.offset;\n    try {\n      frameInfo.flagsInfo = reader.readFlagsInfo();\n    }\n    catch (e) {\n      return this.handleParsingError(e, frameInfo, reader, originalOffset);\n    }\n  }\n\n  //All the body for most operations is already buffered at this stage\n  //Except for RESULT\n  switch (item.header.opcode) {\n    case types.opcodes.result:\n      return this.parseResult(frameInfo, reader);\n    case types.opcodes.ready:\n    case types.opcodes.authSuccess:\n      return this.push({ header: frameInfo.header, ready: true });\n    case types.opcodes.authChallenge:\n      return this.push({ header: frameInfo.header, authChallenge: true, token: reader.readBytes()});\n    case types.opcodes.authenticate:\n      return this.push({ header: frameInfo.header, mustAuthenticate: true, authenticatorName: reader.readString()});\n    case types.opcodes.error:\n      return this.push({ header: frameInfo.header, error: reader.readError()});\n    case types.opcodes.supported:\n      return this.push({ header: frameInfo.header, supported: reader.readStringMultiMap()});\n    case types.opcodes.event:\n      return this.push({ header: frameInfo.header, event: reader.readEvent()});\n    default:\n      return this.push({ header: frameInfo.header, error: new Error('Received invalid opcode: ' + item.header.opcode) });\n  }\n};\n\n/**\n * Buffers if needed and returns true if it has all the necessary data to continue parsing the frame.\n * @param frameInfo\n * @param {{header: FrameHeader, chunk: Buffer, offset: Number}} item\n * @returns {Boolean}\n */\nParser.prototype.handleFrameBuffers = function (frameInfo, item) {\n  if (!frameInfo.isStreaming) {\n    // Handle buffering for complete frame bodies\n    const currentLength = (frameInfo.bufferLength || 0) + item.chunk.length - item.offset;\n    if (currentLength < item.header.bodyLength) {\n      //buffer until the frame is completed\n      this.addFrameBuffer(frameInfo, item);\n      return false;\n    }\n    //We have received the full frame body\n    if (frameInfo.buffers) {\n      item.chunk = this.getFrameBuffer(frameInfo, item);\n      item.offset = 0;\n    }\n    return true;\n  }\n  if (frameInfo.cellBuffer) {\n    // Handle buffering for frame cells (row cells or metadata cells)\n    if (item.offset !== 0) {\n      throw new errors.DriverInternalError('Following chunks can not have an offset greater than zero');\n    }\n    frameInfo.cellBuffer.parts.push(item.chunk);\n    if (!frameInfo.cellBuffer.expectedLength) {\n      //Its a buffer outside a row cell (metadata or other)\n      if (frameInfo.cellBuffer.parts.length !== 2) {\n        throw new errors.DriverInternalError('Buffer for streaming frame can not contain more than 1 item');\n      }\n      item.chunk = Buffer.concat(frameInfo.cellBuffer.parts, frameInfo.cellBuffer.byteLength + item.chunk.length);\n      frameInfo.cellBuffer = null;\n      return true;\n    }\n    if (frameInfo.cellBuffer.expectedLength > frameInfo.cellBuffer.byteLength + item.chunk.length) {\n      //We still haven't got the cell data\n      frameInfo.cellBuffer.byteLength += item.chunk.length;\n      return false;\n    }\n    item.chunk = Buffer.concat(frameInfo.cellBuffer.parts, frameInfo.cellBuffer.byteLength + item.chunk.length);\n    frameInfo.cellBuffer = null;\n  }\n  return true;\n};\n\n/**\n * Adds this chunk to the frame buffers.\n * @param frameInfo\n * @param {{header: FrameHeader, chunk: Buffer, offset: Number}} item\n */\nParser.prototype.addFrameBuffer = function (frameInfo, item) {\n  if (!frameInfo.buffers) {\n    frameInfo.buffers = [ item.chunk.slice(item.offset) ];\n    frameInfo.bufferLength = item.chunk.length - item.offset;\n    return;\n  }\n  if (item.offset > 0) {\n    throw new errors.DriverInternalError('Following chunks can not have an offset greater than zero');\n  }\n  frameInfo.buffers.push(item.chunk);\n  frameInfo.bufferLength += item.chunk.length;\n};\n\n/**\n * Adds the last chunk and concatenates the frame buffers\n * @param frameInfo\n * @param {{header: FrameHeader, chunk: Buffer, offset: Number}} item\n */\nParser.prototype.getFrameBuffer = function (frameInfo, item) {\n  frameInfo.buffers.push(item.chunk);\n  const result = Buffer.concat(frameInfo.buffers, frameInfo.bodyLength);\n  frameInfo.buffers = null;\n  return result;\n};\n\n/**\n * Tries to read the result in the body of a message\n * @param frameInfo Frame information, header / metadata\n * @param {FrameReader} reader\n */\nParser.prototype.parseResult = function (frameInfo, reader) {\n  let result;\n  // As we might be streaming and the frame buffer might not be complete,\n  // read the metadata and different types of result values in a try-catch.\n  // Store the reader position\n  const originalOffset = reader.offset;\n  try {\n    if (!frameInfo.meta) {\n      frameInfo.kind = reader.readInt();\n      // Spec 4.2.5\n      switch (frameInfo.kind) {\n        case types.resultKind.voidResult:\n          result = { header: frameInfo.header, flags: frameInfo.flagsInfo };\n          break;\n        case types.resultKind.rows:\n          // Parse the rows metadata, the rest of the response is going to be parsed afterwards\n          frameInfo.meta = reader.readMetadata(frameInfo.kind);\n          break;\n        case types.resultKind.setKeyspace:\n          result = { header: frameInfo.header, keyspaceSet: reader.readString(), flags: frameInfo.flagsInfo };\n          break;\n        case types.resultKind.prepared:\n        {\n          const preparedId = utils.copyBuffer(reader.readShortBytes());\n          frameInfo.meta = reader.readMetadata(frameInfo.kind);\n          result = { header: frameInfo.header, id: preparedId, meta: frameInfo.meta, flags: frameInfo.flagsInfo };\n          break;\n        }\n        case types.resultKind.schemaChange:\n          result = { header: frameInfo.header, schemaChange: reader.parseSchemaChange(), flags: frameInfo.flagsInfo };\n          break;\n        default:\n          throw errors.DriverInternalError('Unexpected result kind: ' + frameInfo.kind);\n      }\n    }\n  }\n  catch (e) {\n    return this.handleParsingError(e, frameInfo, reader, originalOffset);\n  }\n  if (result) {\n    if (frameInfo.emitted) {\n      // It may contain additional metadata and info that it's not being parsed\n      return;\n    }\n    frameInfo.emitted = true;\n    return this.push(result);\n  }\n  if (reader.remainingLength() > 0) {\n    this.parseRows(frameInfo, reader);\n  }\n};\n\n/**\n * @param frameInfo\n * @param {FrameReader} reader\n */\nParser.prototype.parseRows = function (frameInfo, reader) {\n  if (frameInfo.parsingError) {\n    //No more processing on this frame\n    return;\n  }\n  if (frameInfo.rowLength === undefined) {\n    try {\n      frameInfo.rowLength = reader.readInt();\n    }\n    catch (e) {\n      return this.handleParsingError(e, frameInfo, reader);\n    }\n  }\n  if (frameInfo.rowLength === 0) {\n    return this.push({\n      header: frameInfo.header,\n      result: { rows: utils.emptyArray, meta: frameInfo.meta, flags: frameInfo.flagsInfo }\n    });\n  }\n  const meta = frameInfo.meta;\n  frameInfo.rowIndex = frameInfo.rowIndex || 0;\n  for (let i = frameInfo.rowIndex; i < frameInfo.rowLength; i++) {\n    const rowOffset = reader.offset;\n    const row = new types.Row(meta.columns);\n    let cellBuffer;\n    for (let j = 0; j < meta.columns.length; j++ ) {\n      const c = meta.columns[j];\n      try {\n        cellBuffer = reader.readBytes();\n      }\n      catch (e) {\n        return this.handleParsingError(e, frameInfo, reader, rowOffset, i);\n      }\n      try {\n        row[c.name] = this.encoder.decode(cellBuffer, c.type);\n      }\n      catch (e) {\n        //Something went wrong while decoding, we are not going to be able to recover\n        return this.handleParsingError(e, frameInfo, null);\n      }\n    }\n    this.push({\n      header: frameInfo.header,\n      row: row,\n      meta: frameInfo.meta,\n      byRow: frameInfo.byRow,\n      length: frameInfo.rowLength,\n      flags: frameInfo.flagsInfo\n    });\n  }\n  if (frameInfo.byRow) {\n    // Use an event item to identify that all the streaming rows have finished processing\n    this.push({\n      header: frameInfo.header,\n      byRowCompleted: true,\n      meta: frameInfo.meta,\n      length: frameInfo.rowLength,\n      flags: frameInfo.flagsInfo\n    });\n  }\n};\n\n/**\n * Sets parser options (ie: how to yield the results as they are parsed)\n * @param {Number} id Id of the stream\n * @param options\n */\nParser.prototype.setOptions = function (id, options) {\n  if (this.frames[id.toString()]) {\n    throw new types.DriverError('There was already state for this frame');\n  }\n  this.frames[id.toString()] = options;\n};\n\n/**\n * Manually clears the frame options.\n * This class already clears the provided options when the frame ends, so it's usually not required to invoke this\n * method.\n * When manually setting the options for continuous paging, it's possible that the frame options are set while\n * it's being cancelled.\n * @param {Number} id The streamId\n */\nParser.prototype.clearOptions = function (id) {\n  delete this.frames[id.toString()];\n};\n\n/**\n * Gets the frame info from the internal state.\n * In case it is not there, it creates it.\n * In case the frame ended\n */\nParser.prototype.frameState = function (item) {\n  let frameInfo = this.frames[item.header.streamId];\n  if (!frameInfo) {\n    frameInfo = {};\n    if (!item.frameEnded) {\n      //store it in the frames\n      this.frames[item.header.streamId] = frameInfo;\n    }\n  }\n  else if (item.frameEnded) {\n    //if it was already stored, remove it\n    delete this.frames[item.header.streamId];\n  }\n  frameInfo.header = item.header;\n  return frameInfo;\n};\n\n/**\n * Handles parsing error: pushing an error if its unexpected or buffer the cell if its streaming\n * @param {Error} e\n * @param frameInfo\n * @param {FrameReader} reader\n * @param {Number} [originalOffset]\n * @param {Number} [rowIndex]\n */\nParser.prototype.handleParsingError = function (e, frameInfo, reader, originalOffset, rowIndex) {\n  if (reader && frameInfo.isStreaming && (e instanceof RangeError)) {\n    //A controlled error, buffer from offset and move on\n    return this.bufferResultCell(frameInfo, reader, originalOffset, rowIndex, e.expectedLength);\n  }\n  frameInfo.parsingError = true;\n  frameInfo.cellBuffer = null;\n  this.push({ header: frameInfo.header, error: e });\n};\n\n/**\n * When streaming, it buffers data since originalOffset.\n * @param frameInfo\n * @param {FrameReader} reader\n * @param {Number} [originalOffset]\n * @param {Number} [rowIndex]\n * @param {Number} [expectedLength]\n */\nParser.prototype.bufferResultCell = function (frameInfo, reader, originalOffset, rowIndex, expectedLength) {\n  if (!originalOffset && originalOffset !== 0) {\n    originalOffset = reader.offset;\n  }\n  frameInfo.rowIndex = rowIndex;\n  const buffer = reader.slice(originalOffset);\n  frameInfo.cellBuffer = {\n    parts: [ buffer ],\n    byteLength: buffer.length,\n    expectedLength: expectedLength\n  };\n};\n\n/**\n * Represents a writable streams that emits results\n */\nfunction ResultEmitter(options) {\n  Writable.call(this, options);\n  /**\n   * Stores the rows for frames that needs to be yielded as one result with many rows\n   */\n  this.rowBuffer = {};\n}\n\nutil.inherits(ResultEmitter, Writable);\n\nResultEmitter.prototype._write = function (item, encoding, callback) {\n  let error = null;\n  try {\n    this.each(item);\n  }\n  catch (err) {\n    error = err;\n  }\n  callback(error);\n};\n\n\n/**\n * Analyzes the item and emit the corresponding event\n */\nResultEmitter.prototype.each = function (item) {\n  if (item.error || item.result) {\n    //Its either an error or an empty array rows\n    //no transformation needs to be made\n    return this.emit('result', item.header, item.error, item.result);\n  }\n  if (item.frameEnded) {\n    return this.emit('frameEnded', item.header);\n  }\n  if (item.lastContinuousPage) {\n    return this.emit('lastContinuousPage', item.header);\n  }\n  if (item.byRowCompleted) {\n    return this.emit('byRowCompleted', item.header, item.row, item.meta, item.flags);\n  }\n  if (item.byRow) {\n    //it should be yielded by row\n    return this.emit('row', item.header, item.row, item.meta, item.length, item.flags);\n  }\n  if (item.row) {\n    //it should be yielded as a result\n    //it needs to be buffered to an array of rows\n    return this.bufferAndEmit(item);\n  }\n  if (item.event) {\n    //its an event from Cassandra\n    return this.emit('nodeEvent', item.header, item.event);\n  }\n  //its a raw response (object with flags)\n  return this.emit('result', item.header, null, item);\n};\n\n/**\n * Buffers the rows until the result set is completed and emits the result event.\n */\nResultEmitter.prototype.bufferAndEmit = function (item) {\n  let rows = this.rowBuffer[item.header.streamId];\n  if (!rows) {\n    rows = this.rowBuffer[item.header.streamId] = [];\n  }\n  rows.push(item.row);\n  if (rows.length === item.length) {\n    this.emit('result', item.header, null, { rows: rows, meta: item.meta, flags: item.flags});\n    delete this.rowBuffer[item.header.streamId];\n  }\n};\n\nexports.Protocol = Protocol;\nexports.Parser = Parser;\nexports.ResultEmitter = ResultEmitter;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst types = require('./types');\n\n/**\n * Group size\n * @type {number}\n */\nconst groupSize = 128;\n\n/**\n * Number used to right shift ids to allocate them into groups\n * @const\n * @type {number}\n */\nconst shiftToGroup = 7;\n\n/**\n * Amount of groups that can be released per time\n * If it grows larger than 4 groups (128 * 4), groups can be released\n * @const\n * @type {number}\n */\nconst releasableSize = 4;\n\n/**\n * 32K possible stream ids depending for protocol v3 and above\n * @const\n * @type {number}\n */\nconst maxGroupsFor2Bytes = 256;\n\n/**\n * Delay used to check if groups can be released\n * @const\n * @type {number}\n */\nconst defaultReleaseDelay = 5000;\n\n/**\n * Represents a queue of ids from 0 to maximum stream id supported by the protocol version.\n * Clients can dequeue a stream id using {@link StreamIdStack#shift()} and enqueue (release) using\n * {@link StreamIdStack#push()}\n */\nclass StreamIdStack {\n  /**\n   * Creates a new instance of StreamIdStack.\n   * @param {number} version Protocol version\n   * @constructor\n   */\n  constructor(version) {\n    //Ecmascript Number is 64-bit double, it can be optimized by the engine into a 32-bit int, but nothing below that.\n    //We try to allocate as few as possible in arrays of 128\n    this.currentGroup = generateGroup(0);\n    this.groupIndex = 0;\n    this.groups = [this.currentGroup];\n    this.releaseTimeout = null;\n    this.setVersion(version);\n    /**\n     * Returns the amount of ids currently in use\n     * @member {number}\n     */\n    this.inUse = 0;\n    this.releaseDelay = defaultReleaseDelay;\n  }\n\n  /**\n   * Sets the protocol version\n   * @param {Number} version\n   */\n  setVersion(version) {\n    //128 or 32K stream ids depending on the protocol version\n    this.maxGroups = types.protocolVersion.uses2BytesStreamIds(version) ? maxGroupsFor2Bytes : 1;\n  }\n\n  /**\n   * Dequeues an id.\n   * Similar to {@link Array#pop()}.\n   * @returns {Number} Returns an id or null\n   */\n  pop() {\n    let id = this.currentGroup.pop();\n    if (typeof id !== 'undefined') {\n      this.inUse++;\n      return id;\n    }\n    //try to use the following groups\n    while (this.groupIndex < this.groups.length - 1) {\n      //move to the following group\n      this.currentGroup = this.groups[++this.groupIndex];\n      //try dequeue\n      id = this.currentGroup.pop();\n      if (typeof id !== 'undefined') {\n        this.inUse++;\n        return id;\n      }\n    }\n    return this._tryCreateGroup();\n  }\n\n  /**\n   * Enqueue an id for future use.\n   * Similar to {@link Array#push()}.\n   * @param {Number} id\n   */\n  push(id) {\n    this.inUse--;\n    const groupIndex = id >> shiftToGroup;\n    const group = this.groups[groupIndex];\n    group.push(id);\n    if (groupIndex < this.groupIndex) {\n      //Set the lower group to be used to dequeue from\n      this.groupIndex = groupIndex;\n      this.currentGroup = group;\n    }\n    this._tryIssueRelease();\n  }\n\n  /**\n   * Clears all timers\n   */\n  clear() {\n    if (this.releaseTimeout) {\n      clearTimeout(this.releaseTimeout);\n      this.releaseTimeout = null;\n    }\n  }\n\n  /**\n   * Tries to create an additional group and returns a new id\n   * @returns {Number} Returns a new id or null if it's not possible to create a new group\n   * @private\n   */\n  _tryCreateGroup() {\n    if (this.groups.length === this.maxGroups) {\n      //we can have an additional group\n      return null;\n    }\n    //Add a new group at the last position\n    this.groupIndex = this.groups.length;\n    //Using 128 * groupIndex as initial value\n    this.currentGroup = generateGroup(this.groupIndex << shiftToGroup);\n    this.groups.push(this.currentGroup);\n    this.inUse++;\n    return this.currentGroup.pop();\n  }\n\n  _tryIssueRelease() {\n    if (this.releaseTimeout || this.groups.length <= releasableSize) {\n      //Nothing to release or a release delay has been issued\n      return;\n    }\n\n    this.releaseTimeout = setTimeout(() => this._releaseGroups(), this.releaseDelay);\n  }\n\n  _releaseGroups() {\n    let counter = 0;\n    let index = this.groups.length - 1;\n    //only release up to n groups (n = releasable size)\n    //shrink back up to n groups not all the way up to 1\n    while (counter++ < releasableSize && this.groups.length > releasableSize && index > this.groupIndex) {\n      if (this.groups[index].length !== groupSize) {\n        //the group is being used\n        break;\n      }\n      this.groups.pop();\n      index--;\n    }\n    this.releaseTimeout = null;\n    //Issue next release if applies\n    this._tryIssueRelease();\n  }\n}\n\nfunction generateGroup(initialValue) {\n  const arr = new Array(groupSize);\n  const upperBound = initialValue + groupSize - 1;\n  for (let i = 0; i < groupSize; i++) {\n    arr[i] = upperBound - i;\n  }\n  return arr;\n}\n\nmodule.exports = StreamIdStack;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst util = require('util');\nconst utils = require('./utils');\nconst errors = require('./errors');\nconst requests = require('./requests');\nconst ExecuteRequest = requests.ExecuteRequest;\nconst QueryRequest = requests.QueryRequest;\n\nconst state = {\n  init: 0,\n  completed: 1,\n  timedOut: 2,\n  cancelled: 3\n};\n\n/**\n * Maintains the state information of a request inside a Connection.\n */\nclass OperationState {\n  /**\n   * Creates a new instance of OperationState.\n   * @param {Request} request\n   * @param {Function} rowCallback\n   * @param {Function} callback\n   */\n  constructor(request, rowCallback, callback) {\n    this.request = request;\n    this._rowCallback = rowCallback;\n    this._callback = callback;\n    this._timeout = null;\n    this._state = state.init;\n    this._rowIndex = 0;\n    /**\n     * Stream id that is set right before being written.\n     * @type {number}\n     */\n    this.streamId = -1;\n  }\n\n  /**\n   * Marks the operation as cancelled, clearing all callbacks and timeouts.\n   */\n  cancel() {\n    if (this._state !== state.init) {\n      return;\n    }\n    if (this._timeout !== null) {\n      clearTimeout(this._timeout);\n    }\n    this._state = state.cancelled;\n    this._callback = utils.noop;\n  }\n\n  /**\n   * Determines if the operation can be written to the wire (when it hasn't been cancelled or it hasn't timed out).\n   */\n  canBeWritten() {\n    return this._state === state.init;\n  }\n\n  /**\n   * Determines if the response is going to be yielded by row.\n   * @return {boolean}\n   */\n  isByRow() {\n    return this._rowCallback && (this.request instanceof ExecuteRequest || this.request instanceof QueryRequest);\n  }\n\n  /**\n   * Creates the timeout for the request.\n   * @param {ExecutionOptions} execOptions\n   * @param {Number} defaultReadTimeout\n   * @param {String} address\n   * @param {Function} onTimeout The callback to be invoked when it times out.\n   * @param {Function} onResponse The callback to be invoked if a response is obtained after it timed out.\n   */\n  setRequestTimeout(execOptions, defaultReadTimeout, address, onTimeout, onResponse) {\n    if (this._state !== state.init) {\n      // No need to set the timeout\n      return;\n    }\n    const millis = execOptions.getReadTimeout() !== undefined ? execOptions.getReadTimeout() : defaultReadTimeout;\n    if (!(millis > 0)) {\n      // Read timeout disabled\n      return;\n    }\n    const self = this;\n    this._timeout = setTimeout(function requestTimedOut() {\n      onTimeout();\n      const message = util.format('The host %s did not reply before timeout %d ms', address, millis);\n      self._markAsTimedOut(new errors.OperationTimedOutError(message, address), onResponse);\n    }, millis);\n  }\n\n  setResultRow(row, meta, rowLength, flags, header) {\n    this._markAsCompleted();\n    if (!this._rowCallback) {\n      return this.setResult(new errors.DriverInternalError('RowCallback not found for streaming frame handler'));\n    }\n    this._rowCallback(this._rowIndex++, row, rowLength);\n    if (this._rowIndex === rowLength) {\n      this._swapCallbackAndInvoke(null, { rowLength: rowLength, meta: meta, flags: flags }, header.bodyLength);\n    }\n  }\n\n  /**\n   * Marks the current operation as timed out.\n   * @param {Error} err\n   * @param {Function} onResponse\n   * @private\n   */\n  _markAsTimedOut(err, onResponse) {\n    if (this._state !== state.init) {\n      return;\n    }\n    this._state = state.timedOut;\n    this._swapCallbackAndInvoke(err, null, null, onResponse);\n  }\n\n  _markAsCompleted() {\n    if (this._state !== state.init) {\n      return;\n    }\n    if (this._timeout !== null) {\n      clearTimeout(this._timeout);\n    }\n    this._state = state.completed;\n  }\n\n  /**\n   * Sets the result of this operation, declaring that no further input will be processed for this operation.\n   * @param {Error} err\n   * @param {Object} [result]\n   * @param {Number} [length]\n   */\n  setResult(err, result, length) {\n    this._markAsCompleted();\n    this._swapCallbackAndInvoke(err, result, length);\n  }\n\n  _swapCallbackAndInvoke(err, result, length, newCallback) {\n    const callback = this._callback;\n    this._callback = newCallback || utils.noop;\n    callback(err, result, length);\n  }\n}\n\nmodule.exports = OperationState;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst events = require('events');\nconst util = require('util');\nconst tls = require('tls');\nconst net = require('net');\n\nconst Encoder = require('./encoder.js');\nconst { WriteQueue } = require('./writers');\nconst requests = require('./requests');\nconst streams = require('./streams');\nconst utils = require('./utils');\nconst types = require('./types');\nconst errors = require('./errors');\nconst StreamIdStack = require('./stream-id-stack');\nconst OperationState = require('./operation-state');\nconst promiseUtils = require('./promise-utils');\nconst { ExecutionOptions } = require('./execution-options');\n\n/**\n * Represents a connection to a Cassandra node\n */\nclass Connection extends events.EventEmitter {\n\n  /**\n   * Creates a new instance of Connection.\n   * @param {String} endpoint An string containing ip address and port of the host\n   * @param {Number|null} protocolVersion\n   * @param {ClientOptions} options\n   */\n  constructor(endpoint, protocolVersion, options) {\n    super();\n\n    this.setMaxListeners(0);\n\n    if (!options) {\n      throw new Error('options is not defined');\n    }\n\n    /**\n     * Gets the ip and port of the server endpoint.\n     * @type {String}\n     */\n    this.endpoint = endpoint;\n\n    /**\n     * Gets the friendly name of the host, used to identify the connection in log messages.\n     * With direct connect, this is the address and port.\n     * With SNI, this will be the address and port of the proxy, plus the server name.\n     * @type {String}\n     */\n    this.endpointFriendlyName = this.endpoint;\n\n    if (options.sni) {\n      this._serverName = endpoint;\n      this.endpoint = `${options.sni.addressResolver.getIp()}:${options.sni.port}`;\n      this.endpointFriendlyName = `${this.endpoint} (${this._serverName})`;\n    }\n\n    if (!this.endpoint || this.endpoint.indexOf(':') < 0) {\n      throw new Error('EndPoint must contain the ip address and port separated by : symbol');\n    }\n\n    const portSeparatorIndex = this.endpoint.lastIndexOf(':');\n    this.address = this.endpoint.substr(0, portSeparatorIndex);\n    this.port = this.endpoint.substr(portSeparatorIndex + 1);\n\n    Object.defineProperty(this, \"options\", { value: options, enumerable: false, writable: false});\n\n    if (protocolVersion === null) {\n      // Set initial protocol version\n      protocolVersion = types.protocolVersion.maxSupported;\n      if (options.protocolOptions.maxVersion) {\n        // User provided the protocol version\n        protocolVersion = options.protocolOptions.maxVersion;\n      }\n      // Allow to check version using this connection instance\n      this._checkingVersion = true;\n    }\n\n    this.log = utils.log;\n    this.protocolVersion = protocolVersion;\n    this._operations = new Map();\n    this._pendingWrites = [];\n    this._preparing = new Map();\n\n    /**\n     * The timeout state for the idle request (heartbeat)\n     */\n    this._idleTimeout = null;\n    this.timedOutOperations = 0;\n    this._streamIds = new StreamIdStack(this.protocolVersion);\n    this._metrics = options.metrics;\n\n    this.encoder = new Encoder(protocolVersion, options);\n    this.keyspace = null;\n    this.emitDrain = false;\n    /**\n     * Determines if the socket is open and startup succeeded, whether the connection can be used to send requests /\n     * receive events\n     */\n    this.connected = false;\n    /**\n     * Determines if the socket can be considered as open\n     */\n    this.isSocketOpen = false;\n\n    this.send = util.promisify(this.sendStream);\n    this.closeAsync = util.promisify(this.close);\n    this.openAsync = util.promisify(this.open);\n    this.prepareOnceAsync = util.promisify(this.prepareOnce);\n  }\n\n  /**\n   * Binds the necessary event listeners for the socket\n   */\n  bindSocketListeners() {\n    //Remove listeners that were used for connecting\n    this.netClient.removeAllListeners('connect');\n    this.netClient.removeAllListeners('timeout');\n    // The socket is expected to be open at this point\n    this.isSocketOpen = true;\n    this.netClient.on('close', () => {\n      this.log('info', `Connection to ${this.endpointFriendlyName} closed`);\n      this.isSocketOpen = false;\n      const wasConnected = this.connected;\n      this.close();\n      if (wasConnected) {\n        // Emit only when it was closed unexpectedly\n        this.emit('socketClose');\n      }\n    });\n\n    this.protocol = new streams.Protocol({ objectMode: true });\n    this.parser = new streams.Parser({ objectMode: true }, this.encoder);\n    const resultEmitter = new streams.ResultEmitter({objectMode: true});\n    resultEmitter.on('result', this.handleResult.bind(this));\n    resultEmitter.on('row', this.handleRow.bind(this));\n    resultEmitter.on('frameEnded', this.freeStreamId.bind(this));\n    resultEmitter.on('nodeEvent', this.handleNodeEvent.bind(this));\n\n    this.netClient\n      .pipe(this.protocol)\n      .pipe(this.parser)\n      .pipe(resultEmitter);\n\n    this.writeQueue = new WriteQueue(this.netClient, this.encoder, this.options);\n  }\n\n  /**\n   * Connects a socket and sends the startup protocol messages.\n   * Note that when open() callbacks in error, the caller should immediately call {@link Connection#close}.\n   */\n  open(callback) {\n    const self = this;\n    this.log('info', `Connecting to ${this.endpointFriendlyName}`);\n\n    if (!this.options.sslOptions) {\n      this.netClient = new net.Socket({ highWaterMark: this.options.socketOptions.coalescingThreshold });\n      this.netClient.connect(this.port, this.address, function connectCallback() {\n        self.log('verbose', `Socket connected to ${self.endpointFriendlyName}`);\n        self.bindSocketListeners();\n        self.startup(callback);\n      });\n    }\n    else {\n      // Use TLS\n      const sslOptions = utils.extend({ rejectUnauthorized: false }, this.options.sslOptions);\n\n      if (this.options.sni) {\n        sslOptions.servername = this._serverName;\n      }\n\n      this.netClient = tls.connect(this.port, this.address, sslOptions, function tlsConnectCallback() {\n        self.log('verbose', `Secure socket connected to ${self.endpointFriendlyName}`);\n        self.bindSocketListeners();\n        self.startup(callback);\n      });\n\n      // TLSSocket will validate for values from 512 to 16K (depending on the SSL protocol version)\n      this.netClient.setMaxSendFragment(this.options.socketOptions.coalescingThreshold);\n    }\n\n    this.netClient.once('error', function socketError(err) {\n      self.errorConnecting(err, false, callback);\n    });\n\n    this.netClient.once('timeout', function connectTimedOut() {\n      const err = new types.DriverError('Connection timeout');\n      self.errorConnecting(err, true, callback);\n    });\n\n    this.netClient.setTimeout(this.options.socketOptions.connectTimeout);\n\n    // Improve failure detection with TCP keep-alives\n    if (this.options.socketOptions.keepAlive) {\n      this.netClient.setKeepAlive(true, this.options.socketOptions.keepAliveDelay);\n    }\n\n    this.netClient.setNoDelay(!!this.options.socketOptions.tcpNoDelay);\n  }\n\n  /**\n   * Determines the protocol version to use and sends the STARTUP request\n   * @param {Function} callback\n   */\n  startup(callback) {\n    if (this._checkingVersion) {\n      this.log('info', 'Trying to use protocol version 0x' + this.protocolVersion.toString(16));\n    }\n\n    const self = this;\n    const request = new requests.StartupRequest({\n      noCompact: this.options.protocolOptions.noCompact,\n      clientId: this.options.id,\n      applicationName: this.options.applicationName,\n      applicationVersion: this.options.applicationVersion\n    });\n\n    this.sendStream(request, null, function responseCallback(err, response) {\n      if (err && self._checkingVersion) {\n        let invalidProtocol = (err instanceof errors.ResponseError &&\n          err.code === types.responseErrorCodes.protocolError &&\n          err.message.indexOf('Invalid or unsupported protocol version') >= 0);\n\n        if (!invalidProtocol && types.protocolVersion.canStartupResponseErrorBeWrapped(self.protocolVersion)) {\n          //For some versions of Cassandra, the error is wrapped into a server error\n          //See CASSANDRA-9451\n          invalidProtocol = (err instanceof errors.ResponseError &&\n            err.code === types.responseErrorCodes.serverError &&\n            err.message.indexOf('ProtocolException: Invalid or unsupported protocol version') > 0);\n        }\n\n        if (invalidProtocol) {\n          // The server can respond with a message using the lower protocol version supported\n          // or using the same version as the one provided\n          let lowerVersion = self.protocol.version;\n\n          if (lowerVersion === self.protocolVersion) {\n            lowerVersion = types.protocolVersion.getLowerSupported(self.protocolVersion);\n          } else if (!types.protocolVersion.isSupported(self.protocol.version)) {\n            // If we have an unsupported protocol version or a beta version we need to switch\n            // to something we can support.  Note that dseV1 and dseV2 are excluded from this\n            // logic as they are supported.  Also note that any v5 and greater beta protocols\n            // are included here since the beta flag was introduced in v5.\n            self.log('info',`Protocol version ${self.protocol.version} not supported by this driver, downgrading`);\n            lowerVersion = types.protocolVersion.getLowerSupported(self.protocol.version);\n          }\n\n          if (!lowerVersion) {\n            return startupCallback(\n              new Error('Connection was unable to STARTUP using protocol version ' + self.protocolVersion));\n          }\n\n          self.log('info', 'Protocol 0x' + self.protocolVersion.toString(16) + ' not supported, using 0x' + lowerVersion.toString(16));\n          self.decreaseVersion(lowerVersion);\n\n          // The host closed the connection, close the socket and start the connection flow again\n          setImmediate(function decreasingVersionClosing() {\n            self.close(function decreasingVersionOpening() {\n              // Attempt to open with the correct protocol version\n              self.open(callback);\n            });\n          });\n\n          return;\n        }\n      }\n\n      if (response && response.mustAuthenticate) {\n        return self.startAuthenticating(response.authenticatorName, startupCallback);\n      }\n\n      startupCallback(err);\n    });\n\n    function startupCallback(err) {\n      if (err) {\n        return self.errorConnecting(err, false, callback);\n      }\n      //The socket is connected and the connection is authenticated\n      return self.connectionReady(callback);\n    }\n  }\n\n  errorConnecting(err, destroy, callback) {\n    this.log('warning', `There was an error when trying to connect to the host ${this.endpointFriendlyName}`, err);\n    if (destroy) {\n      //there is a TCP connection that should be killed.\n      this.netClient.destroy();\n    }\n\n    this._metrics.onConnectionError(err);\n\n    callback(err);\n  }\n\n  /**\n   * Sets the connection to ready/connected status\n   */\n  connectionReady(callback) {\n    this.emit('connected');\n    this.connected = true;\n    // Remove existing error handlers as the connection is now ready.\n    this.netClient.removeAllListeners('error');\n    this.netClient.on('error', this.handleSocketError.bind(this));\n    callback();\n  }\n\n  /** @param {Number} lowerVersion */\n  decreaseVersion(lowerVersion) {\n    // The response already has the max protocol version supported by the Cassandra host.\n    this.protocolVersion = lowerVersion;\n    this.encoder.setProtocolVersion(lowerVersion);\n    this._streamIds.setVersion(lowerVersion);\n  }\n\n  /**\n   * Handle socket errors, if the socket is not readable invoke all pending callbacks\n   */\n  handleSocketError(err) {\n    this._metrics.onConnectionError(err);\n    this.clearAndInvokePending(err);\n  }\n\n  /**\n   * Cleans all internal state and invokes all pending callbacks of sent streams\n   */\n  clearAndInvokePending(innerError) {\n    if (this._idleTimeout) {\n      //Remove the idle request\n      clearTimeout(this._idleTimeout);\n      this._idleTimeout = null;\n    }\n    this._streamIds.clear();\n    if (this.emitDrain) {\n      this.emit('drain');\n    }\n    const err = new types.DriverError('Socket was closed');\n    err.isSocketError = true;\n    if (innerError) {\n      err.innerError = innerError;\n    }\n\n    // Get all handlers\n    const operations = Array.from(this._operations.values());\n    // Clear pending operation map\n    this._operations = new Map();\n\n    if (operations.length > 0) {\n      this.log('info', 'Invoking ' + operations.length + ' pending callbacks');\n    }\n\n    // Invoke all handlers\n    utils.each(operations, function (operation, next) {\n      operation.setResult(err);\n      next();\n    });\n\n    const pendingWritesCopy = this._pendingWrites;\n    this._pendingWrites = [];\n    utils.each(pendingWritesCopy, function (operation, next) {\n      operation.setResult(err);\n      next();\n    });\n  }\n\n  /**\n   * Starts the SASL flow\n   * @param {String} authenticatorName\n   * @param {Function} callback\n   */\n  startAuthenticating(authenticatorName, callback) {\n    if (!this.options.authProvider) {\n      return callback(new errors.AuthenticationError('Authentication provider not set'));\n    }\n    const authenticator = this.options.authProvider.newAuthenticator(this.endpoint, authenticatorName);\n    const self = this;\n    authenticator.initialResponse(function initialResponseCallback(err, token) {\n      // Start the flow with the initial token\n      if (err) {\n        return self.onAuthenticationError(callback, err);\n      }\n      self.authenticate(authenticator, token, callback);\n    });\n  }\n\n  /**\n   * Handles authentication requests and responses.\n   * @param {Authenticator} authenticator\n   * @param {Buffer} token\n   * @param {Function} callback\n   */\n  authenticate(authenticator, token, callback) {\n    const self = this;\n    let request = new requests.AuthResponseRequest(token);\n    if (this.protocolVersion === 1) {\n      //No Sasl support, use CREDENTIALS\n      if (!authenticator.username) {\n        return self.onAuthenticationError(\n          callback, new errors.AuthenticationError('Only plain text authenticator providers allowed under protocol v1'));\n      }\n\n      request = new requests.CredentialsRequest(authenticator.username, authenticator.password);\n    }\n\n    this.sendStream(request, null, function authResponseCallback(err, result) {\n      if (err) {\n        if (err instanceof errors.ResponseError && err.code === types.responseErrorCodes.badCredentials) {\n          const authError = new errors.AuthenticationError(err.message);\n          authError.additionalInfo = err;\n          err = authError;\n        }\n        return self.onAuthenticationError(callback, err);\n      }\n\n      if (result.ready) {\n        authenticator.onAuthenticationSuccess();\n        return callback();\n      }\n\n      if (result.authChallenge) {\n        return authenticator.evaluateChallenge(result.token, function evaluateCallback(err, t) {\n          if (err) {\n            return self.onAuthenticationError(callback, err);\n          }\n          //here we go again\n          self.authenticate(authenticator, t, callback);\n        });\n      }\n\n      callback(new errors.DriverInternalError('Unexpected response from Cassandra: ' + util.inspect(result)));\n    });\n  }\n\n  onAuthenticationError(callback, err) {\n    this._metrics.onAuthenticationError(err);\n    callback(err);\n  }\n\n  /**\n   * Executes a 'USE ' query, if keyspace is provided and it is different from the current keyspace\n   * @param {?String} keyspace\n   */\n  async changeKeyspace(keyspace) {\n    if (!keyspace || this.keyspace === keyspace) {\n      return;\n    }\n\n    if (this.toBeKeyspace === keyspace) {\n      // It will be invoked once the keyspace is changed\n      return promiseUtils.fromEvent(this, 'keyspaceChanged');\n    }\n\n    this.toBeKeyspace = keyspace;\n\n    const query = `USE \"${keyspace}\"`;\n\n    try {\n      await this.send(new requests.QueryRequest(query, null, null), null);\n      this.keyspace = keyspace;\n      this.emit('keyspaceChanged', null, keyspace);\n    } catch (err) {\n      this.log('error', `Connection to ${this.endpointFriendlyName} could not switch active keyspace: ${err}`, err);\n      this.emit('keyspaceChanged', err);\n      throw err;\n    } finally {\n      this.toBeKeyspace = null;\n    }\n  }\n\n  /**\n   * Prepares a query on a given connection. If its already being prepared, it queues the callback.\n   * @param {String} query\n   * @param {String} keyspace\n   * @param {function} callback\n   */\n  prepareOnce(query, keyspace, callback) {\n    const name = ( keyspace || '' ) + query;\n    let info = this._preparing.get(name);\n\n    if (info) {\n      // Its being already prepared\n      return info.once('prepared', callback);\n    }\n\n    info = new events.EventEmitter();\n    info.setMaxListeners(0);\n    info.once('prepared', callback);\n    this._preparing.set(name, info);\n\n    this.sendStream(new requests.PrepareRequest(query, keyspace), null, (err, response) => {\n      info.emit('prepared', err, response);\n      this._preparing.delete(name);\n    });\n  }\n\n  /**\n   * Queues the operation to be written to the wire and invokes the callback once the response was obtained or with an\n   * error (socket error or OperationTimedOutError or serialization-related error).\n   * @param {Request} request\n   * @param {ExecutionOptions|null} execOptions\n   * @param {function} callback Function to be called once the response has been received\n   * @return {OperationState}\n   */\n  sendStream(request, execOptions, callback) {\n    execOptions = execOptions || ExecutionOptions.empty();\n\n    // Create a new operation that will contain the request, callback and timeouts\n    const operation = new OperationState(request, execOptions.getRowCallback(), (err, response, length) => {\n      if (!err || !err.isSocketError) {\n        // Emit that a response was obtained when there is a valid response\n        // or when the error is not a socket error\n        this.emit('responseDequeued');\n      }\n      callback(err, response, length);\n    });\n\n    const streamId = this._getStreamId();\n\n    // Start the request timeout without waiting for the request to be written\n    operation.setRequestTimeout(execOptions, this.options.socketOptions.readTimeout, this.endpoint,\n      () => this.timedOutOperations++,\n      () => this.timedOutOperations--);\n\n    if (streamId === null) {\n      this.log('info',\n        'Enqueuing ' +\n        this._pendingWrites.length +\n        ', if this message is recurrent consider configuring more connections per host or lowering the pressure');\n      this._pendingWrites.push(operation);\n      return operation;\n    }\n    this._write(operation, streamId);\n    return operation;\n  }\n\n  /**\n   * Pushes the item into the queue.\n   * @param {OperationState} operation\n   * @param {Number} streamId\n   * @private\n   */\n  _write(operation, streamId) {\n    operation.streamId = streamId;\n    const self = this;\n    this.writeQueue.push(operation, function writeCallback (err) {\n      if (err) {\n        // The request was not written.\n        // There was a serialization error or the operation has already timed out or was cancelled\n        self._streamIds.push(streamId);\n        return operation.setResult(err);\n      }\n      self.log('verbose', 'Sent stream #' + streamId + ' to ' + self.endpointFriendlyName);\n      if (operation.isByRow()) {\n        self.parser.setOptions(streamId, { byRow: true });\n      }\n      self._setIdleTimeout();\n      self._operations.set(streamId, operation);\n    });\n  }\n\n  _setIdleTimeout() {\n    if (!this.options.pooling.heartBeatInterval) {\n      return;\n    }\n    const self = this;\n    // Scheduling the new timeout before de-scheduling the previous performs significantly better\n    // than de-scheduling first, see nodejs implementation: https://github.com/nodejs/node/blob/master/lib/timers.js\n    const previousTimeout = this._idleTimeout;\n    self._idleTimeout = setTimeout(() => self._idleTimeoutHandler(), self.options.pooling.heartBeatInterval);\n    if (previousTimeout) {\n      //remove the previous timeout for the idle request\n      clearTimeout(previousTimeout);\n    }\n  }\n\n  /**\n   * Function that gets executed once the idle timeout has passed to issue a request to keep the connection alive\n   */\n  _idleTimeoutHandler() {\n    if (this.sendingIdleQuery) {\n      //don't issue another\n      //schedule for next time\n      this._idleTimeout = setTimeout(() => this._idleTimeoutHandler(), this.options.pooling.heartBeatInterval);\n      return;\n    }\n\n    this.log('verbose', `Connection to ${this.endpointFriendlyName} idling, issuing a request to prevent disconnects`);\n    this.sendingIdleQuery = true;\n    this.sendStream(requests.options, null, (err) => {\n      this.sendingIdleQuery = false;\n      if (!err) {\n        //The sending succeeded\n        //There is a valid response but we don't care about the response\n        return;\n      }\n      this.log('warning', 'Received heartbeat request error', err);\n      this.emit('idleRequestError', err, this);\n    });\n  }\n\n  /**\n   * Returns an available streamId or null if there isn't any available\n   * @returns {Number}\n   */\n  _getStreamId() {\n    return this._streamIds.pop();\n  }\n\n  freeStreamId(header) {\n    const streamId = header.streamId;\n\n    if (streamId < 0) {\n      // Event ids don't have a matching request operation\n      return;\n    }\n\n    this._operations.delete(streamId);\n    this._streamIds.push(streamId);\n\n    if (this.emitDrain && this._streamIds.inUse === 0 && this._pendingWrites.length === 0) {\n      this.emit('drain');\n    }\n\n    this._writeNext();\n  }\n\n  _writeNext() {\n    if (this._pendingWrites.length === 0) {\n      return;\n    }\n    const streamId = this._getStreamId();\n    if (streamId === null) {\n      // No streamId available\n      return;\n    }\n    const self = this;\n    let operation;\n    while ((operation = this._pendingWrites.shift()) && !operation.canBeWritten()) {\n      // Trying to obtain an pending operation that can be written\n    }\n\n    if (!operation) {\n      // There isn't a pending operation that can be written\n      this._streamIds.push(streamId);\n      return;\n    }\n\n    // Schedule after current I/O callbacks have been executed\n    setImmediate(function writeNextPending() {\n      self._write(operation, streamId);\n    });\n  }\n\n  /**\n   * Returns the number of requests waiting for response\n   * @returns {Number}\n   */\n  getInFlight() {\n    return this._streamIds.inUse;\n  }\n\n  /**\n   * Handles a result and error response\n   */\n  handleResult(header, err, result) {\n    const streamId = header.streamId;\n    if(streamId < 0) {\n      return this.log('verbose', 'event received', header);\n    }\n    const operation = this._operations.get(streamId);\n    if (!operation) {\n      return this.log('error', 'The server replied with a wrong streamId #' + streamId);\n    }\n    this.log('verbose', 'Received frame #' + streamId + ' from ' + this.endpointFriendlyName);\n    operation.setResult(err, result, header.bodyLength);\n  }\n\n  handleNodeEvent(header, event) {\n    switch (event.eventType) {\n      case types.protocolEvents.schemaChange:\n        this.emit('nodeSchemaChange', event);\n        break;\n      case types.protocolEvents.topologyChange:\n        this.emit('nodeTopologyChange', event);\n        break;\n      case types.protocolEvents.statusChange:\n        this.emit('nodeStatusChange', event);\n        break;\n    }\n  }\n\n  /**\n   * Handles a row response\n   */\n  handleRow(header, row, meta, rowLength, flags) {\n    const streamId = header.streamId;\n    if(streamId < 0) {\n      return this.log('verbose', 'Event received', header);\n    }\n    const operation = this._operations.get(streamId);\n    if (!operation) {\n      return this.log('error', 'The server replied with a wrong streamId #' + streamId);\n    }\n    operation.setResultRow(row, meta, rowLength, flags, header);\n  }\n\n  /**\n   * Closes the socket (if not already closed) and cancels all in-flight requests.\n   * Multiple calls to this method have no additional side-effects.\n   * @param {Function} [callback]\n   */\n  close(callback) {\n    callback = callback || utils.noop;\n\n    if (!this.connected && !this.isSocketOpen) {\n      return callback();\n    }\n\n    this.connected = false;\n    // Drain is never going to be emitted, once it is set to closed\n    this.removeAllListeners('drain');\n    this.clearAndInvokePending();\n\n    if (!this.isSocketOpen) {\n      return callback();\n    }\n\n    // Set the socket as closed now (before socket.end() is called) to avoid being invoked more than once\n    this.isSocketOpen = false;\n    this.log('verbose', `Closing connection to ${this.endpointFriendlyName}`);\n    const self = this;\n\n    // If server doesn't acknowledge the half-close within connection timeout, destroy the socket.\n    const endTimeout = setTimeout(() => {\n      this.log('info', `${this.endpointFriendlyName} did not respond to connection close within ` +\n        `${this.options.socketOptions.connectTimeout}ms, destroying connection`);\n      this.netClient.destroy();\n    }, this.options.socketOptions.connectTimeout);\n\n    this.netClient.once('close', function (hadError) {\n      clearTimeout(endTimeout);\n      if (hadError) {\n        self.log('info', 'The socket closed with a transmission error');\n      }\n      setImmediate(callback);\n    });\n\n    // At this point, the error event can be triggered because:\n    // - It's connected and writes haven't completed yet\n    // - The server abruptly closed its end of the connection (ECONNRESET) as a result of protocol error / auth error\n    // We need to remove any listeners and make sure we callback are pending writes\n    this.netClient.removeAllListeners('error');\n    this.netClient.on('error', err => this.clearAndInvokePending(err));\n\n    // Half-close the socket, it will result in 'close' event being fired\n    this.netClient.end();\n  }\n\n  /**\n   * Gets the local IP address to which this connection socket is bound to.\n   * @returns {String|undefined}\n   */\n  getLocalAddress() {\n    if (!this.netClient) {\n      return undefined;\n    }\n\n    return this.netClient.localAddress;\n  }\n}\n\nmodule.exports = Connection;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\nconst events = require('events');\n\nconst Connection = require('./connection');\nconst utils = require('./utils');\nconst promiseUtils = require('./promise-utils');\nconst errors = require('./errors');\nconst clientOptions = require('./client-options');\n\n// Used to get the index of the connection with less in-flight requests\nlet connectionIndex = 0;\nconst connectionIndexOverflow = Math.pow(2, 15);\n\nlet defaultOptions;\n\n/**\n * Represents the possible states of the pool.\n * Possible state transitions:\n *  - From initial to closing: The pool must be closed because the host is ignored.\n *  - From initial to shuttingDown: The pool is being shutdown as a result of a client shutdown.\n *  - From closing to initial state: The pool finished closing connections (is now ignored) and it resets to\n *    initial state in case the host is marked as local/remote in the future.\n *  - From closing to shuttingDown (rare): It was marked as ignored, now the client is being shutdown.\n *  - From shuttingDown to shutdown: Finished shutting down, the pool should not be reused.\n * @private\n */\nconst state = {\n  // Initial state: open / opening / ready to be opened\n  initial: 0,\n  // When the pool is being closed as part of a distance change\n  closing: 1,\n  // When the pool is being shutdown for good\n  shuttingDown: 2,\n  // When the pool has being shutdown\n  shutDown: 4\n};\n\n/**\n * Represents a pool of connections to a host\n */\nclass HostConnectionPool extends events.EventEmitter {\n  /**\n   * Creates a new instance of HostConnectionPool.\n   * @param {Host} host\n   * @param {Number} protocolVersion Initial protocol version\n   * @extends EventEmitter\n   */\n  constructor(host, protocolVersion) {\n    super();\n    this._address = host.address;\n    this._newConnectionTimeout = null;\n    this._state = state.initial;\n    this._opening = false;\n    this._host = host;\n    this.responseCounter = 0;\n    this.options = host.options;\n    this.protocolVersion = protocolVersion;\n    this.coreConnectionsLength = 1;\n    /**\n     * An immutable array of connections\n     * @type {Array.<Connection>}\n     */\n    this.connections = utils.emptyArray;\n    this.setMaxListeners(0);\n    this.log = utils.log;\n  }\n\n  getInFlight() {\n    const length = this.connections.length;\n    if (length === 1) {\n      return this.connections[0].getInFlight();\n    }\n\n    let sum = 0;\n    for (let i = 0; i < length; i++) {\n      sum += this.connections[i].getInFlight();\n    }\n    return sum;\n  }\n\n  /**\n   * Gets the least busy connection from the pool.\n   * @param {Connection} [previousConnection] When provided, the pool should attempt to obtain a different connection.\n   * @returns {Connection!}\n   * @throws {Error}\n   * @throws {BusyConnectionError}\n   */\n  borrowConnection(previousConnection) {\n    if (this.connections.length === 0) {\n      throw new Error('No connection available');\n    }\n\n    const maxRequests = this.options.pooling.maxRequestsPerConnection;\n    const c = HostConnectionPool.minInFlight(this.connections, maxRequests, previousConnection);\n\n    if (c.getInFlight() >= maxRequests) {\n      throw new errors.BusyConnectionError(this._address, maxRequests, this.connections.length);\n    }\n\n    return c;\n  }\n\n  /**\n   * Gets the connection with the minimum number of in-flight requests.\n   * Only checks for 2 connections (round-robin) and gets the one with minimum in-flight requests, as long as\n   * the amount of in-flight requests is lower than maxRequests.\n   * @param {Array.<Connection>} connections\n   * @param {Number} maxRequests\n   * @param {Connection} previousConnection When provided, it will attempt to obtain a different connection.\n   * @returns {Connection!}\n   */\n  static minInFlight(connections, maxRequests, previousConnection) {\n    const length = connections.length;\n    if (length === 1) {\n      return connections[0];\n    }\n\n    // Use a single index for all hosts as a simplified way to balance the load between connections\n    connectionIndex++;\n    if (connectionIndex >= connectionIndexOverflow) {\n      connectionIndex = 0;\n    }\n\n    let current;\n    for (let index = connectionIndex; index < connectionIndex + length; index++) {\n      current = connections[index % length];\n      if (current === previousConnection) {\n        // Increment the index and skip\n        current = connections[(++index) % length];\n      }\n\n      let next = connections[(index + 1) % length];\n      if (next === previousConnection) {\n        // Skip\n        next = connections[(index + 2) % length];\n      }\n\n      if (next.getInFlight() < current.getInFlight()) {\n        current = next;\n      }\n\n      if (current.getInFlight() < maxRequests) {\n        // Check as few connections as possible, as long as the amount of in-flight\n        // requests is lower than maxRequests\n        break;\n      }\n    }\n    return current;\n  }\n\n  /**\n   * Creates all the connections in the pool and switches the keyspace of each connection if needed.\n   * @param {string} keyspace\n   */\n  async warmup(keyspace) {\n    if (this.connections.length < this.coreConnectionsLength) {\n      while (this.connections.length < this.coreConnectionsLength) {\n        await this._attemptNewConnection();\n      }\n\n      this.log('info',\n        `Connection pool to host ${this._address} created with ${this.connections.length} connection(s)`);\n    } else {\n      this.log('info', `Connection pool to host ${this._address} contains ${this.connections.length} connection(s)`);\n    }\n\n    if (keyspace) {\n      try {\n        for (const connection of this.connections) {\n          await connection.changeKeyspace(keyspace);\n        }\n      } catch (err) {\n        // Log it and move on, it could be a momentary schema mismatch failure\n        this.log('warning', `Connection(s) to host ${this._address} could not be switched to keyspace ${keyspace}`);\n      }\n    }\n  }\n\n  /** @returns {Connection} */\n  _createConnection() {\n    const endpointOrServerName = !this.options.sni\n      ? this._address : this._host.hostId.toString();\n\n    const c = new Connection(endpointOrServerName, this.protocolVersion, this.options);\n    this._addListeners(c);\n    return c;\n  }\n\n  /** @param {Connection} c */\n  _addListeners(c) {\n    c.on('responseDequeued', () => this.responseCounter++);\n\n    const self = this;\n    function connectionErrorCallback() {\n      // The socket is not fully open / can not send heartbeat\n      self.remove(c);\n    }\n    c.on('idleRequestError', connectionErrorCallback);\n    c.on('socketClose', connectionErrorCallback);\n  }\n\n  addExistingConnection(c) {\n    this._addListeners(c);\n    // Use a copy of the connections array\n    this.connections = this.connections.slice(0);\n    this.connections.push(c);\n  }\n\n  /**\n   * Prevents reconnection timeout from triggering\n   */\n  clearNewConnectionAttempt() {\n    if (!this._newConnectionTimeout) {\n      return;\n    }\n    clearTimeout(this._newConnectionTimeout);\n    this._newConnectionTimeout = null;\n  }\n\n  /**\n   * Tries to open a new connection.\n   * If a connection is being opened, it will resolve when the existing open task completes.\n   * @returns {Promise<void>}\n   */\n  async _attemptNewConnection() {\n    if (this._opening) {\n      // Wait for the event to fire\n      return await promiseUtils.fromEvent(this, 'open');\n    }\n\n    this._opening = true;\n\n    const c = this._createConnection();\n    let err;\n\n    try {\n      await c.openAsync();\n    } catch (e) {\n      err = e;\n      this.log('warning', `Connection to ${this._address} could not be created: ${err}`, err);\n    }\n\n    if (this.isClosing()) {\n      this.log('info', `Connection to ${this._address} opened successfully but pool was being closed`);\n      err = new Error('Connection closed');\n    }\n\n    if (!err) {\n      // Append the connection to the pool.\n      // Use a copy of the connections array.\n      const newConnections = this.connections.slice(0);\n      newConnections.push(c);\n      this.connections = newConnections;\n      this.log('info', `Connection to ${this._address} opened successfully`);\n    } else {\n      promiseUtils.toBackground(c.closeAsync());\n    }\n\n    // Notify that creation finished by setting the flag and emitting the event\n    this._opening = false;\n    this.emit('open', err, c);\n\n    if (err) {\n      // Opening failed\n      throw err;\n    }\n  }\n\n  attemptNewConnectionImmediate() {\n    const self = this;\n    function openConnection() {\n      self.clearNewConnectionAttempt();\n      self.scheduleNewConnectionAttempt(0);\n    }\n\n    if (this._state === state.initial) {\n      return openConnection();\n    }\n\n    if (this._state === state.closing) {\n      return this.once('close', openConnection);\n    }\n    // In the case the pool its being / has been shutdown for good\n    // Do not attempt to create a new connection.\n  }\n\n  /**\n   * Closes the connection and removes a connection from the pool.\n   * @param {Connection} connection\n   */\n  remove(connection) {\n    // locating an object by position in the array is O(n), but normally there should be between 1 to 8 connections.\n    const index = this.connections.indexOf(connection);\n    if (index < 0) {\n      // it was already removed from the connections and it's closing\n      return;\n    }\n    // remove the connection from the pool, using an pool copy\n    const newConnections = this.connections.slice(0);\n    newConnections.splice(index, 1);\n    this.connections = newConnections;\n    // close the connection\n    setImmediate(function removeClose() {\n      connection.close();\n    });\n    this.emit('remove');\n  }\n\n  /**\n   * @param {Number} delay\n   */\n  scheduleNewConnectionAttempt(delay) {\n    if (this.isClosing()) {\n      return;\n    }\n\n    const self = this;\n\n    this._newConnectionTimeout = setTimeout(function newConnectionTimeoutExpired() {\n      self._newConnectionTimeout = null;\n      if (self.connections.length >= self.coreConnectionsLength) {\n        // new connection can be scheduled while a new connection is being opened\n        // the pool has the appropriate size\n        return;\n      }\n\n      if (delay > 0 && self.options.sni) {\n        // We use delay > 0 as an indication that it's a reconnection.\n        // A reconnection schedule can use delay = 0 as well, but it's a good enough signal.\n        promiseUtils.toBackground(self.options.sni.addressResolver.refresh().then(() => self._attemptNewConnection()));\n        return;\n      }\n\n      promiseUtils.toBackground(self._attemptNewConnection());\n    }, delay);\n  }\n\n  hasScheduledNewConnection() {\n    return !!this._newConnectionTimeout || this._opening;\n  }\n\n  /**\n   * Increases the size of the connection pool in the background, if needed.\n   */\n  increaseSize() {\n    if (this.connections.length < this.coreConnectionsLength && !this.hasScheduledNewConnection()) {\n      // schedule the next connection in the background\n      this.scheduleNewConnectionAttempt(0);\n    }\n  }\n\n  /**\n   * Gets the amount of responses and resets the internal counter.\n   * @returns {number}\n   */\n  getAndResetResponseCounter() {\n    const temp = this.responseCounter;\n    this.responseCounter = 0;\n    return temp;\n  }\n\n  /**\n   * Gets a boolean indicating if the pool is being closed / shutting down or has been shutdown.\n   */\n  isClosing() {\n    return this._state !== state.initial;\n  }\n\n  /**\n   * Gracefully waits for all in-flight requests to finish and closes the pool.\n   */\n  drainAndShutdown() {\n    if (this.isClosing()) {\n      // Its already closing / shutting down\n      return;\n    }\n\n    this._state = state.closing;\n    this.clearNewConnectionAttempt();\n\n    if (this.connections.length === 0) {\n      return this._afterClosing();\n    }\n\n    const self = this;\n    const connections = this.connections;\n    this.connections = utils.emptyArray;\n    let closedConnections = 0;\n    this.log('info', util.format('Draining and closing %d connections to %s', connections.length, this._address));\n    let wasClosed = false;\n    // eslint-disable-next-line prefer-const\n    let checkShutdownTimeout;\n\n    for (let i = 0; i < connections.length; i++) {\n      const c = connections[i];\n      if (c.getInFlight() === 0) {\n        getDelayedClose(c)();\n        continue;\n      }\n      c.emitDrain = true;\n      c.once('drain', getDelayedClose(c));\n    }\n\n    function getDelayedClose(connection) {\n      return (function delayedClose() {\n        connection.close();\n        if (++closedConnections < connections.length) {\n          return;\n        }\n        if (wasClosed) {\n          return;\n        }\n        wasClosed = true;\n        if (checkShutdownTimeout) {\n          clearTimeout(checkShutdownTimeout);\n        }\n        self._afterClosing();\n      });\n    }\n\n    // Check that after sometime (readTimeout + 100ms) the connections have been drained\n    const delay = (this.options.socketOptions.readTimeout || getDefaultOptions().socketOptions.readTimeout) + 100;\n    checkShutdownTimeout = setTimeout(function checkShutdown() {\n      wasClosed = true;\n      connections.forEach(function connectionEach(c) {\n        c.close();\n      });\n      self._afterClosing();\n    }, delay);\n  }\n\n  _afterClosing() {\n    const self = this;\n\n    function resetState() {\n      if (self._state === state.shuttingDown) {\n        self._state = state.shutDown;\n      } else {\n        self._state = state.initial;\n      }\n\n      self.emit('close');\n\n      if (self._state === state.shutDown) {\n        self.emit('shutdown');\n      }\n    }\n\n    if (this._opening) {\n      // The pool is growing, reset the state back to init once the open finished (without any new connection)\n      return this.once('open', resetState);\n    }\n\n    resetState();\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async shutdown() {\n    this.clearNewConnectionAttempt();\n\n    if (!this.connections.length) {\n      this._state = state.shutDown;\n      return;\n    }\n\n    const previousState = this._state;\n    this._state = state.shuttingDown;\n\n    if (previousState === state.closing || previousState === state.shuttingDown) {\n      // When previous state was closing, it will drain all connections and close them\n      // When previous state was \"shuttingDown\", it will close all the connections\n      // Once it's completed, shutdown event will be emitted\n      return promiseUtils.fromEvent(this, 'shutdown');\n    }\n\n    await this._closeAllConnections();\n\n    this._state = state.shutDown;\n    this.emit('shutdown');\n  }\n\n  async _closeAllConnections() {\n    const connections = this.connections;\n    // point to an empty array\n    this.connections = utils.emptyArray;\n    if (connections.length === 0) {\n      return;\n    }\n\n    this.log('info', util.format('Closing %d connections to %s', connections.length, this._address));\n\n    await Promise.all(connections.map(c => c.closeAsync()));\n  }\n}\n\n/** Lazily loads the default options */\nfunction getDefaultOptions() {\n  if (defaultOptions === undefined) {\n    defaultOptions = clientOptions.defaultOptions();\n  }\n  return defaultOptions;\n}\n\nmodule.exports = HostConnectionPool;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst errors = require('./errors');\nconst utils = require('./utils');\nconst types = require('./types');\nconst promiseUtils = require('./promise-utils');\n\n/**\n * Encapsulates the logic for dealing with the different prepare request and response flows, including failover when\n * trying to prepare a query.\n */\nclass PrepareHandler {\n  /**\n   * Creates a new instance of PrepareHandler\n   * @param {Client} client\n   * @param {LoadBalancingPolicy} loadBalancing\n   */\n  constructor(client, loadBalancing) {\n    this._client = client;\n    this._loadBalancing = loadBalancing;\n    this.logEmitter = client.options.logEmitter;\n    this.log = utils.log;\n  }\n\n  /**\n   * Gets the query id and metadata for a prepared statement, preparing it on\n   * single host or on all hosts depending on the options.\n   * @param {Client} client\n   * @param {LoadBalancingPolicy} loadBalancing\n   * @param {String} query\n   * @param {String} keyspace\n   * @returns {Promise<{queryId, meta}>}\n   * @static\n   */\n  static async getPrepared(client, loadBalancing, query, keyspace) {\n    const info = client.metadata.getPreparedInfo(keyspace, query);\n    if (info.queryId) {\n      return info;\n    }\n\n    if (info.preparing) {\n      // It's already being prepared\n      return await promiseUtils.fromEvent(info, 'prepared');\n    }\n\n    const instance = new PrepareHandler(client, loadBalancing);\n    return await instance._prepare(info, query, keyspace);\n  }\n\n  /**\n   * @param {Client} client\n   * @param {LoadBalancingPolicy} loadBalancing\n   * @param {Array} queries\n   * @param {String} keyspace\n   * @static\n   */\n  static async getPreparedMultiple(client, loadBalancing, queries, keyspace) {\n    const result = [];\n\n    for (const item of queries) {\n      let query;\n\n      if (item) {\n        query = typeof item === 'string' ? item : item.query;\n      }\n\n      if (typeof query !== 'string') {\n        throw new errors.ArgumentError('Query item should be a string');\n      }\n\n      const { queryId, meta } = await PrepareHandler.getPrepared(client, loadBalancing, query, keyspace);\n      result.push({ query, params: utils.adaptNamedParamsPrepared(item.params, meta.columns), queryId, meta });\n    }\n\n    return result;\n  }\n\n  /**\n   * Prepares the query on a single host or on all hosts depending on the options.\n   * Uses the info 'prepared' event to emit the result.\n   * @param {Object} info\n   * @param {String} query\n   * @param {String} keyspace\n   * @returns {Promise<{queryId, meta}>}\n   */\n  async _prepare(info, query, keyspace) {\n    info.preparing = true;\n    let iterator;\n\n    try {\n      iterator = await promiseUtils.newQueryPlan(this._loadBalancing, keyspace, null);\n      return await this._prepareWithQueryPlan(info, iterator, query, keyspace);\n    } catch (err) {\n      info.preparing = false;\n      err.query = query;\n      info.emit('prepared', err);\n\n      throw err;\n    }\n  }\n\n  /**\n   * Uses the query plan to prepare the query on the first host and optionally on the rest of the hosts.\n   * @param {Object} info\n   * @param {Iterator} iterator\n   * @param {String} query\n   * @param {String} keyspace\n   * @returns {Promise<{queryId, meta}>}\n   * @private\n   */\n  async _prepareWithQueryPlan(info, iterator, query, keyspace) {\n    const triedHosts = {};\n\n    while (true) {\n      const host = PrepareHandler.getNextHost(iterator, this._client.profileManager, triedHosts);\n\n      if (host === null) {\n        throw new errors.NoHostAvailableError(triedHosts);\n      }\n\n      try {\n        const connection = await PrepareHandler._borrowWithKeyspace(host, keyspace);\n        const response = await connection.prepareOnceAsync(query, keyspace);\n\n        if (this._client.options.prepareOnAllHosts) {\n          await this._prepareOnAllHosts(iterator, query, keyspace);\n        }\n\n        // Set the prepared metadata\n        info.preparing = false;\n        info.queryId = response.id;\n        info.meta = response.meta;\n        this._client.metadata.setPreparedById(info);\n        info.emit('prepared', null, info);\n\n        return info;\n\n      } catch (err) {\n        triedHosts[host.address] = err;\n\n        if (!err.isSocketError && !(err instanceof errors.OperationTimedOutError)) {\n          // There's no point in retrying syntax errors and other response errors\n          throw err;\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets the next host from the query plan.\n   * @param {Iterator} iterator\n   * @param {ProfileManager} profileManager\n   * @param {Object} [triedHosts]\n   * @return {Host|null}\n   */\n  static getNextHost(iterator, profileManager, triedHosts) {\n    let host;\n    // Get a host that is UP in a sync loop\n    while (true) {\n      const item = iterator.next();\n      if (item.done) {\n        return null;\n      }\n\n      host = item.value;\n\n      // set the distance relative to the client first\n      const distance = profileManager.getDistance(host);\n      if (distance === types.distance.ignored) {\n        //If its marked as ignore by the load balancing policy, move on.\n        continue;\n      }\n\n      if (host.isUp()) {\n        break;\n      }\n\n      if (triedHosts) {\n        triedHosts[host.address] = 'Host considered as DOWN';\n      }\n    }\n\n    return host;\n  }\n\n  /**\n   * Prepares all queries on a single host.\n   * @param {Host} host\n   * @param {Array} allPrepared\n   */\n  static async prepareAllQueries(host, allPrepared) {\n    const anyKeyspaceQueries = [];\n\n    const queriesByKeyspace = new Map();\n    allPrepared.forEach(info => {\n      let arr;\n      if (info.keyspace) {\n        arr = queriesByKeyspace.get(info.keyspace);\n\n        if (!arr) {\n          arr = [];\n          queriesByKeyspace.set(info.keyspace, arr);\n        }\n      } else {\n        arr = anyKeyspaceQueries;\n      }\n\n      arr.push(info.query);\n    });\n\n    for (const [keyspace, queries] of queriesByKeyspace) {\n      await PrepareHandler._borrowAndPrepare(host, keyspace, queries);\n    }\n\n    await PrepareHandler._borrowAndPrepare(host, null, anyKeyspaceQueries);\n  }\n\n  /**\n   * Borrows a connection from the host and prepares the queries provided.\n   * @param {Host} host\n   * @param {String} keyspace\n   * @param {Array} queries\n   * @returns {Promise<void>}\n   * @private\n   */\n  static async _borrowAndPrepare(host, keyspace, queries) {\n    if (queries.length === 0) {\n      return;\n    }\n\n    const connection = await PrepareHandler._borrowWithKeyspace(host, keyspace);\n\n    for (const query of queries) {\n      await connection.prepareOnceAsync(query, keyspace);\n    }\n  }\n\n  /**\n   * Borrows a connection and changes the active keyspace on the connection, if needed.\n   * It does not perform any retry or error handling.\n   * @param {Host!} host\n   * @param {string} keyspace\n   * @returns {Promise<Connection>}\n   * @throws {errors.BusyConnectionError} When the connection is busy.\n   * @throws {errors.ResponseError} For invalid keyspaces.\n   * @throws {Error} For socket errors.\n   * @private\n   */\n  static async _borrowWithKeyspace(host, keyspace) {\n    const connection = host.borrowConnection();\n\n    if (keyspace && connection.keyspace !== keyspace) {\n      await connection.changeKeyspace(keyspace);\n    }\n\n    return connection;\n  }\n\n  /**\n   * Prepares the provided query on all hosts, except the host provided.\n   * @param {Iterator} iterator\n   * @param {String} query\n   * @param {String} keyspace\n   * @private\n   */\n  _prepareOnAllHosts(iterator, query, keyspace) {\n    const queries = [ query ];\n    let h;\n    const hosts = [];\n\n    while ((h = PrepareHandler.getNextHost(iterator, this._client.profileManager)) !== null) {\n      hosts.push(h);\n    }\n\n    return Promise.all(hosts.map(h =>\n      PrepareHandler\n        ._borrowAndPrepare(h, keyspace, queries)\n        .catch(err => this.log('verbose', `Unexpected error while preparing query (${query}) on ${h.address}`, err))));\n  }\n}\n\nmodule.exports = PrepareHandler;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst events = require('events');\n\nconst utils = require('./utils');\nconst types = require('./types');\nconst HostConnectionPool = require('./host-connection-pool');\nconst PrepareHandler = require('./prepare-handler');\nconst promiseUtils = require('./promise-utils');\n\nconst healthResponseCountInterval = 200;\n\n/**\n * Represents a Cassandra node.\n * @extends EventEmitter\n */\nclass Host extends events.EventEmitter {\n\n  /**\n   * Creates a new Host instance.\n   */\n  constructor(address, protocolVersion, options, metadata) {\n    super();\n    /**\n     * Gets ip address and port number of the node separated by `:`.\n     * @type {String}\n     */\n    this.address = address;\n    this.setDownAt = 0;\n    this.log = utils.log;\n\n    /**\n     * Gets the timestamp of the moment when the Host was marked as UP.\n     * @type {Number|null}\n     * @ignore\n     * @internal\n     */\n    this.isUpSince = null;\n    Object.defineProperty(this, 'options', { value: options, enumerable: false, writable: false });\n\n    /**\n     * The host pool.\n     * @internal\n     * @ignore\n     * @type {HostConnectionPool}\n     */\n    Object.defineProperty(this, 'pool', { value: new HostConnectionPool(this, protocolVersion), enumerable: false });\n\n    this.pool.on('open', err => promiseUtils.toBackground(this._onNewConnectionOpen(err)));\n    this.pool.on('remove', () => this._checkPoolState());\n\n    /**\n     * Gets string containing the Cassandra version.\n     * @type {String}\n     */\n    this.cassandraVersion = null;\n\n    /**\n     * Gets data center name of the node.\n     * @type {String}\n     */\n    this.datacenter = null;\n\n    /**\n     * Gets rack name of the node.\n     * @type {String}\n     */\n    this.rack = null;\n\n    /**\n     * Gets the tokens assigned to the node.\n     * @type {Array}\n     */\n    this.tokens = null;\n\n    /**\n     * Gets the id of the host.\n     * <p>This identifier is used by the server for internal communication / gossip.</p>\n     * @type {Uuid}\n     */\n    this.hostId = null;\n\n    /**\n     * Gets string containing the DSE version or null if not set.\n     * @type {String}\n     */\n    this.dseVersion = null;\n\n    /**\n     * Gets the DSE Workloads the host is running.\n     * <p>\n     *   This is based on the \"workload\" or \"workloads\" columns in {@code system.local} and {@code system.peers}.\n     * <p/>\n     * <p>\n     *   Workload labels may vary depending on the DSE version in use;e.g. DSE 5.1 may report two distinct workloads:\n     *   <code>Search</code> and <code>Analytics</code>, while DSE 5.0 would report a single\n     *   <code>SearchAnalytics</code> workload instead. The driver simply returns the workload labels as reported by\n     *   DSE, without any form of pre-processing.\n     * <p/>\n     * <p>When the information is unavailable, this property returns an empty array.</p>\n     * @type {Array<string>}\n     */\n    this.workloads = utils.emptyArray;\n\n    // the distance as last set using the load balancing policy\n    this._distance = types.distance.ignored;\n    this._healthResponseCounter = 0;\n\n    // Make some of the private instance variables not enumerable to prevent from showing when inspecting\n    Object.defineProperty(this, '_metadata', { value: metadata, enumerable: false });\n    Object.defineProperty(this, '_healthResponseCountTimer', { value: null, enumerable: false, writable: true });\n\n    this.reconnectionSchedule = this.options.policies.reconnection.newSchedule();\n    this.reconnectionDelay = 0;\n  }\n\n  /**\n   * Marks this host as not available for query coordination, when the host was previously marked as UP, otherwise its\n   * a no-op.\n   * @internal\n   * @ignore\n   */\n  setDown() {\n    // Multiple events signaling that a host is failing could cause multiple calls to this method\n    if (this.setDownAt !== 0) {\n      // the host is already marked as Down\n      return;\n    }\n    if (this.pool.isClosing()) {\n      // the pool is being closed/shutdown, don't mind\n      return;\n    }\n    this.setDownAt = Date.now();\n    if (this.pool.coreConnectionsLength > 0) {\n      // According to the distance, there should be connections open to it => issue a warning\n      this.log('warning', `Host ${this.address} considered as DOWN. Reconnection delay ${this.reconnectionDelay}ms.`);\n    }\n    else {\n      this.log('info', `Host ${this.address} considered as DOWN.`);\n    }\n    this.emit('down');\n    this._checkPoolState();\n  }\n\n  /**\n   * Marks this host as available for querying.\n   * @param {Boolean} [clearReconnection]\n   * @internal\n   * @ignore\n   */\n  setUp(clearReconnection) {\n    if (!this.setDownAt) {\n      //The host is already marked as UP\n      return;\n    }\n    this.log('info', `Setting host ${this.address} as UP`);\n    this.setDownAt = 0;\n    this.isUpSince = Date.now();\n    //if it was unhealthy and now it is not, lets reset the reconnection schedule.\n    this.reconnectionSchedule = this.options.policies.reconnection.newSchedule();\n    if (clearReconnection) {\n      this.pool.clearNewConnectionAttempt();\n    }\n    this.emit('up');\n  }\n\n  /**\n   * Resets the reconnectionSchedule and tries to issue a reconnection immediately.\n   * @internal\n   * @ignore\n   */\n  checkIsUp() {\n    if (this.isUp()) {\n      return;\n    }\n    this.reconnectionSchedule = this.options.policies.reconnection.newSchedule();\n    this.reconnectionDelay = 0;\n    this.pool.attemptNewConnectionImmediate();\n  }\n\n  /**\n   * @param {Boolean} [waitForPending] When true, it waits for in-flight operations to be finish before closing the\n   * connections.\n   * @returns {Promise<void>}\n   * @internal\n   * @ignore\n   */\n  shutdown(waitForPending) {\n    if (this._healthResponseCountTimer) {\n      clearInterval(this._healthResponseCountTimer);\n    }\n    if (waitForPending) {\n      this.pool.drainAndShutdown();\n      // Gracefully draining and shutting down the pool is being done in the background\n      return Promise.resolve();\n    }\n    return this.pool.shutdown();\n  }\n\n  /**\n   * Determines if the node is UP now (seen as UP by the driver).\n   * @returns {boolean}\n   */\n  isUp() {\n    return !this.setDownAt;\n  }\n\n  /**\n   * Determines if the host can be considered as UP.\n   * Deprecated: Use {@link Host#isUp()} instead.\n   * @returns {boolean}\n   */\n  canBeConsideredAsUp() {\n    const self = this;\n    function hasTimePassed() {\n      return new Date().getTime() - self.setDownAt >= self.reconnectionDelay;\n    }\n    return !this.setDownAt || hasTimePassed();\n  }\n\n  /**\n   * Sets the distance of the host relative to the client using the load balancing policy.\n   * @param {Number} distance\n   * @internal\n   * @ignore\n   */\n  setDistance(distance) {\n    const previousDistance = this._distance;\n    this._distance = distance || types.distance.local;\n    if (this.options.pooling.coreConnectionsPerHost) {\n      this.pool.coreConnectionsLength = this.options.pooling.coreConnectionsPerHost[this._distance] || 0;\n    }\n    else {\n      this.pool.coreConnectionsLength = 1;\n    }\n    if (this._distance === previousDistance) {\n      return this._distance;\n    }\n    if (this._healthResponseCountTimer) {\n      clearInterval(this._healthResponseCountTimer);\n    }\n    if (this._distance === types.distance.ignored) {\n      // this host was local/remote and now must be ignored\n      this.emit('ignore');\n      this.pool.drainAndShutdown();\n    }\n    else {\n      if (!this.isUp()) {\n        this.checkIsUp();\n      }\n      // Reset the health check timer\n      this._healthResponseCountTimer = setInterval(() => {\n        this._healthResponseCounter = this.pool.getAndResetResponseCounter();\n      }, healthResponseCountInterval);\n    }\n    return this._distance;\n  }\n\n  /**\n   * Changes the protocol version of a given host\n   * @param {Number} value\n   * @internal\n   * @ignore\n   */\n  setProtocolVersion(value) {\n    this.pool.protocolVersion = value;\n  }\n\n  /**\n   * Gets the least busy connection from the pool.\n   * @param {Connection} [previousConnection] When provided, the pool should attempt to obtain a different connection.\n   * @returns {Connection!}\n   * @throws {Error}\n   * @throws {BusyConnectionError}\n   * @internal\n   * @ignore\n   */\n  borrowConnection(previousConnection) {\n    return this.pool.borrowConnection(previousConnection);\n  }\n\n  /**\n   * Creates all the connection in the pool.\n   * @param {string} keyspace\n   * @internal\n   * @ignore\n   */\n  warmupPool(keyspace) {\n    return this.pool.warmup(keyspace);\n  }\n\n  /**\n   * Starts creating the pool in the background.\n   * @internal\n   * @ignore\n   */\n  initializePool() {\n    this.pool.increaseSize();\n  }\n  /**\n   * Gets any connection that is already opened or null if not found.\n   * @returns {Connection}\n   * @internal\n   * @ignore\n   */\n  getActiveConnection() {\n    if (!this.isUp() || !this.pool.connections.length) {\n      return null;\n    }\n    return this.pool.connections[0];\n  }\n\n  /**\n   * Internal method to get the amount of responses dequeued in the last interval (between 200ms and 400ms) on all\n   * connections to the host.\n   * @returns {Number}\n   * @internal\n   * @ignore\n   */\n  getResponseCount() {\n    // Last interval plus the current count\n    return this._healthResponseCounter + this.pool.responseCounter;\n  }\n\n  /**\n   * Checks the health of a connection in the pool\n   * @param {Connection} connection\n   * @internal\n   * @ignore\n   */\n  checkHealth(connection) {\n    if (connection.timedOutOperations <= this.options.socketOptions.defunctReadTimeoutThreshold) {\n      return;\n    }\n    this.removeFromPool(connection);\n  }\n\n  /**\n   * @param {Connection} connection\n   * @internal\n   * @ignore\n   */\n  removeFromPool(connection) {\n    this.pool.remove(connection);\n    this._checkPoolState();\n  }\n\n  /**\n   * Internal method that gets the amount of in-flight requests on all connections to the host.\n   * @internal\n   * @ignore\n   */\n  getInFlight() {\n    return this.pool.getInFlight();\n  }\n\n  /**\n   * Validates that the internal state of the connection pool.\n   * If the pool size is smaller than expected, schedule a new connection attempt.\n   * If the amount of connections is 0 for not ignored hosts, the host must be down.\n   * @private\n   */\n  _checkPoolState() {\n    if (this.pool.isClosing()) {\n      return;\n    }\n    if (this.pool.connections.length < this.pool.coreConnectionsLength) {\n      // the pool needs to grow / reconnect\n      if (!this.pool.hasScheduledNewConnection()) {\n        this.reconnectionDelay = this.reconnectionSchedule.next().value;\n        this.pool.scheduleNewConnectionAttempt(this.reconnectionDelay);\n      }\n    }\n    const shouldHaveConnections = this._distance !== types.distance.ignored && this.pool.coreConnectionsLength > 0;\n    if (shouldHaveConnections && this.pool.connections.length === 0) {\n      // Mark as DOWN, if its UP\n      this.setDown();\n    }\n  }\n\n  /**\n   * Executed after an scheduled new connection attempt finished\n   * @private\n   */\n  async _onNewConnectionOpen(err) {\n    if (err) {\n      this._checkPoolState();\n      return;\n    }\n    if (!this.isUp() && this.options.rePrepareOnUp) {\n      this.log('info', `Re-preparing all queries on host ${this.address} before setting it as UP`);\n      const allPrepared = this._metadata.getAllPrepared();\n      try {\n        await PrepareHandler.prepareAllQueries(this, allPrepared);\n      }\n      catch (err) {\n        this.log('warning', `Failed re-preparing on host ${this.address}: ${err}`, err);\n      }\n    }\n    this.setUp();\n    this.pool.increaseSize();\n  }\n\n  /**\n   * Returns an array containing the Cassandra Version as an Array of Numbers having the major version in the first\n   * position.\n   * @returns {Array.<Number>}\n   */\n  getCassandraVersion() {\n    if (!this.cassandraVersion) {\n      return utils.emptyArray;\n    }\n    return this.cassandraVersion.split('-')[0].split('.').map(x => parseInt(x, 10));\n  }\n\n  /**\n   * Gets the DSE version of the host as an Array, containing the major version in the first position.\n   * In case the cluster is not a DSE cluster, it returns an empty Array.\n   * @returns {Array}\n   */\n  getDseVersion() {\n    if (!this.dseVersion) {\n      return utils.emptyArray;\n    }\n    return this.dseVersion.split('-')[0].split('.').map(x => parseInt(x, 10));\n  }\n}\n\n/**\n * Represents an associative-array of {@link Host hosts} that can be iterated.\n * It creates an internal copy when adding or removing, making it safe to iterate using the values()\n * method within async operations.\n * @extends events.EventEmitter\n * @constructor\n */\nclass HostMap extends events.EventEmitter{\n  constructor() {\n    super();\n\n    this._items = new Map();\n    this._values = null;\n\n    Object.defineProperty(this, 'length', { get: () => this.values().length, enumerable: true });\n\n    /**\n     * Emitted when a host is added to the map\n     * @event HostMap#add\n     */\n    /**\n     * Emitted when a host is removed from the map\n     * @event HostMap#remove\n     */\n  }\n\n  /**\n   * Executes a provided function once per map element.\n   * @param callback\n   */\n  forEach(callback) {\n    const items = this._items;\n    for (const [ key, value ] of items) {\n      callback(value, key);\n    }\n  }\n\n  /**\n   * Gets a {@link Host host} by key or undefined if not found.\n   * @param {String} key\n   * @returns {Host}\n   */\n  get(key) {\n    return this._items.get(key);\n  }\n\n  /**\n   * Returns an array of host addresses.\n   * @returns {Array.<String>}\n   */\n  keys() {\n    return Array.from(this._items.keys());\n  }\n\n  /**\n   * Removes an item from the map.\n   * @param {String} key The key of the host\n   * @fires HostMap#remove\n   */\n  remove(key) {\n    const value = this._items.get(key);\n    if (value === undefined) {\n      return;\n    }\n\n    // Clear cache\n    this._values = null;\n\n    // Copy the values\n    const copy = new Map(this._items);\n    copy.delete(key);\n\n    this._items = copy;\n    this.emit('remove', value);\n  }\n\n  /**\n   * Removes multiple hosts from the map.\n   * @param {Array.<String>} keys\n   * @fires HostMap#remove\n   */\n  removeMultiple(keys) {\n    // Clear value cache\n    this._values = null;\n\n    // Copy the values\n    const copy = new Map(this._items);\n    const removedHosts = [];\n\n    for (const key of keys) {\n      const h = copy.get(key);\n\n      if (!h) {\n        continue;\n      }\n\n      removedHosts.push(h);\n      copy.delete(key);\n    }\n\n    this._items = copy;\n    removedHosts.forEach(h => this.emit('remove', h));\n  }\n\n  /**\n   * Adds a new item to the map.\n   * @param {String} key The key of the host\n   * @param {Host} value The host to be added\n   * @fires HostMap#remove\n   * @fires HostMap#add\n   */\n  set(key, value) {\n    // Clear values cache\n    this._values = null;\n\n    const originalValue = this._items.get(key);\n    if (originalValue) {\n      //The internal structure does not change\n      this._items.set(key, value);\n      //emit a remove followed by a add\n      this.emit('remove', originalValue);\n      this.emit('add', value);\n      return;\n    }\n\n    // Copy the values\n    const copy = new Map(this._items);\n    copy.set(key, value);\n    this._items = copy;\n    this.emit('add', value);\n    return value;\n  }\n\n  /**\n   * Returns a shallow copy of a portion of the items into a new array object.\n   * Backward-compatibility.\n   * @param {Number} [begin]\n   * @param {Number} [end]\n   * @returns {Array}\n   * @ignore\n   */\n  slice(begin, end) {\n    if (!begin && !end) {\n      // Avoid making a copy of the copy\n      return this.values();\n    }\n\n    return this.values().slice(begin || 0, end);\n  }\n\n  /**\n   * Deprecated: Use set() instead.\n   * @ignore\n   * @deprecated\n   */\n  push(k, v) {\n    this.set(k, v);\n  }\n\n  /**\n   * Returns a shallow copy of the values of the map.\n   * @returns {Array.<Host>}\n   */\n  values() {\n    if (!this._values) {\n      // Cache the values\n      this._values = Object.freeze(Array.from(this._items.values()));\n    }\n\n    return this._values;\n  }\n\n  /**\n   * Removes all items from the map.\n   * @returns {Array.<Host>} The previous items\n   */\n  clear() {\n    const previousItems = this.values();\n\n    // Clear cache\n    this._values = null;\n\n    // Clear items\n    this._items = new Map();\n\n    // Emit events\n    previousItems.forEach(h => this.emit('remove', h));\n\n    return previousItems;\n  }\n\n  inspect() {\n    return this._items;\n  }\n\n  toJSON() {\n    // Node.js 10 and below don't support Object.fromEntries()\n    if (Object.fromEntries) {\n      return Object.fromEntries(this._items);\n    }\n\n    const obj = {};\n    for (const [ key, value ] of this._items) {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n}\n\nmodule.exports = {\n  Host,\n  HostMap\n};","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst types = require('./types');\nconst token = require('./token');\nconst utils = require('./utils');\nconst MutableLong = require('./types/mutable-long');\nconst { Integer } = types;\n\n// Murmur3 constants\n//-0x783C846EEEBDAC2B\nconst mconst1 = new MutableLong(0x53d5, 0x1142, 0x7b91, 0x87c3);\n//0x4cf5ad432745937f\nconst mconst2 = new MutableLong(0x937f, 0x2745, 0xad43, 0x4cf5);\nconst mlongFive = MutableLong.fromNumber(5);\n//0xff51afd7ed558ccd\nconst mconst3 = new MutableLong(0x8ccd, 0xed55, 0xafd7, 0xff51);\n//0xc4ceb9fe1a85ec53\nconst mconst4 = new MutableLong(0xec53, 0x1a85, 0xb9fe, 0xc4ce);\nconst mconst5 = MutableLong.fromNumber(0x52dce729);\nconst mconst6 = MutableLong.fromNumber(0x38495ab5);\n\n/**\n * Represents a set of methods that are able to generate and parse tokens for the C* partitioner.\n * @abstract\n */\nclass Tokenizer {\n  constructor() {\n\n  }\n\n  /**\n   * Creates a token based on the Buffer value provided\n   * @abstract\n   * @param {Buffer|Array} value\n   * @returns {Token} Computed token\n   */\n  hash(value) {\n    throw new Error('You must implement a hash function for the tokenizer');\n  }\n\n  /**\n   * Parses a token string and returns a representation of the token\n   * @abstract\n   * @param {String} value\n   */\n  parse(value) {\n    throw new Error('You must implement a parse function for the tokenizer');\n  }\n\n  minToken() {\n    throw new Error('You must implement a minToken function for the tokenizer');\n  }\n\n  /**\n   * Splits the range specified by start and end into numberOfSplits equal parts.\n   * @param {Token} start Starting token\n   * @param {Token} end  End token\n   * @param {Number} numberOfSplits Number of splits to make.\n   */\n  split(start, end, numberOfSplits) {\n    throw new Error('You must implement a split function for the tokenizer');\n  }\n\n  /**\n   * Common implementation for splitting token ranges when start is in\n   * a shared Integer format.\n   *\n   * @param {Integer} start Starting token\n   * @param {Integer} range How large the range of the split is\n   * @param {Integer} ringEnd The end point of the ring so we know where to wrap\n   * @param {Integer} ringLength The total size of the ring\n   * @param {Number} numberOfSplits The number of splits to make\n   * @returns {Array<Integer>} The evenly-split points on the range\n   */\n  splitBase(start, range, ringEnd, ringLength, numberOfSplits) {\n    const numberOfSplitsInt = Integer.fromInt(numberOfSplits);\n    const divider = range.divide(numberOfSplitsInt);\n    let remainder = range.modulo(numberOfSplitsInt);\n\n    const results = [];\n    let current = start;\n    const dividerPlusOne = divider.add(Integer.ONE);\n\n    for(let i = 1; i < numberOfSplits; i++) {\n      if (remainder.greaterThan(Integer.ZERO)) {\n        current = current.add(dividerPlusOne);\n      } else {\n        current = current.add(divider);\n      }\n      if (ringLength && current.greaterThan(ringEnd)) {\n        current = current.subtract(ringLength);\n      }\n      results.push(current);\n      remainder = remainder.subtract(Integer.ONE);\n    }\n    return results;\n  }\n\n  /**\n   * Return internal string based representation of a Token.\n   * @param {Token} token \n   */\n  stringify(token) {\n    return token.getValue().toString();\n  }\n}\n\n/**\n * Uniformly distributes data across the cluster based on Cassandra flavored Murmur3 hashed values.\n */\nclass Murmur3Tokenizer extends Tokenizer {\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Buffer} value\n   * @return {Murmur3Token}\n   */\n  hash(value) {\n    // This is an adapted version of the MurmurHash.hash3_x64_128 from Cassandra used\n    // for M3P. Compared to that methods, there's a few inlining of arguments and we\n    // only return the first 64-bits of the result since that's all M3 partitioner uses.\n\n    const data = value;\n    let offset = 0;\n    const length = data.length;\n\n    const nblocks = length >> 4; // Process as 128-bit blocks.\n\n    const h1 = new MutableLong();\n    const h2 = new MutableLong();\n    let k1 = new MutableLong();\n    let k2 = new MutableLong();\n\n    for (let i = 0; i < nblocks; i++) {\n      k1 = this.getBlock(data, offset, i * 2);\n      k2 = this.getBlock(data, offset, i * 2 + 1);\n\n      k1.multiply(mconst1);\n      this.rotl64(k1, 31);\n      k1.multiply(mconst2);\n\n      h1.xor(k1);\n      this.rotl64(h1, 27);\n      h1.add(h2);\n      h1.multiply(mlongFive).add(mconst5);\n\n      k2.multiply(mconst2);\n      this.rotl64(k2, 33);\n      k2.multiply(mconst1);\n      h2.xor(k2);\n      this.rotl64(h2, 31);\n      h2.add(h1);\n      h2.multiply(mlongFive).add(mconst6);\n    }\n    //----------\n    // tail\n\n    // Advance offset to the unprocessed tail of the data.\n    offset += nblocks * 16;\n\n    k1 = new MutableLong();\n    k2 = new MutableLong();\n\n    /* eslint-disable no-fallthrough */\n    switch(length & 15) {\n      case 15:\n        k2.xor(fromSignedByte(data[offset+14]).shiftLeft(48));\n      case 14:\n        k2.xor(fromSignedByte(data[offset+13]).shiftLeft(40));\n      case 13:\n        k2.xor(fromSignedByte(data[offset+12]).shiftLeft(32));\n      case 12:\n        k2.xor(fromSignedByte(data[offset+11]).shiftLeft(24));\n      case 11:\n        k2.xor(fromSignedByte(data[offset+10]).shiftLeft(16));\n      case 10:\n        k2.xor(fromSignedByte(data[offset+9]).shiftLeft(8));\n      case 9:\n        k2.xor(fromSignedByte(data[offset+8]));\n        k2.multiply(mconst2);\n        this.rotl64(k2, 33);\n        k2.multiply(mconst1);\n        h2.xor(k2);\n      case 8:\n        k1.xor(fromSignedByte(data[offset+7]).shiftLeft(56));\n      case 7:\n        k1.xor(fromSignedByte(data[offset+6]).shiftLeft(48));\n      case 6:\n        k1.xor(fromSignedByte(data[offset+5]).shiftLeft(40));\n      case 5:\n        k1.xor(fromSignedByte(data[offset+4]).shiftLeft(32));\n      case 4:\n        k1.xor(fromSignedByte(data[offset+3]).shiftLeft(24));\n      case 3:\n        k1.xor(fromSignedByte(data[offset+2]).shiftLeft(16));\n      case 2:\n        k1.xor(fromSignedByte(data[offset+1]).shiftLeft(8));\n      case 1:\n        k1.xor(fromSignedByte(data[offset]));\n        k1.multiply(mconst1);\n        this.rotl64(k1,31);\n        k1.multiply(mconst2);\n        h1.xor(k1);\n    }\n    /* eslint-enable no-fallthrough */\n\n    h1.xor(MutableLong.fromNumber(length));\n    h2.xor(MutableLong.fromNumber(length));\n\n    h1.add(h2);\n    h2.add(h1);\n\n\n    this.fmix(h1);\n    this.fmix(h2);\n\n    h1.add(h2);\n\n    return new token.Murmur3Token(h1);\n  }\n\n  /**\n   *\n   * @param {Array<Number>} key\n   * @param {Number} offset\n   * @param {Number} index\n   * @return {MutableLong}\n   */\n  getBlock(key, offset, index) {\n    const i8 = index << 3;\n    const blockOffset = offset + i8;\n    return new MutableLong(\n      (key[blockOffset]) | (key[blockOffset + 1] << 8),\n      (key[blockOffset + 2]) | (key[blockOffset + 3] << 8),\n      (key[blockOffset + 4]) | (key[blockOffset + 5] << 8),\n      (key[blockOffset + 6]) | (key[blockOffset + 7] << 8)\n    );\n  }\n\n  /**\n   * @param {MutableLong} v\n   * @param {Number} n\n   */\n  rotl64(v, n) {\n    const left = v.clone().shiftLeft(n);\n    v.shiftRightUnsigned(64 - n).or(left);\n  }\n\n  /** @param {MutableLong} k */\n  fmix(k) {\n    k.xor(new MutableLong(k.getUint16(2) >>> 1 | ((k.getUint16(3) << 15) & 0xffff), k.getUint16(3) >>> 1, 0, 0));\n    k.multiply(mconst3);\n    const other = new MutableLong(\n      (k.getUint16(2) >>> 1) | ((k.getUint16(3) << 15) & 0xffff),\n      k.getUint16(3) >>> 1,\n      0,\n      0\n    );\n    k.xor(other);\n    k.multiply(mconst4);\n    k.xor(new MutableLong(k.getUint16(2) >>> 1 | (k.getUint16(3) << 15 & 0xffff), k.getUint16(3) >>> 1, 0, 0));\n  }\n\n  /**\n   * Parses a int64 decimal string representation into a MutableLong.\n   * @param {String} value\n   * @returns {Murmur3Token}\n   */\n  parse(value) {\n    return new token.Murmur3Token(MutableLong.fromString(value));\n  }\n\n  minToken() {\n    if (!this._minToken) {\n      // minimum long value.\n      this._minToken = this.parse('-9223372036854775808');\n    }\n    return this._minToken;\n  }\n\n  maxToken() {\n    if (!this._maxToken) {\n      this._maxToken = this.parse('9223372036854775807');\n    }\n    return this._maxToken;\n  }\n\n  maxValue() {\n    if (!this._maxValue) {\n      this._maxValue = Integer.fromString('9223372036854775807');\n    }\n    return this._maxValue;\n  }\n\n  minValue() {\n    if (!this._minValue) {\n      this._minValue = Integer.fromString('-9223372036854775808');\n    }\n    return this._minValue;\n  }\n\n  ringLength() {\n    if (!this._ringLength) {\n      this._ringLength = this.maxValue().subtract(this.minValue());\n    }\n    return this._ringLength;\n  }\n\n  split(start, end, numberOfSplits) {\n    // ]min, min] means the whole ring.\n    if (start.equals(end) && start.equals(this.minToken())) {\n      end = this.maxToken();\n    }\n\n    const startVal = Integer.fromString(start.getValue().toString());\n    const endVal = Integer.fromString(end.getValue().toString());\n\n    let range = endVal.subtract(startVal);\n    if (range.isNegative()) {\n      range = range.add(this.ringLength());\n    }\n\n    const values = this.splitBase(startVal, range, this.maxValue(), this.ringLength(), numberOfSplits);\n    return values.map(v => this.parse(v.toString()));\n  }\n\n  stringify(token) {\n    // Get the underlying MutableLong\n    const value = token.getValue();\n    // We need a way to uniquely represent a token, it doesn't have to be the decimal string representation\n    // Using the uint16 avoids divisions and other expensive operations on the longs\n    return value.getUint16(0) + ',' + value.getUint16(1) + ',' + value.getUint16(2) + ',' + value.getUint16(3);\n  }\n}\n\n/**\n * Uniformly distributes data across the cluster based on MD5 hash values.\n */\nclass RandomTokenizer extends Tokenizer {\n  constructor() {\n    super();\n    // eslint-disable-next-line\n    this._crypto = require('crypto');\n  }\n\n  /**\n   * @param {Buffer|Array} value\n   * @returns {RandomToken}\n   */\n  hash(value) {\n    if (Array.isArray(value)) {\n      value = utils.allocBufferFromArray(value);\n    }\n    const hashedValue = this._crypto.createHash('md5').update(value).digest();\n    return new token.RandomToken(Integer.fromBuffer(hashedValue).abs());\n  }\n\n  /**\n   * @returns {Token}\n   */\n  parse(value) {\n    return new token.RandomToken(Integer.fromString(value));\n  }\n\n  minToken() {\n    if (!this._minToken) {\n      this._minToken = this.parse('-1');\n    }\n    return this._minToken;\n  }\n\n  maxValue() {\n    if (!this._maxValue) {\n      this._maxValue = Integer.fromNumber(Math.pow(2, 127));\n    }\n    return this._maxValue;\n  }\n\n  maxToken() {\n    if (!this._maxToken) {\n      this._maxToken = new token.RandomToken(this.maxValue());\n    }\n    return this._maxToken;\n  }\n\n  ringLength() {\n    if (!this._ringLength) {\n      this._ringLength = this.maxValue().add(Integer.ONE);\n    }\n    return this._ringLength;\n  }\n\n  split(start, end, numberOfSplits) {\n    // ]min, min] means the whole ring.\n    if (start.equals(end) && start.equals(this.minToken())) {\n      end = this.maxToken();\n    }\n\n    const startVal = start.getValue();\n    const endVal = end.getValue();\n\n    let range = endVal.subtract(startVal);\n    if (range.lessThan(Integer.ZERO)) {\n      range = range.add(this.ringLength());\n    }\n\n    const values = this.splitBase(startVal, range, this.maxValue(), this.ringLength(), numberOfSplits);\n    return values.map(v => new token.RandomToken(v));\n  }\n}\n\nclass ByteOrderedTokenizer extends Tokenizer {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Buffer} value\n   * @returns {ByteOrderedToken}\n   */\n  hash(value) {\n    // strip any trailing zeros as tokens with trailing zeros are equivalent\n    // to those who don't have them.\n    if (Array.isArray(value)) {\n      value = utils.allocBufferFromArray(value);\n    }\n    let zeroIndex = value.length;\n    for(let i = value.length - 1; i > 0; i--) {\n      if(value[i] === 0) {\n        zeroIndex = i;\n      } else {\n        break;\n      }\n    }\n    return new token.ByteOrderedToken(value.slice(0, zeroIndex));\n  }\n\n  stringify(token) {\n    return token.getValue().toString('hex');\n  }\n\n  parse(value) {\n    return this.hash(utils.allocBufferFromString(value, 'hex'));\n  }\n\n  minToken() {\n    if (!this._minToken) {\n      this._minToken = this.hash([]);\n    }\n    return this._minToken;\n  }\n\n  _toNumber(buffer, significantBytes) {\n    // Convert a token's byte array to a number in order to perform computations.\n    // This depends on the number of significant bytes that is used to normalize all tokens\n    // to the same size.  For example if the token is 0x01 but significant bytes is 2, the\n    // result is 0x0100.\n    let target = buffer;\n    if(buffer.length !== significantBytes) {\n      target = Buffer.alloc(significantBytes);\n      buffer.copy(target);\n    }\n\n    // similar to Integer.fromBuffer except we force the sign to 0.\n    const bits = new Array(Math.ceil(target.length / 4));\n    for (let i = 0; i < bits.length; i++) {\n      let offset = target.length - ((i + 1) * 4);\n      let value;\n      if (offset < 0) {\n        //The buffer length is not multiple of 4\n        offset = offset + 4;\n        value = 0;\n        for (let j = 0; j < offset; j++) {\n          const byte = target[j];\n          value = value | (byte << (offset - j - 1) * 8);\n        }\n      }\n      else {\n        value = target.readInt32BE(offset);\n      }\n      bits[i] = value;\n    }\n    return new Integer(bits, 0);\n  }\n\n  _toBuffer(number, significantBytes) {\n    // Convert numeric representation back to a buffer.\n    const buffer = Integer.toBuffer(number);\n    if (buffer.length === significantBytes) {\n      return buffer;\n    }\n\n    // if first byte is a sign byte, skip it.\n    let start, length;\n    if (buffer[0] === 0) {\n      start = 1;\n      length = buffer.length - 1;\n    } else {\n      start = 0;\n      length = buffer.length;\n    }\n\n    const target = Buffer.alloc(significantBytes);\n    buffer.copy(target, significantBytes - length, start, length + start);\n    return target;\n  }\n\n  split(start, end, numberOfSplits) {\n    const tokenOrder = start.compare(end);\n\n    if (tokenOrder === 0 && start.equals(this.minToken())) {\n      throw new Error(\"Cannot split whole ring with ordered partitioner\");\n    }\n\n    let startVal, endVal, range, ringLength, ringEnd;\n    const intNumberOfSplits = Integer.fromNumber(numberOfSplits);\n    // Since tokens are compared lexicographically, convert to numbers using the\n    // largest length (i.e. given 0x0A and 0x0BCD, switch to 0x0A00 and 0x0BCD)\n    let significantBytes = Math.max(start.getValue().length, end.getValue().length);\n    if (tokenOrder < 0) {\n      let addedBytes = 0;\n      while (true) {\n        startVal = this._toNumber(start.getValue(), significantBytes);\n        endVal = this._toNumber(end.getValue(), significantBytes);\n        range = endVal.subtract(startVal);\n        if (addedBytes === 4 || range.compare(intNumberOfSplits) >= 0) {\n          break;\n        }\n        significantBytes += 1;\n        addedBytes += 1;\n      }\n    } else {\n      let addedBytes = 0;\n      while (true) {\n        startVal = this._toNumber(start.getValue(), significantBytes);\n        endVal = this._toNumber(end.getValue(), significantBytes);\n        ringLength = Integer.fromNumber(Math.pow(2, significantBytes * 8));\n        ringEnd = ringLength.subtract(Integer.ONE);\n        range = endVal.subtract(startVal).add(ringLength);\n        if (addedBytes === 4 || range.compare(intNumberOfSplits) >= 0) {\n          break;\n        }\n        significantBytes += 1;\n        addedBytes += 1;\n      }\n    }\n\n    const values = this.splitBase(startVal, range, ringEnd, ringLength, numberOfSplits);\n    return values.map(v => new token.ByteOrderedToken(this._toBuffer(v, significantBytes)));\n  }\n}\n\n/**\n * @param {Number} value\n * @return {MutableLong}\n */\nfunction fromSignedByte(value) {\n  if (value < 128) {\n    return new MutableLong(value, 0, 0, 0);\n  }\n  return new MutableLong((value - 256) & 0xffff, 0xffff, 0xffff, 0xffff);\n}\n\nexports.Murmur3Tokenizer = Murmur3Tokenizer;\nexports.RandomTokenizer = RandomTokenizer;\nexports.ByteOrderedTokenizer = ByteOrderedTokenizer;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\nconst events = require('events');\n/**\n * Creates a new instance of DataCollection\n * @param {String} name Name of the data object.\n * @classdesc Describes a table or a view\n * @alias module:metadata~DataCollection\n * @constructor\n * @abstract\n */\nfunction DataCollection(name) {\n  events.EventEmitter.call(this);\n  this.setMaxListeners(0);\n  //private\n  Object.defineProperty(this, 'loading', { value: false, enumerable: false, writable: true });\n  Object.defineProperty(this, 'loaded', { value: false, enumerable: false, writable: true });\n  /**\n   * Name of the object\n   * @type {String}\n   */\n  this.name = name;\n  /**\n   * False-positive probability for SSTable Bloom filters.\n   * @type {number}\n   */\n  this.bloomFilterFalsePositiveChance = 0;\n  /**\n   * Level of caching: all, keys_only, rows_only, none\n   * @type {String}\n   */\n  this.caching = null;\n  /**\n   * A human readable comment describing the table.\n   * @type {String}\n   */\n  this.comment = null;\n  /**\n   * Specifies the time to wait before garbage collecting tombstones (deletion markers)\n   * @type {number}\n   */\n  this.gcGraceSeconds = 0;\n  /**\n   * Compaction strategy class used for the table.\n   * @type {String}\n   */\n  this.compactionClass = null;\n  /**\n   * Associative-array containing the compaction options keys and values.\n   * @type {Object}\n   */\n  this.compactionOptions = null;\n  /**\n   * Associative-array containing the compression options.\n   * @type {Object}\n   */\n  this.compression = null;\n  /**\n   * Specifies the probability of read repairs being invoked over all replicas in the current data center.\n   * @type {number}\n   */\n  this.localReadRepairChance = 0;\n  /**\n   * Specifies the probability with which read repairs should be invoked on non-quorum reads. The value must be\n   * between 0 and 1.\n   * @type {number}\n   */\n  this.readRepairChance = 0;\n  /**\n   * An associative Array containing extra metadata for the table.\n   * <p>\n   * For Apache Cassandra versions prior to 3.0.0, this method always returns <code>null</code>.\n   * </p>\n   * @type {Object}\n   */\n  this.extensions = null;\n  /**\n   * When compression is enabled, this option defines the probability\n   * with which checksums for compressed blocks are checked during reads.\n   * The default value for this options is 1.0 (always check).\n   * <p>\n   *   For Apache Cassandra versions prior to 3.0.0, this method always returns <code>null</code>.\n   * </p>\n   * @type {Number|null}\n   */\n  this.crcCheckChance = null;\n  /**\n   * Whether the populate I/O cache on flush is set on this table.\n   * @type {Boolean}\n   */\n  this.populateCacheOnFlush = false;\n  /**\n   * Returns the default TTL for this table.\n   * @type {Number}\n   */\n  this.defaultTtl = 0;\n  /**\n   * * Returns the speculative retry option for this table.\n   * @type {String}\n   */\n  this.speculativeRetry = 'NONE';\n  /**\n   * Returns the minimum index interval option for this table.\n   * <p>\n   *   Note: this option is available in Apache Cassandra 2.1 and above, and will return <code>null</code> for\n   *   earlier versions.\n   * </p>\n   * @type {Number|null}\n   */\n  this.minIndexInterval = 128;\n  /**\n   * Returns the maximum index interval option for this table.\n   * <p>\n   * Note: this option is available in Apache Cassandra 2.1 and above, and will return <code>null</code> for\n   * earlier versions.\n   * </p>\n   * @type {Number|null}\n   */\n  this.maxIndexInterval = 2048;\n  /**\n   * Array describing the table columns.\n   * @type {Array}\n   */\n  this.columns = null;\n  /**\n   * An associative Array of columns by name.\n   * @type {Object}\n   */\n  this.columnsByName = null;\n  /**\n   * Array describing the columns that are part of the partition key.\n   * @type {Array}\n   */\n  this.partitionKeys = [];\n  /**\n   * Array describing the columns that form the clustering key.\n   * @type {Array}\n   */\n  this.clusteringKeys = [];\n  /**\n   * Array describing the clustering order of the columns in the same order as the clusteringKeys.\n   * @type {Array}\n   */\n  this.clusteringOrder = [];\n  /**\n   * An associative Array containing nodesync options for this table.\n   * <p>\n   * For DSE versions prior to 6.0.0, this method always returns {@code null}.  If nodesync\n   * was not explicitly configured for this table this method will also return {@code null}.\n   * </p>\n   * @type {Object}\n   */\n  this.nodesync = null;\n}\n\nutil.inherits(DataCollection, events.EventEmitter);\n\nmodule.exports = DataCollection;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst util = require('util');\nconst DataCollection = require('./data-collection');\n/**\n * Creates a new instance of TableMetadata\n * @classdesc Describes a table\n * @param {String} name Name of the Table\n * @augments {module:metadata~DataCollection}\n * @alias module:metadata~TableMetadata\n * @constructor\n */\nfunction TableMetadata(name) {\n  DataCollection.call(this, name);\n  /**\n   * Applies only to counter tables.\n   * When set to true, replicates writes to all affected replicas regardless of the consistency level specified by\n   * the client for a write request. For counter tables, this should always be set to true.\n   * @type {Boolean}\n   */\n  this.replicateOnWrite = true;\n  /**\n   * Returns the memtable flush period (in milliseconds) option for this table.\n   * @type {Number}\n   */\n  this.memtableFlushPeriod = 0;\n  /**\n   * Returns the index interval option for this table.\n   * <p>\n   * Note: this option is only available in Apache Cassandra 2.0. It is deprecated in Apache Cassandra 2.1 and\n   * above, and will therefore return <code>null</code> for 2.1 nodes.\n   * </p>\n   * @type {Number|null}\n   */\n  this.indexInterval = null;\n  /**\n   * Determines  whether the table uses the COMPACT STORAGE option.\n   * @type {Boolean}\n   */\n  this.isCompact = false;\n  /**\n   *\n   * @type {Array.<Index>}\n   */\n  this.indexes = null;\n\n  /**\n   * Determines whether the Change Data Capture (CDC) flag is set for the table.\n   * @type {Boolean|null}\n   */\n  this.cdc = null;\n\n  /**\n   * Determines whether the table is a virtual table or not.\n   * @type {Boolean}\n   */\n  this.virtual = false;\n}\n\nutil.inherits(TableMetadata, DataCollection);\n\nmodule.exports = TableMetadata;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\n/**\n * Creates a new Aggregate.\n * @classdesc Describes a CQL aggregate.\n * @alias module:metadata~Aggregate\n * @constructor\n */\nfunction Aggregate() {\n  /**\n   * Name of the aggregate.\n   * @type {String}\n   */\n  this.name = null;\n  /**\n   * Name of the keyspace where the aggregate is declared.\n   */\n  this.keyspaceName = null;\n  /**\n   * Signature of the aggregate.\n   * @type {Array.<String>}\n   */\n  this.signature = null;\n  /**\n   * List of the CQL aggregate argument types.\n   * @type {Array.<{code, info}>}\n   */\n  this.argumentTypes = null;\n  /**\n   * State Function.\n   * @type {String}\n   */\n  this.stateFunction = null;\n  /**\n   * State Type.\n   * @type {{code, info}}\n   */\n  this.stateType = null;\n  /**\n   * Final Function.\n   * @type {String}\n   */\n  this.finalFunction = null;\n  this.initConditionRaw = null;\n  /**\n   * Initial state value of this aggregate.\n   * @type {String}\n   */\n  this.initCondition = null;\n  /**\n   * Type of the return value.\n   * @type {{code: number, info: (Object|Array|null)}}\n   */\n  this.returnType = null;\n  /**\n   * Indicates whether or not this aggregate is deterministic.  This means that\n   * given a particular input, the aggregate will always produce the same output.\n   * @type {Boolean}\n   */\n  this.deterministic = null;\n}\n\nmodule.exports = Aggregate;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\n/**\n * Creates a new SchemaFunction.\n * @classdesc Describes a CQL function.\n * @alias module:metadata~SchemaFunction\n * @constructor\n */\nfunction SchemaFunction() {\n  /**\n   * Name of the cql function.\n   * @type {String}\n   */\n  this.name = null;\n  /**\n   * Name of the keyspace where the cql function is declared.\n   */\n  this.keyspaceName = null;\n  /**\n   * Signature of the function.\n   * @type {Array.<String>}\n   */\n  this.signature = null;\n  /**\n   * List of the function argument names.\n   * @type {Array.<String>}\n   */\n  this.argumentNames = null;\n  /**\n   * List of the function argument types.\n   * @type {Array.<{code, info}>}\n   */\n  this.argumentTypes = null;\n  /**\n   * Body of the function.\n   * @type {String}\n   */\n  this.body = null;\n  /**\n   * Determines if the function is called when the input is null.\n   * @type {Boolean}\n   */\n  this.calledOnNullInput = null;\n  /**\n   * Name of the programming language, for example: java, javascript, ...\n   * @type {String}\n   */\n  this.language = null;\n  /**\n   * Type of the return value.\n   * @type {{code: number, info: (Object|Array|null)}}\n   */\n  this.returnType = null;\n  /**\n   * Indicates whether or not this function is deterministic.  This means that\n   * given a particular input, the function will always produce the same output.\n   * @type {Boolean}\n   */\n  this.deterministic = null;\n  /**\n   * Indicates whether or not this function is monotonic on all of its\n   * arguments.  This means that it is either entirely non-increasing or\n   * non-decreasing.  Even if the function is not monotonic on all of its\n   * arguments, it's possible to specify that it is monotonic on one of\n   * its arguments, meaning that partial applications of the function over\n   * that argument will be monotonic.\n   * \n   * Monotonicity is required to use the function in a GROUP BY clause.\n   * @type {Boolean}\n   */\n  this.monotonic = null;\n  /**\n   * The argument names that the function is monotonic on.\n   * \n   * If {@link monotonic} is true, this will return all argument names.\n   * Otherwise, this will return either one argument or an empty array.\n   * @type {Array.<String>}\n   */\n  this.monotonicOn = null;\n}\n\nmodule.exports = SchemaFunction;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\nconst utils = require('../utils');\nconst types = require('../types');\n\n/** @private */\nconst kind = {\n  custom: 0,\n  keys: 1,\n  composites: 2\n};\n/**\n * Creates a new Index instance.\n * @classdesc Describes a CQL index.\n * @param {String} name\n * @param {String} target\n * @param {Number|String} kind\n * @param {Object} options\n * @alias module:metadata~Index\n * @constructor\n */\nfunction Index(name, target, kind, options) {\n  /**\n   * Name of the index.\n   * @type {String}\n   */\n  this.name = name;\n  /**\n   * Target of the index.\n   * @type {String}\n   */\n  this.target = target;\n  /**\n   * A numeric value representing index kind (0: custom, 1: keys, 2: composite);\n   * @type {Number}\n   */\n  this.kind = typeof kind === 'string' ? getKindByName(kind) : kind;\n  /**\n   * An associative array containing the index options\n   * @type {Object}\n   */\n  this.options = options;\n}\n\n/**\n * Determines if the index is of composites kind\n * @returns {Boolean}\n */\nIndex.prototype.isCompositesKind = function () {\n  return this.kind === kind.composites;\n};\n\n/**\n * Determines if the index is of keys kind\n * @returns {Boolean}\n */\nIndex.prototype.isKeysKind = function () {\n  return this.kind === kind.keys;\n};\n\n/**\n * Determines if the index is of custom kind\n * @returns {Boolean}\n */\nIndex.prototype.isCustomKind = function () {\n  return this.kind === kind.custom;\n};\n\n/**\n * Parses Index information from rows in the 'system_schema.indexes' table\n * @deprecated It will be removed in the next major version.\n * @param {Array.<Row>} indexRows\n * @returns {Array.<Index>}\n */\nIndex.fromRows = function (indexRows) {\n  if (!indexRows || indexRows.length === 0) {\n    return utils.emptyArray;\n  }\n  return indexRows.map(function (row) {\n    const options = row['options'];\n    return new Index(row['index_name'], options['target'], getKindByName(row['kind']), options);\n  });\n};\n\n/**\n * Parses Index information from rows in the legacy 'system.schema_columns' table.\n * @deprecated It will be removed in the next major version.\n * @param {Array.<Row>} columnRows\n * @param {Object.<String, {name, type}>} columnsByName\n * @returns {Array.<Index>}\n */\nIndex.fromColumnRows = function (columnRows, columnsByName) {\n  const result = [];\n  for (let i = 0; i < columnRows.length; i++) {\n    const row = columnRows[i];\n    const indexName = row['index_name'];\n    if (!indexName) {\n      continue;\n    }\n    const c = columnsByName[row['column_name']];\n    let target;\n    const options = JSON.parse(row['index_options']);\n    if (options !== null && options['index_keys'] !== undefined) {\n      target = util.format(\"keys(%s)\", c.name);\n    }\n    else if (options !== null && options['index_keys_and_values'] !== undefined) {\n      target = util.format(\"entries(%s)\", c.name);\n    }\n    else if (c.type.options.frozen && (c.type.code === types.dataTypes.map || c.type.code === types.dataTypes.list ||\n      c.type.code === types.dataTypes.set)) {\n      target = util.format(\"full(%s)\", c.name);\n    }\n    else {\n      target = c.name;\n    }\n    result.push(new Index(indexName, target, getKindByName(row['index_type']), options));\n  }\n  return result;\n};\n\n/**\n * Gets the number representing the kind based on the name\n * @param {String} name\n * @returns {Number}\n * @private\n */\nfunction getKindByName(name) {\n  if (!name) {\n    return kind.custom;\n  }\n  return kind[name.toLowerCase()];\n}\n\nmodule.exports = Index;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\nconst DataCollection = require('./data-collection');\n/**\n * Creates a new MaterializedView.\n * @param {String} name Name of the View.\n * @classdesc Describes a CQL materialized view.\n * @alias module:metadata~MaterializedView\n * @augments {module:metadata~DataCollection}\n * @constructor\n */\nfunction MaterializedView(name) {\n  DataCollection.call(this, name);\n  /**\n   * Name of the table.\n   * @type {String}\n   */\n  this.tableName = null;\n  /**\n   * View where clause.\n   * @type {String}\n   */\n  this.whereClause = null;\n  /**\n   * Determines if all the table columns where are included in the view.\n   * @type {boolean}\n   */\n  this.includeAllColumns = false;\n}\n\nutil.inherits(MaterializedView, DataCollection);\n\nmodule.exports = MaterializedView;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\nconst util = require('util');\nconst events = require('events');\nconst types = require('../types');\nconst utils = require('../utils');\nconst errors = require('../errors');\nconst promiseUtils = require('../promise-utils');\nconst TableMetadata = require('./table-metadata');\nconst Aggregate = require('./aggregate');\nconst SchemaFunction = require('./schema-function');\nconst Index = require('./schema-index');\nconst MaterializedView = require('./materialized-view');\nconst { format } = util;\n\n/**\n * @module metadata/schemaParser\n * @ignore\n */\n\nconst _selectAllKeyspacesV1 = \"SELECT * FROM system.schema_keyspaces\";\nconst _selectSingleKeyspaceV1 = \"SELECT * FROM system.schema_keyspaces where keyspace_name = '%s'\";\nconst _selectAllKeyspacesV2 = \"SELECT * FROM system_schema.keyspaces\";\nconst _selectSingleKeyspaceV2 = \"SELECT * FROM system_schema.keyspaces where keyspace_name = '%s'\";\nconst _selectTableV1 = \"SELECT * FROM system.schema_columnfamilies WHERE keyspace_name='%s' AND columnfamily_name='%s'\";\nconst _selectTableV2 = \"SELECT * FROM system_schema.tables WHERE keyspace_name='%s' AND table_name='%s'\";\nconst _selectColumnsV1 = \"SELECT * FROM system.schema_columns WHERE keyspace_name='%s' AND columnfamily_name='%s'\";\nconst _selectColumnsV2 = \"SELECT * FROM system_schema.columns WHERE keyspace_name='%s' AND table_name='%s'\";\nconst _selectIndexesV2 = \"SELECT * FROM system_schema.indexes WHERE keyspace_name='%s' AND table_name='%s'\";\nconst _selectUdtV1 = \"SELECT * FROM system.schema_usertypes WHERE keyspace_name='%s' AND type_name='%s'\";\nconst _selectUdtV2 = \"SELECT * FROM system_schema.types WHERE keyspace_name='%s' AND type_name='%s'\";\nconst _selectFunctionsV1 = \"SELECT * FROM system.schema_functions WHERE keyspace_name = '%s' AND function_name = '%s'\";\nconst _selectFunctionsV2 = \"SELECT * FROM system_schema.functions WHERE keyspace_name = '%s' AND function_name = '%s'\";\nconst _selectAggregatesV1 = \"SELECT * FROM system.schema_aggregates WHERE keyspace_name = '%s' AND aggregate_name = '%s'\";\nconst _selectAggregatesV2 = \"SELECT * FROM system_schema.aggregates WHERE keyspace_name = '%s' AND aggregate_name = '%s'\";\nconst _selectMaterializedViewV2 = \"SELECT * FROM system_schema.views WHERE keyspace_name = '%s' AND view_name = '%s'\";\n\nconst _selectAllVirtualKeyspaces = \"SELECT * FROM system_virtual_schema.keyspaces\";\nconst _selectSingleVirtualKeyspace = \"SELECT * FROM system_virtual_schema.keyspaces where keyspace_name = '%s'\";\nconst _selectVirtualTable = \"SELECT * FROM system_virtual_schema.tables where keyspace_name = '%s' and table_name='%s'\";\nconst _selectVirtualColumns = \"SELECT * FROM system_virtual_schema.columns where keyspace_name = '%s' and table_name='%s'\";\n\n\n/**\n * @abstract\n * @param {ClientOptions} options The client options\n * @param {ControlConnection} cc\n * @constructor\n * @ignore\n */\nclass SchemaParser {\n  constructor(options, cc) {\n    this.cc = cc;\n    this.encodingOptions = options.encoding;\n    this.selectTable = null;\n    this.selectColumns = null;\n    this.selectIndexes = null;\n    this.selectUdt = null;\n    this.selectAggregates = null;\n    this.selectFunctions = null;\n    this.supportsVirtual = false;\n  }\n\n  /**\n   * @param name\n   * @param durableWrites\n   * @param strategy\n   * @param strategyOptions\n   * @param virtual\n   * @returns {{name, durableWrites, strategy, strategyOptions, tokenToReplica, udts, tables, functions, aggregates}}\n   * @protected\n   */\n  _createKeyspace(name, durableWrites, strategy, strategyOptions, virtual) {\n    return {\n      name,\n      durableWrites,\n      strategy,\n      strategyOptions,\n      virtual: virtual === true,\n      udts: {},\n      tables: {},\n      functions: {},\n      aggregates: {},\n      views: {},\n      tokenToReplica: getTokenToReplicaMapper(strategy, strategyOptions),\n      graphEngine: undefined\n    };\n  }\n\n  /**\n   * @abstract\n   * @param {String} name\n   * @returns {Promise<Object>}\n   */\n  getKeyspace(name) {\n  }\n\n  /**\n   * @abstract\n   * @param {Boolean} waitReconnect\n   * @returns {Promise<Object<string, Object>>}\n   */\n  getKeyspaces(waitReconnect) {\n  }\n\n  /**\n   * @param {String} keyspaceName\n   * @param {String} name\n   * @param {Object} cache\n   * @param {Boolean} virtual\n   * @returns {Promise<TableMetadata|null>}\n   */\n  async getTable(keyspaceName, name, cache, virtual) {\n    let tableInfo = cache && cache[name];\n    if (!tableInfo) {\n      tableInfo = new TableMetadata(name);\n      if (cache) {\n        cache[name] = tableInfo;\n      }\n    }\n    if (tableInfo.loaded) {\n      return tableInfo;\n    }\n    if (tableInfo.loading) {\n      // Wait for it to emit\n      return promiseUtils.fromEvent(tableInfo, 'load');\n    }\n    try {\n      // its not cached and not being retrieved\n      tableInfo.loading = true;\n      let indexRows;\n      let virtualTable = virtual;\n      const selectTable = virtualTable ? _selectVirtualTable : this.selectTable;\n      const query = util.format(selectTable, keyspaceName, name);\n      let tableRow = await this._getFirstRow(query);\n      // if we weren't sure if table was virtual or not, query virtual schema.\n      if (!tableRow && this.supportsVirtual && virtualTable === undefined) {\n        const query = util.format(_selectVirtualTable, keyspaceName, name);\n        try {\n          tableRow = await this._getFirstRow(query);\n        }\n        catch (err) {\n          // we can't error here as we can't be sure if the node\n          // supports virtual tables, in this case it is adequate\n          // to act as if there was no matching table.\n        }\n        if (tableRow) {\n          // We are fetching a virtual table\n          virtualTable = true;\n        }\n      }\n      if (!tableRow) {\n        tableInfo.loading = false;\n        tableInfo.emit('load', null, null);\n        return null;\n      }\n      const selectColumns = virtualTable ? _selectVirtualColumns : this.selectColumns;\n      const columnRows = await this._getRows(util.format(selectColumns, keyspaceName, name));\n      if (this.selectIndexes && !virtualTable) {\n        indexRows = await this._getRows(util.format(this.selectIndexes, keyspaceName, name));\n      }\n      await this._parseTableOrView(tableInfo, tableRow, columnRows, indexRows, virtualTable);\n      tableInfo.loaded = true;\n      tableInfo.emit('load', null, tableInfo);\n      return tableInfo;\n    }\n    catch (err) {\n      tableInfo.emit('load', err, null);\n      throw err;\n    }\n    finally {\n      tableInfo.loading = false;\n    }\n  }\n\n  async _getFirstRow(query) {\n    const rows = await this._getRows(query);\n    return rows[0];\n  }\n\n  async _getRows(query) {\n    const response = await this.cc.query(query);\n    return response.rows;\n  }\n\n  /**\n   * @param {String} keyspaceName\n   * @param {String} name\n   * @param {Object} cache\n   * @returns {Promise<Object|null>}\n   */\n  async getUdt(keyspaceName, name, cache) {\n    let udtInfo = cache && cache[name];\n    if (!udtInfo) {\n      udtInfo = new events.EventEmitter();\n      if (cache) {\n        cache[name] = udtInfo;\n      }\n      udtInfo.setMaxListeners(0);\n      udtInfo.loading = false;\n      udtInfo.name = name;\n      udtInfo.keyspace = keyspaceName;\n      udtInfo.fields = null;\n    }\n    if (udtInfo.fields) {\n      return udtInfo;\n    }\n    if (udtInfo.loading) {\n      return promiseUtils.fromEvent(udtInfo, 'load');\n    }\n    udtInfo.loading = true;\n    const query = format(this.selectUdt, keyspaceName, name);\n    try {\n      const row = await this._getFirstRow(query);\n      if (!row) {\n        udtInfo.loading = false;\n        udtInfo.emit('load', null, null);\n        return null;\n      }\n      await this._parseUdt(udtInfo, row);\n      udtInfo.emit('load', null, udtInfo);\n      return udtInfo;\n    }\n    catch (err) {\n      udtInfo.emit('load', err);\n      throw err;\n    }\n    finally {\n      udtInfo.loading = false;\n    }\n  }\n\n  /**\n   * Parses the udt information from the row\n   * @param udtInfo\n   * @param {Row} row\n   * @returns {Promise<void>}\n   * @abstract\n   */\n  _parseUdt(udtInfo, row) {\n  }\n\n  /**\n   * Builds the metadata based on the table and column rows\n   * @abstract\n   * @param {module:metadata~TableMetadata} tableInfo\n   * @param {Row} tableRow\n   * @param {Array.<Row>} columnRows\n   * @param {Array.<Row>} indexRows\n   * @param {Boolean} virtual\n   * @returns {Promise<void>}\n   * @throws {Error}\n   */\n  async _parseTableOrView(tableInfo, tableRow, columnRows, indexRows, virtual) {\n  }\n\n  /**\n   * @abstract\n   * @param {String} keyspaceName\n   * @param {String} name\n   * @param {Object} cache\n   * @returns {Promise<MaterializedView|null>}\n   */\n  getMaterializedView(keyspaceName, name, cache) {\n  }\n\n  /**\n   * @param {String} keyspaceName\n   * @param {String} name\n   * @param {Boolean} aggregate\n   * @param {Object} cache\n   * @returns {Promise<Map>}\n   */\n  async getFunctions(keyspaceName, name, aggregate, cache) {\n    /** @type {String} */\n    let query = this.selectFunctions;\n    let parser = row => this._parseFunction(row);\n    if (aggregate) {\n      query = this.selectAggregates;\n      parser = row => this._parseAggregate(row);\n    }\n    // if it's not already loaded, get all functions with that name\n    // cache it by name and, within name, by signature\n    let functionsInfo = cache && cache[name];\n    if (!functionsInfo) {\n      functionsInfo = new events.EventEmitter();\n      if (cache) {\n        cache[name] = functionsInfo;\n      }\n      functionsInfo.setMaxListeners(0);\n    }\n    if (functionsInfo.values) {\n      return functionsInfo.values;\n    }\n    if (functionsInfo.loading) {\n      return promiseUtils.fromEvent(functionsInfo, 'load');\n    }\n    functionsInfo.loading = true;\n    try {\n      const rows = await this._getRows(format(query, keyspaceName, name));\n      const funcs = await Promise.all(rows.map(parser));\n      const result = new Map();\n      if (rows.length > 0) {\n        // Cache positive hits\n        functionsInfo.values = result;\n      }\n\n      funcs.forEach(f => functionsInfo.values.set(f.signature.join(','), f));\n      functionsInfo.emit('load', null, result);\n      return result;\n    }\n    catch (err) {\n      functionsInfo.emit('load', err);\n      throw err;\n    }\n    finally {\n      functionsInfo.loading = false;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {Row} row\n   * @returns {Promise}\n   */\n  _parseAggregate(row) {\n  }\n\n  /**\n   * @abstract\n   * @param {Row} row\n   * @returns {Promise}\n   */\n  _parseFunction(row) {\n  }\n\n  /** @returns {Map} */\n  _asMap(obj) {\n    if (!obj) {\n      return new Map();\n    }\n    if (this.encodingOptions.map && obj instanceof this.encodingOptions.map) {\n      // Its already a Map or a polyfill of a Map\n      return obj;\n    }\n    return new Map(Object.keys(obj).map(k => [k, obj[k]]));\n  }\n\n  _mapAsObject(map) {\n    if (!map) {\n      return map;\n    }\n    if (this.encodingOptions.map && map instanceof this.encodingOptions.map) {\n      const result = {};\n      map.forEach((value, key) => result[key] = value);\n      return result;\n    }\n    return map;\n  }\n}\n\n/**\n * Used to parse schema information for Cassandra versions 1.2.x, and 2.x\n * @ignore\n */\nclass SchemaParserV1 extends SchemaParser {\n\n  /**\n   * @param {ClientOptions} options\n   * @param {ControlConnection} cc\n   */\n  constructor(options, cc) {\n    super(options, cc);\n    this.selectTable = _selectTableV1;\n    this.selectColumns = _selectColumnsV1;\n    this.selectUdt = _selectUdtV1;\n    this.selectAggregates = _selectAggregatesV1;\n    this.selectFunctions = _selectFunctionsV1;\n  }\n\n  async getKeyspaces(waitReconnect) {\n    const keyspaces = {};\n    const result = await this.cc.query(_selectAllKeyspacesV1, waitReconnect);\n    for (let i = 0; i < result.rows.length; i++) {\n      const row = result.rows[i];\n      const ksInfo = this._createKeyspace(row['keyspace_name'], row['durable_writes'], row['strategy_class'], JSON.parse(row['strategy_options'] || null));\n      keyspaces[ksInfo.name] = ksInfo;\n    }\n    return keyspaces;\n  }\n\n  async getKeyspace(name) {\n    const row = await this._getFirstRow(format(_selectSingleKeyspaceV1, name));\n    if (!row) {\n      return null;\n    }\n    return this._createKeyspace(row['keyspace_name'], row['durable_writes'], row['strategy_class'], JSON.parse(row['strategy_options']));\n  }\n\n  // eslint-disable-next-line require-await\n  async _parseTableOrView(tableInfo, tableRow, columnRows, indexRows, virtual) {\n    // All the tableInfo parsing in V1 is sync, it uses a async function because the super class defines one\n    // to support other versions.\n    let c, name, types;\n    const encoder = this.cc.getEncoder();\n    const columnsKeyed = {};\n    let partitionKeys = [];\n    let clusteringKeys = [];\n    tableInfo.bloomFilterFalsePositiveChance = tableRow['bloom_filter_fp_chance'];\n    tableInfo.caching = tableRow['caching'];\n    tableInfo.comment = tableRow['comment'];\n    tableInfo.compactionClass = tableRow['compaction_strategy_class'];\n    tableInfo.compactionOptions = JSON.parse(tableRow['compaction_strategy_options']);\n    tableInfo.compression = JSON.parse(tableRow['compression_parameters']);\n    tableInfo.gcGraceSeconds = tableRow['gc_grace_seconds'];\n    tableInfo.localReadRepairChance = tableRow['local_read_repair_chance'];\n    tableInfo.readRepairChance = tableRow['read_repair_chance'];\n    tableInfo.populateCacheOnFlush = tableRow['populate_io_cache_on_flush'] || tableInfo.populateCacheOnFlush;\n    tableInfo.memtableFlushPeriod = tableRow['memtable_flush_period_in_ms'] || tableInfo.memtableFlushPeriod;\n    tableInfo.defaultTtl = tableRow['default_time_to_live'] || tableInfo.defaultTtl;\n    tableInfo.speculativeRetry = tableRow['speculative_retry'] || tableInfo.speculativeRetry;\n    tableInfo.indexInterval = tableRow['index_interval'] || tableInfo.indexInterval;\n    if (typeof tableRow['min_index_interval'] !== 'undefined') {\n      //Cassandra 2.1+\n      tableInfo.minIndexInterval = tableRow['min_index_interval'] || tableInfo.minIndexInterval;\n      tableInfo.maxIndexInterval = tableRow['max_index_interval'] || tableInfo.maxIndexInterval;\n    }\n    else {\n      //set to null\n      tableInfo.minIndexInterval = null;\n      tableInfo.maxIndexInterval = null;\n    }\n    if (typeof tableRow['replicate_on_write'] !== 'undefined') {\n      //leave the default otherwise\n      tableInfo.replicateOnWrite = tableRow['replicate_on_write'];\n    }\n    tableInfo.columns = [];\n    for (let i = 0; i < columnRows.length; i++) {\n      const row = columnRows[i];\n      const type = encoder.parseFqTypeName(row['validator']);\n      c = {\n        name: row['column_name'],\n        type: type,\n        isStatic: false\n      };\n      tableInfo.columns.push(c);\n      columnsKeyed[c.name] = c;\n      switch (row['type']) {\n        case 'partition_key':\n          partitionKeys.push({ c: c, index: (row['component_index'] || 0) });\n          break;\n        case 'clustering_key':\n          clusteringKeys.push({\n            c: c,\n            index: (row['component_index'] || 0),\n            order: c.type.options.reversed ? 'DESC' : 'ASC'\n          });\n          break;\n        case 'static':\n          // C* 2.0.6+ supports static columns\n          c.isStatic = true;\n          break;\n      }\n    }\n    if (partitionKeys.length > 0) {\n      tableInfo.partitionKeys = partitionKeys.sort(utils.propCompare('index')).map(item => item.c);\n      clusteringKeys.sort(utils.propCompare('index'));\n      tableInfo.clusteringKeys = clusteringKeys.map(item => item.c);\n      tableInfo.clusteringOrder = clusteringKeys.map(item => item.order);\n    }\n    // In C* 1.2, keys are not stored on the schema_columns table\n    const keysStoredInTableRow = (tableInfo.partitionKeys.length === 0);\n    if (keysStoredInTableRow && tableRow['key_aliases']) {\n      //In C* 1.2, keys are not stored on the schema_columns table\n      partitionKeys = JSON.parse(tableRow['key_aliases']);\n      types = encoder.parseKeyTypes(tableRow['key_validator']).types;\n      for (let i = 0; i < partitionKeys.length; i++) {\n        name = partitionKeys[i];\n        c = columnsKeyed[name];\n        if (!c) {\n          c = {\n            name: name,\n            type: types[i]\n          };\n          tableInfo.columns.push(c);\n        }\n        tableInfo.partitionKeys.push(c);\n      }\n    }\n    const comparator = encoder.parseKeyTypes(tableRow['comparator']);\n    if (keysStoredInTableRow && tableRow['column_aliases']) {\n      clusteringKeys = JSON.parse(tableRow['column_aliases']);\n      for (let i = 0; i < clusteringKeys.length; i++) {\n        name = clusteringKeys[i];\n        c = columnsKeyed[name];\n        if (!c) {\n          c = {\n            name: name,\n            type: comparator.types[i]\n          };\n          tableInfo.columns.push(c);\n        }\n        tableInfo.clusteringKeys.push(c);\n        tableInfo.clusteringOrder.push(c.type.options.reversed ? 'DESC' : 'ASC');\n      }\n    }\n    tableInfo.isCompact = !!tableRow['is_dense'];\n    if (!tableInfo.isCompact) {\n      //is_dense column does not exist in previous versions of Cassandra\n      //also, compact pk, ck and val appear as is_dense false\n      // clusteringKeys != comparator types - 1\n      // or not composite (comparator)\n      tableInfo.isCompact = (\n        //clustering keys are not marked as composite\n        !comparator.isComposite ||\n        //only 1 column not part of the partition or clustering keys\n        (!comparator.hasCollections && tableInfo.clusteringKeys.length !== comparator.types.length - 1));\n    }\n    name = tableRow['value_alias'];\n    if (tableInfo.isCompact && name && !columnsKeyed[name]) {\n      //additional column in C* 1.2 as value_alias\n      c = {\n        name: name,\n        type: encoder.parseFqTypeName(tableRow['default_validator'])\n      };\n      tableInfo.columns.push(c);\n      columnsKeyed[name] = c;\n    }\n    tableInfo.columnsByName = columnsKeyed;\n    tableInfo.indexes = Index.fromColumnRows(columnRows, tableInfo.columnsByName);\n  }\n\n  getMaterializedView(keyspaceName, name, cache) {\n    return Promise.reject(new errors.NotSupportedError('Materialized views are not supported on Cassandra versions below 3.0'));\n  }\n\n  // eslint-disable-next-line require-await\n  async _parseAggregate(row) {\n    const encoder = this.cc.getEncoder();\n    const aggregate = new Aggregate();\n    aggregate.name = row['aggregate_name'];\n    aggregate.keyspaceName = row['keyspace_name'];\n    aggregate.signature = row['signature'] || utils.emptyArray;\n    aggregate.stateFunction = row['state_func'];\n    aggregate.finalFunction = row['final_func'];\n    aggregate.initConditionRaw = row['initcond'];\n    aggregate.argumentTypes = (row['argument_types'] || utils.emptyArray).map(name => encoder.parseFqTypeName(name));\n    aggregate.stateType = encoder.parseFqTypeName(row['state_type']);\n    const initConditionValue = encoder.decode(aggregate.initConditionRaw, aggregate.stateType);\n    if (initConditionValue !== null && typeof initConditionValue !== 'undefined') {\n      aggregate.initCondition = initConditionValue.toString();\n    }\n    aggregate.returnType = encoder.parseFqTypeName(row['return_type']);\n    return aggregate;\n  }\n\n  // eslint-disable-next-line require-await\n  async _parseFunction(row) {\n    const encoder = this.cc.getEncoder();\n    const func = new SchemaFunction();\n    func.name = row['function_name'];\n    func.keyspaceName = row['keyspace_name'];\n    func.signature = row['signature'] || utils.emptyArray;\n    func.argumentNames = row['argument_names'] || utils.emptyArray;\n    func.body = row['body'];\n    func.calledOnNullInput = row['called_on_null_input'];\n    func.language = row['language'];\n    func.argumentTypes = (row['argument_types'] || utils.emptyArray).map(name => encoder.parseFqTypeName(name));\n    func.returnType = encoder.parseFqTypeName(row['return_type']);\n    return func;\n  }\n\n  // eslint-disable-next-line require-await\n  async _parseUdt(udtInfo, row) {\n    const encoder = this.cc.getEncoder();\n    const fieldNames = row['field_names'];\n    const fieldTypes = row['field_types'];\n    const fields = new Array(fieldNames.length);\n    for (let i = 0; i < fieldNames.length; i++) {\n      fields[i] = {\n        name: fieldNames[i],\n        type: encoder.parseFqTypeName(fieldTypes[i])\n      };\n    }\n    udtInfo.fields = fields;\n    return udtInfo;\n  }\n}\n\n\n/**\n * Used to parse schema information for Cassandra versions 3.x and above\n * @param {ClientOptions} options The client options\n * @param {ControlConnection} cc The control connection to be used\n * @param {Function} udtResolver The function to be used to retrieve the udts.\n * @ignore\n */\nclass SchemaParserV2 extends SchemaParser {\n\n  /**\n   * @param {ClientOptions} options The client options\n   * @param {ControlConnection} cc The control connection to be used\n   * @param {Function} udtResolver The function to be used to retrieve the udts.\n   */\n  constructor(options, cc, udtResolver) {\n    super(options, cc);\n    this.udtResolver = udtResolver;\n    this.selectTable = _selectTableV2;\n    this.selectColumns = _selectColumnsV2;\n    this.selectUdt = _selectUdtV2;\n    this.selectAggregates = _selectAggregatesV2;\n    this.selectFunctions = _selectFunctionsV2;\n    this.selectIndexes = _selectIndexesV2;\n  }\n\n  async getKeyspaces(waitReconnect) {\n    const keyspaces = {};\n    const result = await this.cc.query(_selectAllKeyspacesV2, waitReconnect);\n    for (let i = 0; i < result.rows.length; i++) {\n      const ksInfo = this._parseKeyspace(result.rows[i]);\n      keyspaces[ksInfo.name] = ksInfo;\n    }\n    return keyspaces;\n  }\n\n  async getKeyspace(name) {\n    const row = await this._getFirstRow(format(_selectSingleKeyspaceV2, name));\n    if (!row) {\n      return null;\n    }\n    return this._parseKeyspace(row);\n  }\n\n  async getMaterializedView(keyspaceName, name, cache) {\n    let viewInfo = cache && cache[name];\n    if (!viewInfo) {\n      viewInfo = new MaterializedView(name);\n      if (cache) {\n        cache[name] = viewInfo;\n      }\n    }\n    if (viewInfo.loaded) {\n      return viewInfo;\n    }\n    if (viewInfo.loading) {\n      return promiseUtils.fromEvent(viewInfo, 'load');\n    }\n    viewInfo.loading = true;\n    try {\n      const tableRow = await this._getFirstRow(format(_selectMaterializedViewV2, keyspaceName, name));\n      if (!tableRow) {\n        viewInfo.emit('load', null, null);\n        viewInfo.loading = false;\n        return null;\n      }\n      const columnRows = await this._getRows(format(this.selectColumns, keyspaceName, name));\n      await this._parseTableOrView(viewInfo, tableRow, columnRows, null, false);\n      viewInfo.loaded = true;\n      viewInfo.emit('load', null, viewInfo);\n      return viewInfo;\n    }\n    catch (err) {\n      viewInfo.emit('load', err);\n      throw err;\n    }\n    finally {\n      viewInfo.loading = false;\n    }\n  }\n\n  _parseKeyspace(row, virtual) {\n    const replication = row['replication'];\n    let strategy;\n    let strategyOptions;\n    if (replication) {\n      strategy = replication['class'];\n      strategyOptions = {};\n      for (const key in replication) {\n        if (!replication.hasOwnProperty(key) || key === 'class') {\n          continue;\n        }\n        strategyOptions[key] = replication[key];\n      }\n    }\n\n    const ks = this._createKeyspace(row['keyspace_name'], row['durable_writes'], strategy, strategyOptions, virtual);\n    ks.graphEngine = row['graph_engine'];\n    return ks;\n  }\n\n  async _parseTableOrView(tableInfo, tableRow, columnRows, indexRows, virtual) {\n    const encoder = this.cc.getEncoder();\n    const columnsKeyed = {};\n    const partitionKeys = [];\n    const clusteringKeys = [];\n    tableInfo.columns = await Promise.all(columnRows.map(async (row) => {\n      const type = await encoder.parseTypeName(tableRow['keyspace_name'], row['type'], 0, null, this.udtResolver);\n      const c = {\n        name: row['column_name'],\n        type: type,\n        isStatic: false\n      };\n      columnsKeyed[c.name] = c;\n      switch (row['kind']) {\n        case 'partition_key':\n          partitionKeys.push({ c, index: (row['position'] || 0) });\n          break;\n        case 'clustering':\n          clusteringKeys.push({\n            c, index: (row['position'] || 0), order: row['clustering_order'] === 'desc' ? 'DESC' : 'ASC'\n          });\n          break;\n        case 'static':\n          c.isStatic = true;\n          break;\n      }\n      return c;\n    }));\n    tableInfo.columnsByName = columnsKeyed;\n    tableInfo.partitionKeys = partitionKeys.sort(utils.propCompare('index')).map(item => item.c);\n    clusteringKeys.sort(utils.propCompare('index'));\n    tableInfo.clusteringKeys = clusteringKeys.map(item => item.c);\n    tableInfo.clusteringOrder = clusteringKeys.map(item => item.order);\n    if (virtual) {\n      // When table is virtual, the only relevant information to parse are the columns\n      // as the table itself has no configuration\n      tableInfo.virtual = true;\n      return;\n    }\n    const isView = tableInfo instanceof MaterializedView;\n    tableInfo.bloomFilterFalsePositiveChance = tableRow['bloom_filter_fp_chance'];\n    tableInfo.caching = JSON.stringify(tableRow['caching']);\n    tableInfo.comment = tableRow['comment'];\n    // Regardless of the encoding options, use always an Object to represent an associative Array\n    const compaction = this._asMap(tableRow['compaction']);\n    if (compaction) {\n      // compactionOptions as an Object<String, String>\n      tableInfo.compactionOptions = {};\n      tableInfo.compactionClass = compaction.get('class');\n      compaction.forEach((value, key) => {\n        if (key === 'class') {\n          return;\n        }\n        tableInfo.compactionOptions[key] = compaction.get(key);\n      });\n    }\n    // Convert compression to an Object<String, String>\n    tableInfo.compression = this._mapAsObject(tableRow['compression']);\n    tableInfo.gcGraceSeconds = tableRow['gc_grace_seconds'];\n    tableInfo.localReadRepairChance = tableRow['dclocal_read_repair_chance'];\n    tableInfo.readRepairChance = tableRow['read_repair_chance'];\n    tableInfo.extensions = this._mapAsObject(tableRow['extensions']);\n    tableInfo.crcCheckChance = tableRow['crc_check_chance'];\n    tableInfo.memtableFlushPeriod = tableRow['memtable_flush_period_in_ms'] || tableInfo.memtableFlushPeriod;\n    tableInfo.defaultTtl = tableRow['default_time_to_live'] || tableInfo.defaultTtl;\n    tableInfo.speculativeRetry = tableRow['speculative_retry'] || tableInfo.speculativeRetry;\n    tableInfo.minIndexInterval = tableRow['min_index_interval'] || tableInfo.minIndexInterval;\n    tableInfo.maxIndexInterval = tableRow['max_index_interval'] || tableInfo.maxIndexInterval;\n    tableInfo.nodesync = tableRow['nodesync'] || tableInfo.nodesync;\n    if (!isView) {\n      const cdc = tableRow['cdc'];\n      if (cdc !== undefined) {\n        tableInfo.cdc = cdc;\n      }\n    }\n    if (isView) {\n      tableInfo.tableName = tableRow['base_table_name'];\n      tableInfo.whereClause = tableRow['where_clause'];\n      tableInfo.includeAllColumns = tableRow['include_all_columns'];\n      return;\n    }\n    tableInfo.indexes = this._getIndexes(indexRows);\n    // flags can be an instance of Array or Set (real or polyfill)\n    let flags = tableRow['flags'];\n    if (Array.isArray(flags)) {\n      flags = new Set(flags);\n    }\n    const isDense = flags.has('dense');\n    const isSuper = flags.has('super');\n    const isCompound = flags.has('compound');\n    tableInfo.isCompact = isSuper || isDense || !isCompound;\n    // Remove the columns related to Thrift\n    const isStaticCompact = !isSuper && !isDense && !isCompound;\n    if (isStaticCompact) {\n      pruneStaticCompactTableColumns(tableInfo);\n    }\n    else if (isDense) {\n      pruneDenseTableColumns(tableInfo);\n    }\n  }\n\n  _getIndexes(indexRows) {\n    if (!indexRows || indexRows.length === 0) {\n      return utils.emptyArray;\n    }\n    return indexRows.map((row) => {\n      const options = this._mapAsObject(row['options']);\n      return new Index(row['index_name'], options['target'], row['kind'], options);\n    });\n  }\n\n  async _parseAggregate(row) {\n    const encoder = this.cc.getEncoder();\n    const aggregate = new Aggregate();\n    aggregate.name = row['aggregate_name'];\n    aggregate.keyspaceName = row['keyspace_name'];\n    aggregate.signature = row['argument_types'] || utils.emptyArray;\n    aggregate.stateFunction = row['state_func'];\n    aggregate.finalFunction = row['final_func'];\n    aggregate.initConditionRaw = row['initcond'];\n    aggregate.initCondition = aggregate.initConditionRaw;\n    aggregate.deterministic = row['deterministic'] || false;\n    aggregate.argumentTypes = await Promise.all(aggregate.signature.map(name => encoder.parseTypeName(row['keyspace_name'], name, 0, null, this.udtResolver)));\n    aggregate.stateType = await encoder.parseTypeName(row['keyspace_name'], row['state_type'], 0, null, this.udtResolver);\n    aggregate.returnType = await encoder.parseTypeName(row['keyspace_name'], row['return_type'], 0, null, this.udtResolver);\n    return aggregate;\n  }\n\n  async _parseFunction(row) {\n    const encoder = this.cc.getEncoder();\n    const func = new SchemaFunction();\n    func.name = row['function_name'];\n    func.keyspaceName = row['keyspace_name'];\n    func.signature = row['argument_types'] || utils.emptyArray;\n    func.argumentNames = row['argument_names'] || utils.emptyArray;\n    func.body = row['body'];\n    func.calledOnNullInput = row['called_on_null_input'];\n    func.language = row['language'];\n    func.deterministic = row['deterministic'] || false;\n    func.monotonic = row['monotonic'] || false;\n    func.monotonicOn = row['monotonic_on'] || utils.emptyArray;\n    func.argumentTypes = await Promise.all(func.signature.map(name => encoder.parseTypeName(row['keyspace_name'], name, 0, null, this.udtResolver)));\n    func.returnType = await encoder.parseTypeName(row['keyspace_name'], row['return_type'], 0, null, this.udtResolver);\n    return func;\n  }\n\n  async _parseUdt(udtInfo, row) {\n    const encoder = this.cc.getEncoder();\n    const fieldTypes = row['field_types'];\n    const keyspace = row['keyspace_name'];\n    udtInfo.fields = await Promise.all(row['field_names'].map(async (name, i) => {\n      const type = await encoder.parseTypeName(keyspace, fieldTypes[i], 0, null, this.udtResolver);\n      return { name, type };\n    }));\n    return udtInfo;\n  }\n}\n\n/**\n * Used to parse schema information for Cassandra versions 4.x and above.\n *\n * This parser similar to [SchemaParserV2] expect it also parses virtual\n * keyspaces.\n * @ignore\n */\nclass SchemaParserV3 extends SchemaParserV2 {\n  /**\n   * @param {ClientOptions} options The client options\n   * @param {ControlConnection} cc The control connection to be used\n   * @param {Function} udtResolver The function to be used to retrieve the udts.\n   */\n  constructor(options, cc, udtResolver) {\n    super(options, cc, udtResolver);\n    this.supportsVirtual = true;\n  }\n\n  async getKeyspaces(waitReconnect) {\n    const keyspaces = {};\n    const queries = [\n      { query: _selectAllKeyspacesV2, virtual: false },\n      { query: _selectAllVirtualKeyspaces, virtual: true }\n    ];\n\n    await Promise.all(queries.map(async (q) => {\n      let result = null;\n      try {\n        result = await this.cc.query(q.query, waitReconnect);\n      }\n      catch (err) {\n        if (q.virtual) {\n          // Only throw error for non-virtual query as\n          // server reporting C* 4.0 may not actually implement\n          // virtual tables.\n          return;\n        }\n        throw err;\n      }\n      for (let i = 0; i < result.rows.length; i++) {\n        const ksInfo = this._parseKeyspace(result.rows[i], q.virtual);\n        keyspaces[ksInfo.name] = ksInfo;\n      }\n    }));\n    return keyspaces;\n  }\n\n  async getKeyspace(name) {\n    const ks = await this._getKeyspace(_selectSingleKeyspaceV2, name, false);\n    if (!ks) {\n      // if not found, attempt to retrieve as virtual keyspace.\n      return this._getKeyspace(_selectSingleVirtualKeyspace, name, true);\n    }\n    return ks;\n  }\n\n  async _getKeyspace(query, name, virtual) {\n    try {\n      const row = await this._getFirstRow(format(query, name));\n\n      if (!row) {\n        return null;\n      }\n\n      return this._parseKeyspace(row, virtual);\n    }\n    catch (err) {\n      if (virtual) {\n        // only throw error for non-virtual query as\n        // server reporting C* 4.0 may not actually implement\n        // virtual tables.\n        return null;\n      }\n      throw err;\n    }\n  }\n}\n\n/**\n * Upon migration from thrift to CQL, we internally create a pair of surrogate clustering/regular columns\n * for compact static tables. These columns shouldn't be exposed to the user but are currently returned by C*.\n * We also need to remove the static keyword for all other columns in the table.\n * @param {module:metadata~TableMetadata} tableInfo\n*/\nfunction pruneStaticCompactTableColumns(tableInfo) {\n  let i;\n  let c;\n  //remove \"column1 text\" clustering column\n  for (i = 0; i < tableInfo.clusteringKeys.length; i++) {\n    c = tableInfo.clusteringKeys[i];\n    const index = tableInfo.columns.indexOf(c);\n    tableInfo.columns.splice(index, 1);\n    delete tableInfo.columnsByName[c.name];\n  }\n  tableInfo.clusteringKeys = utils.emptyArray;\n  tableInfo.clusteringOrder = utils.emptyArray;\n  //remove regular columns and set the static columns to non-static\n  i = tableInfo.columns.length;\n  while (i--) {\n    c = tableInfo.columns[i];\n    if (!c.isStatic && tableInfo.partitionKeys.indexOf(c) === -1) {\n      // remove \"value blob\" regular column\n      tableInfo.columns.splice(i, 1);\n      delete tableInfo.columnsByName[c.name];\n      continue;\n    }\n    c.isStatic = false;\n  }\n}\n\n/**\n * Upon migration from thrift to CQL, we internally create a surrogate column \"value\" of type custom.\n * This column shouldn't be exposed to the user but is currently returned by C*.\n * @param {module:metadata~TableMetadata} tableInfo\n */\nfunction pruneDenseTableColumns(tableInfo) {\n  let i = tableInfo.columns.length;\n  while (i--) {\n    const c = tableInfo.columns[i];\n    if (!c.isStatic && c.type.code === types.dataTypes.custom && c.type.info === 'empty') {\n      // remove \"value blob\" regular column\n      tableInfo.columns.splice(i, 1);\n      delete tableInfo.columnsByName[c.name];\n      continue;\n    }\n    c.isStatic = false;\n  }\n}\n\nfunction getTokenToReplicaMapper(strategy, strategyOptions) {\n  if (/SimpleStrategy$/.test(strategy)) {\n    const rf = parseInt(strategyOptions['replication_factor'], 10);\n    if (rf > 1) {\n      return getTokenToReplicaSimpleMapper(rf);\n    }\n  }\n  if (/NetworkTopologyStrategy$/.test(strategy)) {\n    return getTokenToReplicaNetworkMapper(strategyOptions);\n  }\n  //default, wrap in an Array\n  return (function noStrategy(tokenizer, ring, primaryReplicas) {\n    const replicas = {};\n    for (const key in primaryReplicas) {\n      if (!primaryReplicas.hasOwnProperty(key)) {\n        continue;\n      }\n      replicas[key] = [primaryReplicas[key]];\n    }\n    return replicas;\n  });\n}\n\n/**\n * @param {Number} replicationFactor\n * @returns {function}\n */\nfunction getTokenToReplicaSimpleMapper(replicationFactor) {\n  return (function tokenSimpleStrategy(tokenizer, ringTokensAsStrings, primaryReplicas) {\n    const ringLength = ringTokensAsStrings.length;\n    const rf = Math.min(replicationFactor, ringLength);\n    const replicas = {};\n    for (let i = 0; i < ringLength; i++) {\n      const key = ringTokensAsStrings[i];\n      const tokenReplicas = [primaryReplicas[key]];\n      for (let j = 1; j < ringLength && tokenReplicas.length < rf; j++) {\n        let nextReplicaIndex = i + j;\n        if (nextReplicaIndex >= ringLength) {\n          //circle back\n          nextReplicaIndex = nextReplicaIndex % ringLength;\n        }\n        const nextReplica = primaryReplicas[ringTokensAsStrings[nextReplicaIndex]];\n        // In the case of vnodes, consecutive sections of the ring can be assigned to the same host.\n        if (tokenReplicas.indexOf(nextReplica) === -1) {\n          tokenReplicas.push(nextReplica);\n        }\n      }\n      replicas[key] = tokenReplicas;\n    }\n    return replicas;\n  });\n}\n\n/**\n * @param {Object} replicationFactors\n * @returns {Function}\n * @private\n */\nfunction getTokenToReplicaNetworkMapper(replicationFactors) {\n  //                A(DC1)\n  //\n  //           H         B(DC2)\n  //                |\n  //      G       --+--       C(DC1)\n  //                |\n  //           F         D(DC2)\n  //\n  //                E(DC1)\n  return (function tokenNetworkStrategy(tokenizer, ringTokensAsStrings, primaryReplicas, datacenters) {\n    const replicas = {};\n    const ringLength = ringTokensAsStrings.length;\n\n    for (let i = 0; i < ringLength; i++) {\n      const key = ringTokensAsStrings[i];\n      const tokenReplicas = [];\n      const replicasByDc = {};\n      const racksPlaced = {};\n      const skippedHosts = [];\n      for (let j = 0; j < ringLength; j++) {\n        let nextReplicaIndex = i + j;\n        if (nextReplicaIndex >= ringLength) {\n          //circle back\n          nextReplicaIndex = nextReplicaIndex % ringLength;\n        }\n        const h = primaryReplicas[ringTokensAsStrings[nextReplicaIndex]];\n        // In the case of vnodes, consecutive sections of the ring can be assigned to the same host.\n        if (tokenReplicas.indexOf(h) !== -1) {\n          continue;\n        }\n        const dc = h.datacenter;\n        //Check if the next replica belongs to one of the targeted dcs\n        let dcRf = parseInt(replicationFactors[dc], 10);\n        if (!dcRf) {\n          continue;\n        }\n        dcRf = Math.min(dcRf, datacenters[dc].hostLength);\n        let dcReplicas = replicasByDc[dc] || 0;\n        //Amount of replicas per dc is greater than rf or the amount of host in the datacenter\n        if (dcReplicas >= dcRf) {\n          continue;\n        }\n        let racksPlacedInDc = racksPlaced[dc];\n        if (!racksPlacedInDc) {\n          racksPlacedInDc = racksPlaced[dc] = new utils.HashSet();\n        }\n        if (h.rack &&\n            racksPlacedInDc.contains(h.rack) &&\n            racksPlacedInDc.length < datacenters[dc].racks.length) {\n          // We already selected a replica for this rack\n          // Skip until replicas in other racks are added\n          if (skippedHosts.length < dcRf - dcReplicas) {\n            skippedHosts.push(h);\n          }\n          continue;\n        }\n        replicasByDc[h.datacenter] = ++dcReplicas;\n        tokenReplicas.push(h);\n        if (h.rack && racksPlacedInDc.add(h.rack) && racksPlacedInDc.length === datacenters[dc].racks.length) {\n          // We finished placing all replicas for all racks in this dc\n          // Add the skipped hosts\n          replicasByDc[dc] += addSkippedHosts(dcRf, dcReplicas, tokenReplicas, skippedHosts);\n        }\n        if (isDoneForToken(replicationFactors, datacenters, replicasByDc)) {\n          break;\n        }\n      }\n      replicas[key] = tokenReplicas;\n    }\n    return replicas;\n  });\n}\n\n/**\n * @returns {Number} The number of skipped hosts added.\n */\nfunction addSkippedHosts(dcRf, dcReplicas, tokenReplicas, skippedHosts) {\n  let i;\n  for (i = 0; i < dcRf - dcReplicas && i < skippedHosts.length; i++) {\n    tokenReplicas.push(skippedHosts[i]);\n  }\n  return i;\n}\n\nfunction isDoneForToken(replicationFactors, datacenters, replicasByDc) {\n  const keys = Object.keys(replicationFactors);\n  for (let i = 0; i < keys.length; i++) {\n    const dcName = keys[i];\n    const dc = datacenters[dcName];\n    if (!dc) {\n      // A DC is included in the RF but the DC does not exist in the topology\n      continue;\n    }\n    const rf = Math.min(parseInt(replicationFactors[dcName], 10), dc.hostLength);\n    if (rf > 0 && (!replicasByDc[dcName] || replicasByDc[dcName] < rf)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Creates a new instance if the currentInstance is not valid for the\n * provided Cassandra version\n * @param {ClientOptions} options The client options\n * @param {ControlConnection} cc The control connection to be used\n * @param {Function} udtResolver The function to be used to retrieve the udts.\n * @param {Array.<Number>} [version] The cassandra version\n * @param {SchemaParser} [currentInstance] The current instance\n * @returns {SchemaParser}\n */\nfunction getByVersion(options, cc, udtResolver, version, currentInstance) {\n  let parserConstructor = SchemaParserV1;\n  if (version && version[0] === 3) {\n    parserConstructor = SchemaParserV2;\n  } else if (version && version[0] >= 4) {\n    parserConstructor = SchemaParserV3;\n  }\n  if (!currentInstance || !(currentInstance instanceof parserConstructor)){\n    return new parserConstructor(options, cc, udtResolver);\n  }\n  return currentInstance;\n}\n\nexports.getByVersion = getByVersion;\nexports.isDoneForToken = isDoneForToken;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst events = require('events');\nconst util = require('util');\n\n/**\n * Module containing classes and fields related to metadata.\n * @module metadata\n */\n\nconst t = require('../tokenizer');\nconst utils = require('../utils');\nconst errors = require('../errors');\nconst types = require('../types');\nconst requests = require('../requests');\nconst schemaParserFactory = require('./schema-parser');\nconst promiseUtils = require('../promise-utils');\nconst { TokenRange } = require('../token');\nconst { ExecutionOptions } = require('../execution-options');\n\n/**\n * @const\n * @private\n */\nconst _selectTraceSession = \"SELECT * FROM system_traces.sessions WHERE session_id=%s\";\n/**\n * @const\n * @private\n */\nconst _selectTraceEvents = \"SELECT * FROM system_traces.events WHERE session_id=%s\";\n/**\n * @const\n * @private\n */\nconst _selectSchemaVersionPeers = \"SELECT schema_version FROM system.peers\";\n/**\n * @const\n * @private\n */\nconst _selectSchemaVersionLocal = \"SELECT schema_version FROM system.local\";\n/**\n * @const\n * @private\n */\nconst _traceMaxAttemps = 5;\n/**\n * @const\n * @private\n */\nconst _traceAttemptDelay = 400;\n\n/**\n * Represents cluster and schema information.\n * The metadata class acts as a internal state of the driver.\n */\nclass Metadata {\n\n  /**\n   * Creates a new instance of {@link Metadata}.\n   * @param {ClientOptions} options\n   * @param {ControlConnection} controlConnection Control connection used to retrieve information.\n   */\n  constructor(options, controlConnection) {\n    if (!options) {\n      throw new errors.ArgumentError('Options are not defined');\n    }\n\n    Object.defineProperty(this, 'options', { value: options, enumerable: false, writable: false });\n    Object.defineProperty(this, 'controlConnection', { value: controlConnection, enumerable: false, writable: false });\n    this.keyspaces = {};\n    this.initialized = false;\n    this._isDbaas = false;\n    this._schemaParser = schemaParserFactory.getByVersion(options, controlConnection, this.getUdt.bind(this));\n    this.log = utils.log;\n    this._preparedQueries = new PreparedQueries(options.maxPrepared, (...args) => this.log(...args));\n  }\n\n  /**\n   * Sets the cassandra version\n   * @internal\n   * @ignore\n   * @param {Array.<Number>} version\n   */\n  setCassandraVersion(version) {\n    this._schemaParser = schemaParserFactory.getByVersion(\n      this.options, this.controlConnection, this.getUdt.bind(this), version, this._schemaParser);\n  }\n\n  /**\n   * Determines whether the cluster is provided as a service.\n   * @returns {boolean} true when the cluster is provided as a service (DataStax Astra), <code>false<code> when it's a\n   * different deployment (on-prem).\n   */\n  isDbaas() {\n    return this._isDbaas;\n  }\n\n  /**\n   * Sets the product type as DBaaS.\n   * @internal\n   * @ignore\n   */\n  setProductTypeAsDbaas() {\n    this._isDbaas = true;\n  }\n\n  /**\n   * @ignore\n   * @param {String} partitionerName\n   */\n  setPartitioner(partitionerName) {\n    if (/RandomPartitioner$/.test(partitionerName)) {\n      return this.tokenizer = new t.RandomTokenizer();\n    }\n    if (/ByteOrderedPartitioner$/.test(partitionerName)) {\n      return this.tokenizer = new t.ByteOrderedTokenizer();\n    }\n    return this.tokenizer = new t.Murmur3Tokenizer();\n  }\n\n  /**\n   * Populates the information regarding primary replica per token, datacenters (+ racks) and sorted token ring.\n   * @ignore\n   * @param {HostMap} hosts\n   */\n  buildTokens(hosts) {\n    if (!this.tokenizer) {\n      return this.log('error', 'Tokenizer could not be determined');\n    }\n    //Get a sorted array of tokens\n    const allSorted = [];\n    //Get a map of <token, primaryHost>\n    const primaryReplicas = {};\n    //Depending on the amount of tokens, this could be an expensive operation\n    const hostArray = hosts.values();\n    const stringify = this.tokenizer.stringify;\n    const datacenters = {};\n    hostArray.forEach((h) => {\n      if (!h.tokens) {\n        return;\n      }\n      h.tokens.forEach((tokenString) => {\n        const token = this.tokenizer.parse(tokenString);\n        utils.insertSorted(allSorted, token, (t1, t2) => t1.compare(t2));\n        primaryReplicas[stringify(token)] = h;\n      });\n      let dc = datacenters[h.datacenter];\n      if (!dc) {\n        dc = datacenters[h.datacenter] = {\n          hostLength: 0,\n          racks: new utils.HashSet()\n        };\n      }\n      dc.hostLength++;\n      dc.racks.add(h.rack);\n    });\n    //Primary replica for given token\n    this.primaryReplicas = primaryReplicas;\n    //All the tokens in ring order\n    this.ring = allSorted;\n    // Build TokenRanges.\n    const tokenRanges = new Set();\n    if (this.ring.length === 1) {\n      // If there is only one token, return the range ]minToken, minToken]\n      const min = this.tokenizer.minToken();\n      tokenRanges.add(new TokenRange(min, min, this.tokenizer));\n    }\n    else {\n      for (let i = 0; i < this.ring.length; i++) {\n        const start = this.ring[i];\n        const end = this.ring[(i + 1) % this.ring.length];\n        tokenRanges.add(new TokenRange(start, end, this.tokenizer));\n      }\n    }\n    this.tokenRanges = tokenRanges;\n    //Compute string versions as it's potentially expensive and frequently reused later\n    this.ringTokensAsStrings = new Array(allSorted.length);\n    for (let i = 0; i < allSorted.length; i++) {\n      this.ringTokensAsStrings[i] = stringify(allSorted[i]);\n    }\n    //Datacenter metadata (host length and racks)\n    this.datacenters = datacenters;\n  }\n\n  /**\n   * Gets the keyspace metadata information and updates the internal state of the driver.\n   * <p>\n   *   If a <code>callback</code> is provided, the callback is invoked when the keyspaces metadata refresh completes.\n   *   Otherwise, it returns a <code>Promise</code>.\n   * </p>\n   * @param {String} name Name of the keyspace.\n   * @param {Function} [callback] Optional callback.\n   */\n  refreshKeyspace(name, callback) {\n    return promiseUtils.optionalCallback(this._refreshKeyspace(name), callback);\n  }\n\n  /**\n   * @param {String} name\n   * @private\n   */\n  async _refreshKeyspace(name) {\n    if (!this.initialized) {\n      throw this._uninitializedError();\n    }\n    this.log('info', util.format('Retrieving keyspace %s metadata', name));\n    try {\n      const ksInfo = await this._schemaParser.getKeyspace(name);\n      if (!ksInfo) {\n        // the keyspace was dropped\n        delete this.keyspaces[name];\n        return null;\n      }\n      // Tokens are lazily init on the keyspace, once a replica from that keyspace is retrieved.\n      this.keyspaces[ksInfo.name] = ksInfo;\n      return ksInfo;\n    }\n    catch (err) {\n      this.log('error', 'There was an error while trying to retrieve keyspace information', err);\n      throw err;\n    }\n  }\n\n  /**\n   * Gets the metadata information of all the keyspaces and updates the internal state of the driver.\n   * <p>\n   *   If a <code>callback</code> is provided, the callback is invoked when the keyspace metadata refresh completes.\n   *   Otherwise, it returns a <code>Promise</code>.\n   * </p>\n   * @param {Boolean|Function} [waitReconnect] Determines if it should wait for reconnection in case the control connection is not\n   * connected at the moment. Default: true.\n   * @param {Function} [callback] Optional callback.\n   */\n  refreshKeyspaces(waitReconnect, callback) {\n    if (typeof waitReconnect === 'function' || typeof waitReconnect === 'undefined') {\n      callback = waitReconnect;\n      waitReconnect = true;\n    }\n    if (!this.initialized) {\n      const err = this._uninitializedError();\n      if (callback) {\n        return callback(err);\n      }\n      return Promise.reject(err);\n    }\n    return promiseUtils.optionalCallback(this.refreshKeyspacesInternal(waitReconnect), callback);\n  }\n\n  /**\n   * @param {Boolean} waitReconnect\n   * @returns {Promise<Object<string, Object>>}\n   * @ignore\n   * @internal\n   */\n  async refreshKeyspacesInternal(waitReconnect) {\n    this.log('info', 'Retrieving keyspaces metadata');\n    try {\n      this.keyspaces = await this._schemaParser.getKeyspaces(waitReconnect);\n      return this.keyspaces;\n    }\n    catch (err) {\n      this.log('error', 'There was an error while trying to retrieve keyspaces information', err);\n      throw err;\n    }\n  }\n\n  _getKeyspaceReplicas(keyspace) {\n    if (!keyspace.replicas) {\n      //Calculate replicas the first time for the keyspace\n      keyspace.replicas =\n        keyspace.tokenToReplica(this.tokenizer, this.ringTokensAsStrings, this.primaryReplicas, this.datacenters);\n    }\n    return keyspace.replicas;\n  }\n\n  /**\n   * Gets the host list representing the replicas that contain the given partition key, token or token range.\n   * <p>\n   *   It uses the pre-loaded keyspace metadata to retrieve the replicas for a token for a given keyspace.\n   *   When the keyspace metadata has not been loaded, it returns null.\n   * </p>\n   * @param {String} keyspaceName\n   * @param {Buffer|Token|TokenRange} token Can be Buffer (serialized partition key), Token or TokenRange\n   * @returns {Array}\n   */\n  getReplicas(keyspaceName, token) {\n    if (!this.ring) {\n      return null;\n    }\n    if (Buffer.isBuffer(token)) {\n      token = this.tokenizer.hash(token);\n    }\n    if (token instanceof TokenRange) {\n      token = token.end;\n    }\n    let keyspace;\n    if (keyspaceName) {\n      keyspace = this.keyspaces[keyspaceName];\n      if (!keyspace) {\n        // the keyspace was not found, the metadata should be loaded beforehand\n        return null;\n      }\n    }\n    let i = utils.binarySearch(this.ring, token, (t1, t2) => t1.compare(t2));\n    if (i < 0) {\n      i = ~i;\n    }\n    if (i >= this.ring.length) {\n      //it circled back\n      i = i % this.ring.length;\n    }\n    const closestToken = this.ringTokensAsStrings[i];\n    if (!keyspaceName) {\n      return [this.primaryReplicas[closestToken]];\n    }\n    const replicas = this._getKeyspaceReplicas(keyspace);\n    return replicas[closestToken];\n  }\n\n  /**\n   * Gets the token ranges that define data distribution in the ring.\n   *\n   * @returns {Set<TokenRange>} The ranges of the ring or empty set if schema metadata is not enabled.\n   */\n  getTokenRanges() {\n    return this.tokenRanges;\n  }\n\n  /**\n   * Gets the token ranges that are replicated on the given host, for\n   * the given keyspace.\n   *\n   * @param {String} keyspaceName The name of the keyspace to get ranges for.\n   * @param {Host} host The host.\n   * @returns {Set<TokenRange>|null} Ranges for the keyspace on this host or null if keyspace isn't found or hasn't been loaded.\n   */\n  getTokenRangesForHost(keyspaceName, host) {\n    if (!this.ring) {\n      return null;\n    }\n    let keyspace;\n    if (keyspaceName) {\n      keyspace = this.keyspaces[keyspaceName];\n      if (!keyspace) {\n        // the keyspace was not found, the metadata should be loaded beforehand\n        return null;\n      }\n    }\n    // If the ring has only 1 token, just return the ranges as we should only have a single node cluster.\n    if (this.ring.length === 1) {\n      return this.getTokenRanges();\n    }\n    const replicas = this._getKeyspaceReplicas(keyspace);\n    const ranges = new Set();\n    // for each range, find replicas for end token, if replicas include host, add range.\n    this.tokenRanges.forEach((tokenRange) => {\n      const replicasForToken = replicas[this.tokenizer.stringify(tokenRange.end)];\n      if (replicasForToken.indexOf(host) !== -1) {\n        ranges.add(tokenRange);\n      }\n    });\n    return ranges;\n  }\n\n  /**\n   * Constructs a Token from the input buffer(s) or string input.  If a string is passed in\n   * it is assumed this matches the token representation reported by cassandra.\n   * @param {Array<Buffer>|Buffer|String} components\n   * @returns {Token} constructed token from the input buffer.\n   */\n  newToken(components) {\n    if (!this.tokenizer) {\n      throw new Error('Partitioner not established.  This should only happen if metadata was disabled or you have not connected yet.');\n    }\n    if (Array.isArray(components)) {\n      return this.tokenizer.hash(Buffer.concat(components));\n    }\n    else if (util.isString(components)) {\n      return this.tokenizer.parse(components);\n    }\n    return this.tokenizer.hash(components);\n  }\n\n  /**\n   * Constructs a TokenRange from the given start and end tokens.\n   * @param {Token} start\n   * @param {Token} end\n   * @returns TokenRange build range spanning from start (exclusive) to end (inclusive).\n   */\n  newTokenRange(start, end) {\n    if (!this.tokenizer) {\n      throw new Error('Partitioner not established.  This should only happen if metadata was disabled or you have not connected yet.');\n    }\n    return new TokenRange(start, end, this.tokenizer);\n  }\n\n  /**\n   * Gets the metadata information already stored associated to a prepared statement\n   * @param {String} keyspaceName\n   * @param {String} query\n   * @internal\n   * @ignore\n   */\n  getPreparedInfo(keyspaceName, query) {\n    return this._preparedQueries.getOrAdd(keyspaceName, query);\n  }\n\n  /**\n   * Clears the internal state related to the prepared statements.\n   * Following calls to the Client using the prepare flag will re-prepare the statements.\n   */\n  clearPrepared() {\n    this._preparedQueries.clear();\n  }\n\n  /** @ignore */\n  getPreparedById(id) {\n    return this._preparedQueries.getById(id);\n  }\n\n  /** @ignore */\n  setPreparedById(info) {\n    return this._preparedQueries.setById(info);\n  }\n\n  /** @ignore */\n  getAllPrepared() {\n    return this._preparedQueries.getAll();\n  }\n\n  /** @ignore */\n  _uninitializedError() {\n    return new Error('Metadata has not been initialized.  This could only happen if you have not connected yet.');\n  }\n\n  /**\n   * Gets the definition of an user-defined type.\n   * <p>\n   *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n   *   Otherwise, it returns a <code>Promise</code>.\n   * </p>\n   * <p>\n   * When trying to retrieve the same UDT definition concurrently, it will query once and invoke all callbacks\n   * with the retrieved information.\n   * </p>\n   * @param {String} keyspaceName Name of the keyspace.\n   * @param {String} name Name of the UDT.\n   * @param {Function} [callback] The callback to invoke when retrieval completes.\n   */\n  getUdt(keyspaceName, name, callback) {\n    return promiseUtils.optionalCallback(this._getUdt(keyspaceName, name), callback);\n  }\n\n  /**\n   * @param {String} keyspaceName\n   * @param {String} name\n   * @returns {Promise<Object|null>}\n   * @private\n   */\n  async _getUdt(keyspaceName, name) {\n    if (!this.initialized) {\n      throw this._uninitializedError();\n    }\n    let cache;\n    if (this.options.isMetadataSyncEnabled) {\n      const keyspace = this.keyspaces[keyspaceName];\n      if (!keyspace) {\n        return null;\n      }\n      cache = keyspace.udts;\n    }\n    return await this._schemaParser.getUdt(keyspaceName, name, cache);\n  }\n\n  /**\n   * Gets the definition of a table.\n   * <p>\n   *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n   *   Otherwise, it returns a <code>Promise</code>.\n   * </p>\n   * <p>\n   * When trying to retrieve the same table definition concurrently, it will query once and invoke all callbacks\n   * with the retrieved information.\n   * </p>\n   * @param {String} keyspaceName Name of the keyspace.\n   * @param {String} name Name of the Table.\n   * @param {Function} [callback] The callback with the err as a first parameter and the {@link TableMetadata} as\n   * second parameter.\n   */\n  getTable(keyspaceName, name, callback) {\n    return promiseUtils.optionalCallback(this._getTable(keyspaceName, name), callback);\n  }\n\n  /**\n   * @param {String} keyspaceName\n   * @param {String} name\n   * @private\n   */\n  async _getTable(keyspaceName, name) {\n    if (!this.initialized) {\n      throw this._uninitializedError();\n    }\n    let cache;\n    let virtual;\n    if (this.options.isMetadataSyncEnabled) {\n      const keyspace = this.keyspaces[keyspaceName];\n      if (!keyspace) {\n        return null;\n      }\n      cache = keyspace.tables;\n      virtual = keyspace.virtual;\n    }\n    return await this._schemaParser.getTable(keyspaceName, name, cache, virtual);\n  }\n\n  /**\n   * Gets the definition of CQL functions for a given name.\n   * <p>\n   *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n   *   Otherwise, it returns a <code>Promise</code>.\n   * </p>\n   * <p>\n   * When trying to retrieve the same function definition concurrently, it will query once and invoke all callbacks\n   * with the retrieved information.\n   * </p>\n   * @param {String} keyspaceName Name of the keyspace.\n   * @param {String} name Name of the Function.\n   * @param {Function} [callback] The callback with the err as a first parameter and the array of {@link SchemaFunction}\n   * as second parameter.\n   */\n  getFunctions(keyspaceName, name, callback) {\n    return promiseUtils.optionalCallback(this._getFunctionsWrapper(keyspaceName, name), callback);\n  }\n\n  /**\n   * @param {String} keyspaceName\n   * @param {String} name\n   * @private\n   */\n  async _getFunctionsWrapper(keyspaceName, name) {\n    if (!keyspaceName || !name) {\n      throw new errors.ArgumentError('You must provide the keyspace name and cql function name to retrieve the metadata');\n    }\n    const functionsMap = await this._getFunctions(keyspaceName, name, false);\n    return Array.from(functionsMap.values());\n  }\n\n  /**\n   * Gets a definition of CQL function for a given name and signature.\n   * <p>\n   *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n   *   Otherwise, it returns a <code>Promise</code>.\n   * </p>\n   * <p>\n   * When trying to retrieve the same function definition concurrently, it will query once and invoke all callbacks\n   * with the retrieved information.\n   * </p>\n   * @param {String} keyspaceName Name of the keyspace\n   * @param {String} name Name of the Function\n   * @param {Array.<String>|Array.<{code, info}>} signature Array of types of the parameters.\n   * @param {Function} [callback] The callback with the err as a first parameter and the {@link SchemaFunction} as second\n   * parameter.\n   */\n  getFunction(keyspaceName, name, signature, callback) {\n    return promiseUtils.optionalCallback(this._getSingleFunction(keyspaceName, name, signature, false), callback);\n  }\n\n  /**\n   * Gets the definition of CQL aggregate for a given name.\n   * <p>\n   *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n   *   Otherwise, it returns a <code>Promise</code>.\n   * </p>\n   * <p>\n   * When trying to retrieve the same aggregates definition concurrently, it will query once and invoke all callbacks\n   * with the retrieved information.\n   * </p>\n   * @param {String} keyspaceName Name of the keyspace\n   * @param {String} name Name of the Function\n   * @param {Function} [callback] The callback with the err as a first parameter and the array of {@link Aggregate} as\n   * second parameter.\n   */\n  getAggregates(keyspaceName, name, callback) {\n    return promiseUtils.optionalCallback(this._getAggregates(keyspaceName, name), callback);\n  }\n\n  /**\n   * @param {String} keyspaceName\n   * @param {String} name\n   * @private\n   */\n  async _getAggregates(keyspaceName, name) {\n    if (!keyspaceName || !name) {\n      throw new errors.ArgumentError('You must provide the keyspace name and cql aggregate name to retrieve the metadata');\n    }\n    const functionsMap = await this._getFunctions(keyspaceName, name, true);\n    return Array.from(functionsMap.values());\n  }\n\n  /**\n   * Gets a definition of CQL aggregate for a given name and signature.\n   * <p>\n   *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n   *   Otherwise, it returns a <code>Promise</code>.\n   * </p>\n   * <p>\n   * When trying to retrieve the same aggregate definition concurrently, it will query once and invoke all callbacks\n   * with the retrieved information.\n   * </p>\n   * @param {String} keyspaceName Name of the keyspace\n   * @param {String} name Name of the aggregate\n   * @param {Array.<String>|Array.<{code, info}>} signature Array of types of the parameters.\n   * @param {Function} [callback] The callback with the err as a first parameter and the {@link Aggregate} as second parameter.\n   */\n  getAggregate(keyspaceName, name, signature, callback) {\n    return promiseUtils.optionalCallback(this._getSingleFunction(keyspaceName, name, signature, true), callback);\n  }\n\n  /**\n   * Gets the definition of a CQL materialized view for a given name.\n   * <p>\n   *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n   *   Otherwise, it returns a <code>Promise</code>.\n   * </p>\n   * <p>\n   *   Note that, unlike the rest of the {@link Metadata} methods, this method does not cache the result for following\n   *   calls, as the current version of the Cassandra native protocol does not support schema change events for\n   *   materialized views. Each call to this method will produce one or more queries to the cluster.\n   * </p>\n   * @param {String} keyspaceName Name of the keyspace\n   * @param {String} name Name of the materialized view\n   * @param {Function} [callback] The callback with the err as a first parameter and the {@link MaterializedView} as\n   * second parameter.\n   */\n  getMaterializedView(keyspaceName, name, callback) {\n    return promiseUtils.optionalCallback(this._getMaterializedView(keyspaceName, name), callback);\n  }\n\n  /**\n   * @param {String} keyspaceName\n   * @param {String} name\n   * @returns {Promise<MaterializedView|null>}\n   * @private\n   */\n  async _getMaterializedView(keyspaceName, name) {\n    if (!this.initialized) {\n      throw this._uninitializedError();\n    }\n    let cache;\n    if (this.options.isMetadataSyncEnabled) {\n      const keyspace = this.keyspaces[keyspaceName];\n      if (!keyspace) {\n        return null;\n      }\n      cache = keyspace.views;\n    }\n    return await this._schemaParser.getMaterializedView(keyspaceName, name, cache);\n  }\n\n  /**\n   * Gets a map of cql function definitions or aggregates based on signature.\n   * @param {String} keyspaceName\n   * @param {String} name Name of the function or aggregate\n   * @param {Boolean} aggregate\n   * @returns {Promise<Map>}\n   * @private\n   */\n  async _getFunctions(keyspaceName, name, aggregate) {\n    if (!this.initialized) {\n      throw this._uninitializedError();\n    }\n    let cache;\n    if (this.options.isMetadataSyncEnabled) {\n      const keyspace = this.keyspaces[keyspaceName];\n      if (!keyspace) {\n        return new Map();\n      }\n      cache = aggregate ? keyspace.aggregates : keyspace.functions;\n    }\n    return await this._schemaParser.getFunctions(keyspaceName, name, aggregate, cache);\n  }\n\n  /**\n   * Gets a single cql function or aggregate definition\n   * @param {String} keyspaceName\n   * @param {String} name\n   * @param {Array} signature\n   * @param {Boolean} aggregate\n   * @returns {Promise<SchemaFunction|Aggregate|null>}\n   * @private\n   */\n  async _getSingleFunction(keyspaceName, name, signature, aggregate) {\n    if (!keyspaceName || !name) {\n      throw new errors.ArgumentError('You must provide the keyspace name and cql function name to retrieve the metadata');\n    }\n    if (!Array.isArray(signature)) {\n      throw new errors.ArgumentError('Signature must be an array of types');\n    }\n    signature = signature.map(item => {\n      if (typeof item === 'string') {\n        return item;\n      }\n      return types.getDataTypeNameByCode(item);\n    });\n    const functionsMap = await this._getFunctions(keyspaceName, name, aggregate);\n    return functionsMap.get(signature.join(',')) || null;\n  }\n\n  /**\n   * Gets the trace session generated by Cassandra when query tracing is enabled for the\n   * query. The trace itself is stored in Cassandra in the <code>sessions</code> and\n   * <code>events</code> table in the <code>system_traces</code> keyspace and can be\n   * retrieve manually using the trace identifier.\n   * <p>\n   *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n   *   Otherwise, it returns a <code>Promise</code>.\n   * </p>\n   * @param {Uuid} traceId Identifier of the trace session.\n   * @param {Number} [consistency] The consistency level to obtain the trace.\n   * @param {Function} [callback] The callback with the err as first parameter and the query trace as second parameter.\n   */\n  getTrace(traceId, consistency, callback) {\n    if (!callback && typeof consistency === 'function') {\n      // Both callback and consistency are optional parameters\n      // In this case, the second parameter is the callback\n      callback = consistency;\n      consistency = null;\n    }\n\n    return promiseUtils.optionalCallback(this._getTrace(traceId, consistency), callback);\n  }\n\n  /**\n   * @param {Uuid} traceId\n   * @param {Number} consistency\n   * @returns {Promise<Object>}\n   * @private\n   */\n  async _getTrace(traceId, consistency) {\n    if (!this.initialized) {\n      throw this._uninitializedError();\n    }\n\n    let trace;\n    let attempts = 0;\n    const info = ExecutionOptions.empty();\n    info.getConsistency = () => consistency;\n\n    const sessionRequest = new requests.QueryRequest(util.format(_selectTraceSession, traceId), null, info);\n    const eventsRequest = new requests.QueryRequest(util.format(_selectTraceEvents, traceId), null, info);\n\n    while (!trace && (attempts++ < _traceMaxAttemps)) {\n      const sessionResponse = await this.controlConnection.query(sessionRequest);\n      const sessionRow = sessionResponse.rows[0];\n\n      if (!sessionRow || typeof sessionRow['duration'] !== 'number') {\n        await promiseUtils.delay(_traceAttemptDelay);\n        continue;\n      }\n\n      trace = {\n        requestType: sessionRow['request'],\n        coordinator: sessionRow['coordinator'],\n        parameters: sessionRow['parameters'],\n        startedAt: sessionRow['started_at'],\n        duration: sessionRow['duration'],\n        clientAddress: sessionRow['client'],\n        events: null\n      };\n\n      const eventsResponse = await this.controlConnection.query(eventsRequest);\n      trace.events = eventsResponse.rows.map(row => ({\n        id: row['event_id'],\n        activity: row['activity'],\n        source: row['source'],\n        elapsed: row['source_elapsed'],\n        thread: row['thread']\n      }));\n    }\n\n    if (!trace) {\n      throw new Error(`Trace ${traceId.toString()} could not fully retrieved after ${_traceMaxAttemps} attempts`);\n    }\n\n    return trace;\n  }\n\n  /**\n   * Checks whether hosts that are currently up agree on the schema definition.\n   * <p>\n   *   This method performs a one-time check only, without any form of retry; therefore\n   *   <code>protocolOptions.maxSchemaAgreementWaitSeconds</code> setting does not apply in this case.\n   * </p>\n   * @param {Function} [callback] A function that is invoked with a value\n   * <code>true</code> when all hosts agree on the schema and <code>false</code> when there is no agreement or when\n   * the check could not be performed (for example, if the control connection is down).\n   * @returns {Promise} Returns a <code>Promise</code> when a callback is not provided. The promise resolves to\n   * <code>true</code> when all hosts agree on the schema and <code>false</code> when there is no agreement or when\n   * the check could not be performed (for example, if the control connection is down).\n   */\n  checkSchemaAgreement(callback) {\n    return promiseUtils.optionalCallback(this._checkSchemaAgreement(), callback);\n  }\n\n  /**\n   * Async-only version of check schema agreement.\n   * @private\n   */\n  async _checkSchemaAgreement() {\n    const connection = this.controlConnection.connection;\n    if (!connection) {\n      return false;\n    }\n    try {\n      return await this.compareSchemaVersions(connection);\n    }\n    catch (err) {\n      return false;\n    }\n  }\n\n  /**\n   * Uses the metadata to fill the user provided parameter hints\n   * @param {String} keyspace\n   * @param {Array} hints\n   * @internal\n   * @ignore\n   */\n  async adaptUserHints(keyspace, hints) {\n    if (!Array.isArray(hints)) {\n      return;\n    }\n    const udts = [];\n    // Check for udts and get the metadata\n    for (let i = 0; i < hints.length; i++) {\n      const hint = hints[i];\n      if (typeof hint !== 'string') {\n        continue;\n      }\n\n      const type = types.dataTypes.getByName(hint);\n      this._checkUdtTypes(udts, type, keyspace);\n      hints[i] = type;\n    }\n\n    for (const type of udts) {\n      const udtInfo = await this.getUdt(type.info.keyspace, type.info.name);\n      if (!udtInfo) {\n        throw new TypeError('User defined type not found: ' + type.info.keyspace + '.' + type.info.name);\n      }\n      type.info = udtInfo;\n    }\n  }\n\n  /**\n   * @param {Array} udts\n   * @param {{code, info}} type\n   * @param {string} keyspace\n   * @private\n   */\n  _checkUdtTypes(udts, type, keyspace) {\n    if (type.code === types.dataTypes.udt) {\n      const udtName = type.info.split('.');\n      type.info = {\n        keyspace: udtName[0],\n        name: udtName[1]\n      };\n      if (!type.info.name) {\n        if (!keyspace) {\n          throw new TypeError('No keyspace specified for udt: ' + udtName.join('.'));\n        }\n        //use the provided keyspace\n        type.info.name = type.info.keyspace;\n        type.info.keyspace = keyspace;\n      }\n      udts.push(type);\n      return;\n    }\n\n    if (!type.info) {\n      return;\n    }\n    if (type.code === types.dataTypes.list || type.code === types.dataTypes.set) {\n      return this._checkUdtTypes(udts, type.info, keyspace);\n    }\n    if (type.code === types.dataTypes.map) {\n      this._checkUdtTypes(udts, type.info[0], keyspace);\n      this._checkUdtTypes(udts, type.info[1], keyspace);\n    }\n  }\n\n  /**\n   * Uses the provided connection to query the schema versions and compare them.\n   * @param {Connection} connection\n   * @internal\n   * @ignore\n   */\n  async compareSchemaVersions(connection) {\n    const versions = new Set();\n    const response1 = await connection.send(new requests.QueryRequest(_selectSchemaVersionLocal), null);\n    if (response1 && response1.rows && response1.rows.length === 1) {\n      versions.add(response1.rows[0]['schema_version'].toString());\n    }\n    const response2 = await connection.send(new requests.QueryRequest(_selectSchemaVersionPeers), null);\n    if (response2 && response2.rows) {\n      for (const row of response2.rows) {\n        const value = row['schema_version'];\n        if (!value) {\n          continue;\n        }\n        versions.add(value.toString());\n      }\n    }\n    return versions.size === 1;\n  }\n}\n\n/**\n * Allows to store prepared queries and retrieval by query or query id.\n * @ignore\n */\nclass PreparedQueries {\n\n  /**\n   * @param {Number} maxPrepared\n   * @param {Function} logger\n   */\n  constructor(maxPrepared, logger) {\n    this.length = 0;\n    this._maxPrepared = maxPrepared;\n    this._mapByKey = new Map();\n    this._mapById = new Map();\n    this._logger = logger;\n  }\n\n  _getKey(keyspace, query) {\n    return (keyspace || '') + query;\n  }\n\n  getOrAdd(keyspace, query) {\n    const key = this._getKey(keyspace, query);\n    let info = this._mapByKey.get(key);\n    if (info) {\n      return info;\n    }\n\n    this._validateOverflow();\n\n    info = new events.EventEmitter();\n    info.setMaxListeners(0);\n    info.query = query;\n    // The keyspace in which it was prepared\n    info.keyspace = keyspace;\n    this._mapByKey.set(key, info);\n    this.length++;\n    return info;\n  }\n\n  _validateOverflow() {\n    if (this.length < this._maxPrepared) {\n      return;\n    }\n\n    const toRemove = [];\n    this._logger('warning',\n      'Prepared statements exceeded maximum. This could be caused by preparing queries that contain parameters');\n\n    const toRemoveLength = this.length - this._maxPrepared + 1;\n\n    for (const [key, info] of this._mapByKey) {\n      if (!info.queryId) {\n        // Only remove queries that contain queryId\n        continue;\n      }\n\n      const length = toRemove.push([key, info]);\n      if (length >= toRemoveLength) {\n        break;\n      }\n    }\n\n    for (const [key, info] of toRemove) {\n      this._mapByKey.delete(key);\n      this._mapById.delete(info.queryId.toString('hex'));\n      this.length--;\n    }\n  }\n\n  setById(info) {\n    this._mapById.set(info.queryId.toString('hex'), info);\n  }\n\n  getById(id) {\n    return this._mapById.get(id.toString('hex'));\n  }\n\n  clear() {\n    this._mapByKey = new Map();\n    this._mapById = new Map();\n    this.length = 0;\n  }\n\n  getAll() {\n    return Array.from(this._mapByKey.values()).filter(info => !!info.queryId);\n  }\n}\n\nmodule.exports = Metadata;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst util = require('util');\nconst utils = require('../utils');\nconst promiseUtils = require('../promise-utils');\n\nconst _queueOverflowThreshold = 1000;\n\n/**\n * Debounce protocol events by acting on those events with a sliding delay.\n * @ignore\n * @constructor\n */\nclass EventDebouncer {\n\n  /**\n   * Creates a new instance of the event debouncer.\n   * @param {Number} delay\n   * @param {Function} logger\n   */\n  constructor(delay, logger) {\n    this._delay = delay;\n    this._logger = logger;\n    this._queue = null;\n    this._timeout = null;\n  }\n\n  /**\n   * Adds a new event to the queue and moves the delay.\n   * @param {{ handler: Function, all: boolean|undefined, keyspace: String|undefined,\n   * cqlObject: String|null|undefined }} event\n   * @param {Boolean} processNow\n   * @returns {Promise}\n   */\n  eventReceived(event, processNow) {\n    return new Promise((resolve, reject) => {\n      event.callback = promiseUtils.getCallback(resolve, reject);\n      this._queue = this._queue || { callbacks: [], keyspaces: {} };\n      const delay = !processNow ? this._delay : 0;\n      if (event.all) {\n        // when an event marked with all is received, it supersedes all the rest of events\n        // a full update (hosts + keyspaces + tokens) is going to be made\n        this._queue.mainEvent = event;\n      }\n      if (this._queue.callbacks.length === _queueOverflowThreshold) {\n        // warn once\n        this._logger('warn', util.format('Event debouncer queue exceeded %d events', _queueOverflowThreshold));\n      }\n      this._queue.callbacks.push(event.callback);\n      if (this._queue.mainEvent) {\n        // a full refresh is scheduled and the callback was added, nothing else to do.\n        return this._slideDelay(delay);\n      }\n      // Insert at keyspace level\n      let keyspaceEvents = this._queue.keyspaces[event.keyspace];\n      if (!keyspaceEvents) {\n        keyspaceEvents = this._queue.keyspaces[event.keyspace] = { events: [] };\n      }\n      if (event.cqlObject === undefined) {\n        // a full refresh of the keyspace, supersedes all child keyspace events\n        keyspaceEvents.mainEvent = event;\n      }\n      keyspaceEvents.events.push(event);\n      this._slideDelay(delay);\n    });\n  }\n\n  /**\n   * @param {Number} delay\n   * @private\n   * */\n  _slideDelay(delay) {\n    const self = this;\n    function process() {\n      const q = self._queue;\n      self._queue = null;\n      self._timeout = null;\n      processQueue(q);\n    }\n    if (delay === 0) {\n      // no delay, process immediately\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n      }\n      return process();\n    }\n    const previousTimeout = this._timeout;\n    // Add the new timeout before removing the previous one performs better\n    this._timeout = setTimeout(process, delay);\n    if (previousTimeout) {\n      clearTimeout(previousTimeout);\n    }\n  }\n\n  /**\n   * Clears the timeout and invokes all pending callback.\n   */\n  shutdown() {\n    if (!this._queue) {\n      return;\n    }\n    this._queue.callbacks.forEach(function (cb) {\n      cb();\n    });\n    this._queue = null;\n    clearTimeout(this._timeout);\n    this._timeout = null;\n  }\n}\n\n/**\n * @param {{callbacks: Array, keyspaces: Object, mainEvent: Object}} q\n * @private\n */\nfunction processQueue (q) {\n  if (q.mainEvent) {\n    // refresh all by invoking 1 handler and invoke all pending callbacks\n    return promiseUtils.toCallback(q.mainEvent.handler(), (err) => {\n      for (let i = 0; i < q.callbacks.length; i++) {\n        q.callbacks[i](err);\n      }\n    });\n  }\n\n  utils.each(Object.keys(q.keyspaces), function eachKeyspace(name, next) {\n    const keyspaceEvents = q.keyspaces[name];\n    if (keyspaceEvents.mainEvent) {\n      // refresh a keyspace\n      return promiseUtils.toCallback(keyspaceEvents.mainEvent.handler(), function mainEventCallback(err) {\n        for (let i = 0; i < keyspaceEvents.events.length; i++) {\n          keyspaceEvents.events[i].callback(err);\n        }\n\n        next();\n      });\n    }\n\n    // deal with individual handlers and callbacks\n    keyspaceEvents.events.forEach(event => {\n      // sync handlers\n      event.handler();\n      event.callback();\n    });\n\n    next();\n  });\n}\n\nmodule.exports = EventDebouncer;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst events = require('events');\nconst util = require('util');\nconst net = require('net');\nconst dns = require('dns');\n\nconst errors = require('./errors');\nconst { Host, HostMap } = require('./host');\nconst Metadata = require('./metadata');\nconst EventDebouncer = require('./metadata/event-debouncer');\nconst Connection = require('./connection');\nconst requests = require('./requests');\nconst utils = require('./utils');\nconst types = require('./types');\nconst promiseUtils = require('./promise-utils');\nconst f = util.format;\n\nconst selectPeers = \"SELECT * FROM system.peers\";\nconst selectLocal = \"SELECT * FROM system.local WHERE key='local'\";\nconst newNodeDelay = 1000;\nconst metadataQueryAbortTimeout = 2000;\nconst schemaChangeTypes = {\n  created: 'CREATED',\n  updated: 'UPDATED',\n  dropped: 'DROPPED'\n};\nconst supportedProductTypeKey = 'PRODUCT_TYPE';\nconst supportedDbaas = 'DATASTAX_APOLLO';\n\n/**\n * Represents a connection used by the driver to receive events and to check the status of the cluster.\n * <p>It uses an existing connection from the hosts' connection pool to maintain the driver metadata up-to-date.</p>\n */\nclass ControlConnection extends events.EventEmitter {\n\n  /**\n   * Creates a new instance of <code>ControlConnection</code>.\n   * @param {Object} options\n   * @param {ProfileManager} profileManager\n   * @param {{borrowHostConnection: function, createConnection: function}} [context] An object containing methods to\n   * allow dependency injection.\n   */\n  constructor(options, profileManager, context) {\n    super();\n\n    this.protocolVersion = null;\n    this.hosts = new HostMap();\n    this.setMaxListeners(0);\n    this.log = utils.log;\n    Object.defineProperty(this, \"options\", { value: options, enumerable: false, writable: false});\n\n    /**\n     * Cluster metadata that is going to be shared between the Client and ControlConnection\n     */\n    this.metadata = new Metadata(this.options, this);\n    this.initialized = false;\n\n    /**\n     * Host used by the control connection\n     * @type {Host|null}\n     */\n    this.host = null;\n\n    /**\n     * Connection used to retrieve metadata and subscribed to events\n     * @type {Connection|null}\n     */\n    this.connection = null;\n\n    this._addressTranslator = this.options.policies.addressResolution;\n    this._reconnectionPolicy = this.options.policies.reconnection;\n    this._reconnectionSchedule = this._reconnectionPolicy.newSchedule();\n    this._isShuttingDown = false;\n\n    // Reference to the encoder of the last valid connection\n    this._encoder = null;\n    this._debouncer = new EventDebouncer(options.refreshSchemaDelay, this.log.bind(this));\n    this._profileManager = profileManager;\n    this._triedHosts = null;\n    this._resolvedContactPoints = new Map();\n    this._contactPoints = new Set();\n\n    // Timeout used for delayed handling of topology changes\n    this._topologyChangeTimeout = null;\n    // Timeout used for delayed handling of node status changes\n    this._nodeStatusChangeTimeout = null;\n\n    if (context && context.borrowHostConnection) {\n      this._borrowHostConnection = context.borrowHostConnection;\n    }\n\n    if (context && context.createConnection) {\n      this._createConnection = context.createConnection;\n    }\n  }\n\n  /**\n   * Stores the contact point information and what it resolved to.\n   * @param {String|null} address\n   * @param {String} port\n   * @param {String} name\n   * @param {Boolean} isIPv6\n   */\n  _addContactPoint(address, port, name, isIPv6) {\n    if (address === null) {\n      // Contact point could not be resolved, store that the resolution came back empty\n      this._resolvedContactPoints.set(name, utils.emptyArray);\n      return;\n    }\n\n    const portNumber = parseInt(port, 10) || this.options.protocolOptions.port;\n    const endpoint = `${address}:${portNumber}`;\n    this._contactPoints.add(endpoint);\n\n    // Use RFC 3986 for IPv4 and IPv6\n    const standardEndpoint = !isIPv6 ? endpoint : `[${address}]:${portNumber}`;\n\n    let resolvedAddressedByName = this._resolvedContactPoints.get(name);\n    if (resolvedAddressedByName === undefined) {\n      resolvedAddressedByName = [];\n      this._resolvedContactPoints.set(name, resolvedAddressedByName);\n    }\n\n    resolvedAddressedByName.push(standardEndpoint);\n  }\n\n  async _parseContactPoint(name) {\n    let addressOrName = name;\n    let port = null;\n\n    if (name.indexOf('[') === 0 && name.indexOf(']:') > 1) {\n      // IPv6 host notation [ip]:port (RFC 3986 section 3.2.2)\n      const index = name.lastIndexOf(']:');\n      addressOrName = name.substr(1, index - 1);\n      port = name.substr(index + 2);\n    } else if (name.indexOf(':') > 0) {\n      // IPv4 or host name with port notation\n      const parts = name.split(':');\n      if (parts.length === 2) {\n        addressOrName = parts[0];\n        port = parts[1];\n      }\n    }\n\n    if (net.isIP(addressOrName)) {\n      this._addContactPoint(addressOrName, port, name, net.isIPv6(addressOrName));\n      return;\n    }\n\n    const addresses = await this._resolveAll(addressOrName);\n    if (addresses.length > 0) {\n      addresses.forEach(addressInfo => this._addContactPoint(addressInfo.address, port, name, addressInfo.isIPv6));\n    } else {\n      // Store that we attempted resolving the name but was not found\n      this._addContactPoint(null, null, name, false);\n    }\n  }\n\n  /**\n   * Initializes the control connection by establishing a Connection using a suitable protocol\n   * version to be used and retrieving cluster metadata.\n   */\n  async init() {\n    if (this.initialized) {\n      // Prevent multiple serial initializations\n      return;\n    }\n\n    if (!this.options.sni) {\n      // Parse and resolve contact points\n      await Promise.all(this.options.contactPoints.map(name => this._parseContactPoint(name)));\n    } else {\n      this.options.contactPoints.forEach(cp => this._contactPoints.add(cp));\n      const address = this.options.sni.address;\n      const separatorIndex = address.lastIndexOf(':');\n\n      if (separatorIndex === -1) {\n        throw new new errors.DriverInternalError('The SNI endpoint address should contain ip/name and port');\n      }\n\n      const nameOrIp = address.substr(0, separatorIndex);\n      this.options.sni.port = address.substr(separatorIndex + 1);\n      this.options.sni.addressResolver = new utils.AddressResolver({ nameOrIp, dns });\n      await this.options.sni.addressResolver.init();\n    }\n\n    if (this._contactPoints.size === 0) {\n      throw new errors.NoHostAvailableError({}, 'No host could be resolved');\n    }\n\n    await this._initializeConnection();\n  }\n\n  _setHealthListeners(host, connection) {\n    const self = this;\n    let wasRefreshCalled = 0;\n\n    function removeListeners() {\n      host.removeListener('down', downOrIgnoredHandler);\n      host.removeListener('ignore', downOrIgnoredHandler);\n      connection.removeListener('socketClose', socketClosedHandler);\n    }\n\n    function startReconnecting(hostDown) {\n      if (wasRefreshCalled++ !== 0) {\n        // Prevent multiple calls to reconnect\n        return;\n      }\n\n      removeListeners();\n\n      if (self._isShuttingDown) {\n        // Don't attempt to reconnect when the ControlConnection is being shutdown\n        return;\n      }\n\n      if (hostDown) {\n        self.log('warning',\n          `Host ${host.address} used by the ControlConnection DOWN, ` +\n          `connection to ${connection.endpointFriendlyName} will not longer be used`);\n      } else {\n        self.log('warning', `Connection to ${connection.endpointFriendlyName} used by the ControlConnection was closed`);\n      }\n\n      promiseUtils.toBackground(self._refresh());\n    }\n\n    function downOrIgnoredHandler() {\n      startReconnecting(true);\n    }\n\n    function socketClosedHandler() {\n      startReconnecting(false);\n    }\n\n    host.once('down', downOrIgnoredHandler);\n    host.once('ignore', downOrIgnoredHandler);\n    connection.once('socketClose', socketClosedHandler);\n  }\n\n  /**\n   * Iterates through the hostIterator and Gets the following open connection.\n   * @param {Iterator<Host>} hostIterator\n   * @returns {Connection!}\n   */\n  _borrowAConnection(hostIterator) {\n    let connection = null;\n\n    while (!connection) {\n      const item = hostIterator.next();\n      const host = item.value;\n\n      if (item.done) {\n        throw new errors.NoHostAvailableError(this._triedHosts);\n      }\n\n      // Only check distance once the load-balancing policies have been initialized\n      const distance = this._profileManager.getDistance(host);\n      if (!host.isUp() || distance === types.distance.ignored) {\n        continue;\n      }\n\n      try {\n        connection = this._borrowHostConnection(host);\n      } catch (err) {\n        this._triedHosts[host.address] = err;\n      }\n    }\n\n    return connection;\n  }\n\n  /**\n   * Iterates through the contact points and tries to open a connection.\n   * @param {Iterator<string>} contactPointsIterator\n   * @returns {Promise<void>}\n   */\n  async _borrowFirstConnection(contactPointsIterator) {\n    let connection = null;\n\n    while (!connection) {\n      const item = contactPointsIterator.next();\n      const contactPoint = item.value;\n\n      if (item.done) {\n        throw new errors.NoHostAvailableError(this._triedHosts);\n      }\n\n      try {\n        connection = await this._createConnection(contactPoint);\n      } catch (err) {\n        this._triedHosts[contactPoint] = err;\n      }\n    }\n\n    if (!connection) {\n      const err = new errors.NoHostAvailableError(this._triedHosts);\n      this.log('error', 'ControlConnection failed to acquire a connection');\n      throw err;\n    }\n\n    this.protocolVersion = connection.protocolVersion;\n    this._encoder = connection.encoder;\n    this.connection = connection;\n  }\n\n  /** Default implementation for borrowing connections, that can be injected at constructor level */\n  _borrowHostConnection(host) {\n    // Borrow any open connection, regardless of the keyspace\n    return host.borrowConnection();\n  }\n\n  /**\n   * Default implementation for creating initial connections, that can be injected at constructor level\n   * @param {String} contactPoint\n   */\n  async _createConnection(contactPoint) {\n    const c = new Connection(contactPoint, null, this.options);\n\n    try {\n      await c.openAsync();\n    } catch (err) {\n      promiseUtils.toBackground(c.closeAsync());\n      throw err;\n    }\n\n    return c;\n  }\n\n  /**\n   * Gets the info from local and peer metadata, reloads the keyspaces metadata and rebuilds tokens.\n   * <p>It throws an error when there's a failure or when reconnecting and there's no connection.</p>\n   * @param {Boolean} initializing Determines whether this function was called in order to initialize the control\n   * connection the first time\n   * @param {Boolean} isReconnecting Determines whether the refresh is being done because the ControlConnection is\n   * switching to use this connection to this host.\n   */\n  async _refreshHosts(initializing, isReconnecting) {\n    // Get a reference to the current connection as it might change from external events\n    const c = this.connection;\n\n    if (!c) {\n      if (isReconnecting) {\n        throw new errors.DriverInternalError('Connection reference has been lost when reconnecting');\n      }\n\n      // it's possible that this was called as a result of a topology change, but the connection was lost\n      // between scheduling time and now. This will be called again when there is a new connection.\n      return;\n    }\n\n    this.log('info', 'Refreshing local and peers info');\n\n    const rsLocal = await c.send(new requests.QueryRequest(selectLocal), null);\n    this._setLocalInfo(initializing, isReconnecting, c, rsLocal);\n\n    if (!this.host) {\n      throw new errors.DriverInternalError('Information from system.local could not be retrieved');\n    }\n\n    const rsPeers = await c.send(new requests.QueryRequest(selectPeers), null);\n    await this.setPeersInfo(initializing, rsPeers);\n\n    if (!this.initialized) {\n      // resolve protocol version from highest common version among hosts.\n      const highestCommon = types.protocolVersion.getHighestCommon(c, this.hosts);\n      const reconnect = highestCommon !== this.protocolVersion;\n\n      // set protocol version on each host.\n      this.protocolVersion = highestCommon;\n      this.hosts.forEach(h => h.setProtocolVersion(this.protocolVersion));\n\n      // if protocol version changed, reconnect the control connection with new version.\n      if (reconnect) {\n        this.log('info', `Reconnecting since the protocol version changed to 0x${highestCommon.toString(16)}`);\n        c.decreaseVersion(this.protocolVersion);\n        await c.closeAsync();\n\n        try {\n          await c.openAsync();\n        } catch (err) {\n          // Close in the background\n          promiseUtils.toBackground(c.closeAsync());\n\n          throw err;\n        }\n      }\n\n      // To acquire metadata we need to specify the cassandra version\n      this.metadata.setCassandraVersion(this.host.getCassandraVersion());\n      this.metadata.buildTokens(this.hosts);\n\n      if (!this.options.isMetadataSyncEnabled) {\n        this.metadata.initialized = true;\n        return;\n      }\n\n      await this.metadata.refreshKeyspacesInternal(false);\n      this.metadata.initialized = true;\n    }\n  }\n\n  async _refreshControlConnection(hostIterator) {\n\n    if (this.options.sni) {\n      this.connection = this._borrowAConnection(hostIterator);\n    }\n    else {\n      try { this.connection = this._borrowAConnection(hostIterator); }\n      catch(err) {\n\n        /* NODEJS-632: refresh nodes before getting hosts for reconnect since some hostnames may have\n         * shifted during the flight. */\n        this.log(\"info\", \"ControlConnection could not reconnect using existing connections.  Refreshing contact points and retrying\");\n        this._contactPoints.clear();\n        this._resolvedContactPoints.clear();\n        await Promise.all(this.options.contactPoints.map(name => this._parseContactPoint(name)));\n        const refreshedContactPoints = Array.from(this._contactPoints).join(',');\n        this.log('info', `Refreshed contact points: ${refreshedContactPoints}`);\n        await this._initializeConnection();\n      }\n    }\n  }\n\n  /**\n   * Acquires a new connection and refreshes topology and keyspace metadata.\n   * <p>When it fails obtaining a connection and there aren't any more hosts, it schedules reconnection.</p>\n   * <p>When it fails obtaining the metadata, it marks connection and/or host unusable and retries using the same\n   * iterator from query plan / host list</p>\n   * @param {Iterator<Host>} [hostIterator]\n   */\n  async _refresh(hostIterator) {\n    if (this._isShuttingDown) {\n      this.log('info', 'The ControlConnection will not be refreshed as the Client is being shutdown');\n      return;\n    }\n\n    // Reset host and connection\n    this.host = null;\n    this.connection = null;\n\n    try {\n      if (!hostIterator) {\n        this.log('info', 'Trying to acquire a connection to a new host');\n        this._triedHosts = {};\n        hostIterator = await promiseUtils.newQueryPlan(this._profileManager.getDefaultLoadBalancing(), null, null);\n      }\n\n      await this._refreshControlConnection(hostIterator);\n    } catch (err) {\n      // There was a failure obtaining a connection or during metadata retrieval\n      this.log('error', 'ControlConnection failed to acquire a connection', err);\n\n      if (!this._isShuttingDown) {\n        const delay = this._reconnectionSchedule.next().value;\n        this.log('warning', `ControlConnection could not reconnect, scheduling reconnection in ${delay}ms`);\n        setTimeout(() => this._refresh(), delay);\n        this.emit('newConnection', err);\n      }\n\n      return;\n    }\n\n    this.log('info',`ControlConnection connected to ${this.connection.endpointFriendlyName}`);\n\n    try {\n      await this._refreshHosts(false, true);\n\n      await this._registerToConnectionEvents();\n    } catch (err) {\n      this.log('error', 'ControlConnection failed to retrieve topology and keyspaces information', err);\n      this._triedHosts[this.connection.endpoint] = err;\n\n      if (err.isSocketError && this.host) {\n        this.host.removeFromPool(this.connection);\n      }\n\n      // Retry the whole thing with the same query plan\n      return await this._refresh(hostIterator);\n    }\n\n    this._reconnectionSchedule = this._reconnectionPolicy.newSchedule();\n    this._setHealthListeners(this.host, this.connection);\n    this.emit('newConnection', null, this.connection, this.host);\n\n    this.log('info', `ControlConnection connected to ${this.connection.endpointFriendlyName} and up to date`);\n  }\n\n  /**\n   * Acquires a connection and refreshes topology and keyspace metadata for the first time.\n   * @returns {Promise<void>}\n   */\n  async _initializeConnection() {\n    this.log('info', 'Getting first connection');\n\n    // Reset host and connection\n    this.host = null;\n    this.connection = null;\n    this._triedHosts = {};\n\n    // Randomize order of contact points resolved.\n    const contactPointsIterator = utils.shuffleArray(Array.from(this._contactPoints))[Symbol.iterator]();\n\n    while (true) {\n      await this._borrowFirstConnection(contactPointsIterator);\n\n      this.log('info', `ControlConnection using protocol version 0x${\n        this.protocolVersion.toString(16)}, connected to ${this.connection.endpointFriendlyName}`);\n\n      try {\n        await this._getSupportedOptions();\n        await this._refreshHosts(true, true);\n        await this._registerToConnectionEvents();\n\n        // We have a valid connection, leave the loop\n        break;\n\n      } catch (err) {\n        this.log('error', 'ControlConnection failed to retrieve topology and keyspaces information', err);\n        this._triedHosts[this.connection.endpoint] = err;\n      }\n    }\n\n    // The healthy connection used to initialize should be part of the Host pool\n    this.host.pool.addExistingConnection(this.connection);\n\n    this.initialized = true;\n    this._setHealthListeners(this.host, this.connection);\n    this.log('info', `ControlConnection connected to ${this.connection.endpointFriendlyName}`);\n  }\n\n  async _getSupportedOptions() {\n    const response = await this.connection.send(requests.options, null);\n\n    // response.supported is a string multi map, decoded as an Object.\n    const productType = response.supported && response.supported[supportedProductTypeKey];\n    if (Array.isArray(productType) && productType[0] === supportedDbaas) {\n      this.metadata.setProductTypeAsDbaas();\n    }\n  }\n\n  async _registerToConnectionEvents() {\n    this.connection.on('nodeTopologyChange', this._nodeTopologyChangeHandler.bind(this));\n    this.connection.on('nodeStatusChange', this._nodeStatusChangeHandler.bind(this));\n    this.connection.on('nodeSchemaChange', this._nodeSchemaChangeHandler.bind(this));\n    const request = new requests.RegisterRequest(['TOPOLOGY_CHANGE', 'STATUS_CHANGE', 'SCHEMA_CHANGE']);\n    await this.connection.send(request, null);\n  }\n\n  /**\n   * Handles a TOPOLOGY_CHANGE event\n   */\n  _nodeTopologyChangeHandler(event) {\n    this.log('info', 'Received topology change', event);\n\n    // all hosts information needs to be refreshed as tokens might have changed\n    clearTimeout(this._topologyChangeTimeout);\n\n    // Use an additional timer to make sure that the refresh hosts is executed only AFTER the delay\n    // In this case, the event debouncer doesn't help because it could not honor the sliding delay (ie: processNow)\n    this._topologyChangeTimeout = setTimeout(() =>\n      promiseUtils.toBackground(this._scheduleRefreshHosts()), newNodeDelay);\n  }\n\n  /**\n   * Handles a STATUS_CHANGE event\n   */\n  _nodeStatusChangeHandler(event) {\n    const self = this;\n    const addressToTranslate = event.inet.address.toString();\n    const port = this.options.protocolOptions.port;\n    this._addressTranslator.translate(addressToTranslate, port, function translateCallback(endPoint) {\n      const host = self.hosts.get(endPoint);\n      if (!host) {\n        self.log('warning', 'Received status change event but host was not found: ' + addressToTranslate);\n        return;\n      }\n      const distance = self._profileManager.getDistance(host);\n      if (event.up) {\n        if (distance === types.distance.ignored) {\n          return host.setUp(true);\n        }\n        clearTimeout(self._nodeStatusChangeTimeout);\n        // Waits a couple of seconds before marking it as UP\n        self._nodeStatusChangeTimeout = setTimeout(() => host.checkIsUp(), newNodeDelay);\n        return;\n      }\n      // marked as down\n      if (distance === types.distance.ignored) {\n        return host.setDown();\n      }\n      self.log('warning', 'Received status change to DOWN for host ' + host.address);\n    });\n  }\n\n  /**\n   * Handles a SCHEMA_CHANGE event\n   */\n  _nodeSchemaChangeHandler(event) {\n    this.log('info', 'Schema change', event);\n    if (!this.options.isMetadataSyncEnabled) {\n      return;\n    }\n\n    promiseUtils.toBackground(this.handleSchemaChange(event, false));\n  }\n\n  /**\n   * Schedules metadata refresh and callbacks when is refreshed.\n   * @param {{keyspace: string, isKeyspace: boolean, schemaChangeType, table, udt, functionName, aggregate}} event\n   * @param {Boolean} processNow\n   * @returns {Promise<void>}\n   */\n  handleSchemaChange(event, processNow) {\n    const self = this;\n    let handler, cqlObject;\n\n    if (event.isKeyspace) {\n      if (event.schemaChangeType === schemaChangeTypes.dropped) {\n        handler = function removeKeyspace() {\n          // if on the same event queue there is a creation, this handler is not going to be executed\n          // it is safe to remove the keyspace metadata\n          delete self.metadata.keyspaces[event.keyspace];\n        };\n\n        return this._scheduleObjectRefresh(handler, event.keyspace, null, processNow);\n      }\n\n      return this._scheduleKeyspaceRefresh(event.keyspace, processNow);\n    }\n\n    const ksInfo = this.metadata.keyspaces[event.keyspace];\n    if (!ksInfo) {\n      // it hasn't been loaded and it is not part of the metadata, don't mind\n      return Promise.resolve();\n    }\n\n    if (event.table) {\n      cqlObject = event.table;\n      handler = function clearTableState() {\n        delete ksInfo.tables[event.table];\n        delete ksInfo.views[event.table];\n      };\n    }\n    else if (event.udt) {\n      cqlObject = event.udt;\n      handler = function clearUdtState() {\n        delete ksInfo.udts[event.udt];\n      };\n    }\n    else if (event.functionName) {\n      cqlObject = event.functionName;\n      handler = function clearFunctionState() {\n        delete ksInfo.functions[event.functionName];\n      };\n    }\n    else if (event.aggregate) {\n      cqlObject = event.aggregate;\n      handler = function clearKeyspaceState() {\n        delete ksInfo.aggregates[event.aggregate];\n      };\n    }\n\n    if (!handler) {\n      // Forward compatibility\n      return Promise.resolve();\n    }\n\n    // It's a cql object change clean the internal cache\n    return this._scheduleObjectRefresh(handler, event.keyspace, cqlObject, processNow);\n  }\n\n  /**\n   * @param {Function} handler\n   * @param {String} keyspace\n   * @param {String} cqlObject\n   * @param {Boolean} processNow\n   * @returns {Promise<void>}\n   */\n  _scheduleObjectRefresh(handler, keyspace, cqlObject, processNow) {\n    return this._debouncer.eventReceived({ handler, keyspace, cqlObject }, processNow);\n  }\n\n  /**\n   * @param {String} keyspace\n   * @param {Boolean} processNow\n   * @returns {Promise<void>}\n   */\n  _scheduleKeyspaceRefresh(keyspace, processNow) {\n    return this._debouncer.eventReceived({\n      handler: () => this.metadata.refreshKeyspace(keyspace),\n      keyspace\n    }, processNow);\n  }\n\n  /** @returns {Promise<void>} */\n  _scheduleRefreshHosts() {\n    return this._debouncer.eventReceived({\n      handler: () => this._refreshHosts(false, false),\n      all: true\n    }, false);\n  }\n\n  /**\n   * Sets the information for the host used by the control connection.\n   * @param {Boolean} initializing\n   * @param {Connection} c\n   * @param {Boolean} setCurrentHost Determines if the host retrieved must be set as the current host\n   * @param result\n   */\n  _setLocalInfo(initializing, setCurrentHost, c, result) {\n    if (!result || !result.rows || !result.rows.length) {\n      this.log('warning', 'No local info could be obtained');\n      return;\n    }\n\n    const row = result.rows[0];\n\n    let localHost;\n\n    // Note that with SNI enabled, we can trust that rpc_address will contain a valid value.\n    const endpoint = !this.options.sni\n      ? c.endpoint\n      : `${row['rpc_address']}:${this.options.protocolOptions.port}`;\n\n    if (initializing) {\n      localHost = new Host(endpoint, this.protocolVersion, this.options, this.metadata);\n      this.hosts.set(endpoint, localHost);\n      this.log('info', `Adding host ${endpoint}`);\n    } else {\n      localHost = this.hosts.get(endpoint);\n\n      if (!localHost) {\n        this.log('error', 'Localhost could not be found');\n        return;\n      }\n    }\n\n    localHost.datacenter = row['data_center'];\n    localHost.rack = row['rack'];\n    localHost.tokens = row['tokens'];\n    localHost.hostId = row['host_id'];\n    localHost.cassandraVersion = row['release_version'];\n    setDseParameters(localHost, row);\n    this.metadata.setPartitioner(row['partitioner']);\n    this.log('info', 'Local info retrieved');\n\n    if (setCurrentHost) {\n      // Set the host as the one being used by the ControlConnection.\n      this.host = localHost;\n    }\n  }\n\n  /**\n   * @param {Boolean} initializing Determines whether this function was called in order to initialize the control\n   * connection the first time.\n   * @param {ResultSet} result\n   */\n  async setPeersInfo(initializing, result) {\n    if (!result || !result.rows) {\n      return;\n    }\n\n    // A map of peers, could useful for in case there are discrepancies\n    const peers = {};\n    const port = this.options.protocolOptions.port;\n    const foundDataCenters = new Set();\n\n    if (this.host && this.host.datacenter) {\n      foundDataCenters.add(this.host.datacenter);\n    }\n\n    for (const row of result.rows) {\n      const endpoint = await this.getAddressForPeerHost(row, port);\n\n      if (!endpoint) {\n        continue;\n      }\n\n      peers[endpoint] = true;\n      let host = this.hosts.get(endpoint);\n      let isNewHost = !host;\n\n      if (isNewHost) {\n        host = new Host(endpoint, this.protocolVersion, this.options, this.metadata);\n        this.log('info', `Adding host ${endpoint}`);\n        isNewHost = true;\n      }\n\n      host.datacenter = row['data_center'];\n      host.rack = row['rack'];\n      host.tokens = row['tokens'];\n      host.hostId = row['host_id'];\n      host.cassandraVersion = row['release_version'];\n      setDseParameters(host, row);\n\n      if (host.datacenter) {\n        foundDataCenters.add(host.datacenter);\n      }\n\n      if (isNewHost) {\n        // Add it to the map (and trigger events) after all the properties\n        // were set to avoid race conditions\n        this.hosts.set(endpoint, host);\n\n        if (!initializing) {\n          // Set the distance at Host level, that way the connection pool is created with the correct settings\n          this._profileManager.getDistance(host);\n\n          // When we are not initializing, we start with the node set as DOWN\n          host.setDown();\n        }\n      }\n    }\n\n    // Is there a difference in number between peers + local != hosts\n    if (this.hosts.length > result.rows.length + 1) {\n      // There are hosts in the current state that don't belong (nodes removed or wrong contactPoints)\n      this.log('info', 'Removing nodes from the pool');\n      const toRemove = [];\n\n      this.hosts.forEach(h => {\n        //It is not a peer and it is not local host\n        if (!peers[h.address] && h !== this.host) {\n          this.log('info', 'Removing host ' + h.address);\n          toRemove.push(h.address);\n          h.shutdown(true);\n        }\n      });\n\n      this.hosts.removeMultiple(toRemove);\n    }\n\n    if (initializing && this.options.localDataCenter) {\n      const localDc = this.options.localDataCenter;\n\n      if (!foundDataCenters.has(localDc)) {\n        throw new errors.ArgumentError(`localDataCenter was configured as '${\n          localDc}', but only found hosts in data centers: [${Array.from(foundDataCenters).join(', ')}]`);\n      }\n    }\n\n    this.log('info', 'Peers info retrieved');\n  }\n\n  /**\n   * Gets the address from a peers row and translates the address.\n   * @param {Object|Row} row\n   * @param {Number} defaultPort\n   * @returns {Promise<string>}\n   */\n  getAddressForPeerHost(row, defaultPort) {\n    return new Promise(resolve => {\n      let address = row['rpc_address'];\n      const peer = row['peer'];\n      const bindAllAddress = '0.0.0.0';\n\n      if (!address) {\n        this.log('error', f('No rpc_address found for host %s in %s\\'s peers system table. %s will be ignored.',\n          peer, this.host.address, peer));\n        return resolve(null);\n      }\n\n      if (address.toString() === bindAllAddress) {\n        this.log('warning', f('Found host with 0.0.0.0 as rpc_address, using listen_address (%s) to contact it instead.' +\n          ' If this is incorrect you should avoid the use of 0.0.0.0 server side.', peer));\n        address = peer;\n      }\n\n      this._addressTranslator.translate(address.toString(), defaultPort, resolve);\n    });\n  }\n\n  /**\n   * Uses the DNS protocol to resolve a IPv4 and IPv6 addresses (A and AAAA records) for the hostname.\n   * It returns an Array of addresses that can be empty and logs the error.\n   * @private\n   * @param name\n   */\n  async _resolveAll(name) {\n    const addresses = [];\n    const resolve4 = util.promisify(dns.resolve4);\n    const resolve6 = util.promisify(dns.resolve6);\n    const lookup = util.promisify(dns.lookup);\n\n    // Ignore errors for resolve calls\n    const ipv4Promise = resolve4(name).catch(() => {}).then(r => r || utils.emptyArray);\n    const ipv6Promise = resolve6(name).catch(() => {}).then(r => r || utils.emptyArray);\n\n    let arr;\n    arr = await ipv4Promise;\n    arr.forEach(address => addresses.push({address, isIPv6: false}));\n\n    arr = await ipv6Promise;\n    arr.forEach(address => addresses.push({address, isIPv6: true}));\n\n    if (addresses.length === 0) {\n      // In case dns.resolve*() methods don't yield a valid address for the host name\n      // Use system call getaddrinfo() that might resolve according to host system definitions\n      try {\n        arr = await lookup(name, { all: true });\n        arr.forEach(({address, family}) => addresses.push({address, isIPv6: family === 6}));\n      } catch (err) {\n        this.log('error', `Host with name ${name} could not be resolved`, err);\n      }\n    }\n\n    return addresses;\n  }\n\n  /**\n   * Waits for a connection to be available. If timeout expires before getting a connection it callbacks in error.\n   * @returns {Promise<void>}\n   */\n  _waitForReconnection() {\n    return new Promise((resolve, reject) => {\n      const callback = promiseUtils.getCallback(resolve, reject);\n\n      // eslint-disable-next-line prefer-const\n      let timeout;\n\n      function newConnectionListener(err) {\n        clearTimeout(timeout);\n        callback(err);\n      }\n\n      this.once('newConnection', newConnectionListener);\n\n      timeout = setTimeout(() => {\n        this.removeListener('newConnection', newConnectionListener);\n        callback(new errors.OperationTimedOutError('A connection could not be acquired before timeout.'));\n      }, metadataQueryAbortTimeout);\n    });\n  }\n\n  /**\n   * Executes a query using the active connection\n   * @param {String|Request} cqlQuery\n   * @param {Boolean} [waitReconnect] Determines if it should wait for reconnection in case the control connection is not\n   * connected at the moment. Default: true.\n   */\n  async query(cqlQuery, waitReconnect = true) {\n    const queryOnConnection = async () => {\n      if (!this.connection || this._isShuttingDown) {\n        throw new errors.NoHostAvailableError({}, 'ControlConnection is not connected at the time');\n      }\n\n      const request = typeof cqlQuery === 'string' ? new requests.QueryRequest(cqlQuery, null, null) : cqlQuery;\n      return await this.connection.send(request, null);\n    };\n\n    if (!this.connection && waitReconnect) {\n      // Wait until its reconnected (or timer elapses)\n      await this._waitForReconnection();\n    }\n\n    return await queryOnConnection();\n  }\n\n  /** @returns {Encoder} The encoder used by the current connection */\n  getEncoder() {\n    if (!this._encoder) {\n      throw new errors.DriverInternalError('Encoder is not defined');\n    }\n    return this._encoder;\n  }\n\n  /**\n   * Cancels all timers and shuts down synchronously.\n   */\n  shutdown() {\n    this._isShuttingDown = true;\n    this._debouncer.shutdown();\n    // Emit a \"newConnection\" event with Error, as it may clear timeouts that were waiting new connections\n    this.emit('newConnection', new errors.DriverError('ControlConnection is being shutdown'));\n    // Cancel timers\n    clearTimeout(this._topologyChangeTimeout);\n    clearTimeout(this._nodeStatusChangeTimeout);\n  }\n\n  /**\n   * Resets the Connection to its initial state.\n   */\n  async reset() {\n    // Reset the internal state of the ControlConnection for future initialization attempts\n    const currentHosts = this.hosts.clear();\n\n    // Set the shutting down flag temporarily to avoid reconnects.\n    this._isShuttingDown = true;\n\n    // Shutdown all individual pools, ignoring any shutdown error\n    await Promise.all(currentHosts.map(h => h.shutdown()));\n\n    this.initialized = false;\n    this._isShuttingDown = false;\n  }\n\n  /**\n   * Gets a Map containing the original contact points and the addresses that each one resolved to.\n   */\n  getResolvedContactPoints() {\n    return this._resolvedContactPoints;\n  }\n\n  /**\n   * Gets the local IP address to which the control connection socket is bound to.\n   * @returns {String|undefined}\n   */\n  getLocalAddress() {\n    if (!this.connection) {\n      return undefined;\n    }\n\n    return this.connection.getLocalAddress();\n  }\n\n  /**\n   * Gets the address and port of host the control connection is connected to.\n   * @returns {String|undefined}\n   */\n  getEndpoint() {\n    if (!this.connection) {\n      return undefined;\n    }\n\n    return this.connection.endpoint;\n  }\n}\n\n/**\n * Parses the DSE workload and assigns it to a host.\n * @param {Host} host\n * @param {Row} row\n * @private\n */\nfunction setDseParameters(host, row) {\n  if (row['workloads'] !== undefined) {\n    host.workloads = row['workloads'];\n  }\n  else if (row['workload']) {\n    host.workloads = [ row['workload'] ];\n  }\n  else {\n    host.workloads = utils.emptyArray;\n  }\n\n  if (row['dse_version'] !== undefined) {\n    host.dseVersion = row['dse_version'];\n  }\n}\n\nmodule.exports = ControlConnection;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst errors = require('./errors');\nconst requests = require('./requests');\nconst retry = require('./policies/retry');\nconst types = require('./types');\nconst utils = require('./utils');\nconst promiseUtils = require('./promise-utils');\n\nconst retryOnCurrentHost = Object.freeze({\n  decision: retry.RetryPolicy.retryDecision.retry,\n  useCurrentHost: true,\n  consistency: undefined\n});\n\nconst rethrowDecision = Object.freeze({ decision: retry.RetryPolicy.retryDecision.rethrow });\n\n/**\n * An internal representation of an error that occurred during the execution of a request.\n */\nconst errorCodes = {\n  none: 0,\n  // Socket error\n  socketError: 1,\n  // Socket error before the request was written to the wire\n  socketErrorBeforeRequestWritten: 2,\n  // OperationTimedOutError\n  clientTimeout: 3,\n  // Response error \"unprepared\"\n  serverErrorUnprepared: 4,\n  // Response error \"overloaded\", \"is_bootstrapping\" and \"truncateError\":\n  serverErrorOverloaded: 5,\n  serverErrorReadTimeout: 6,\n  serverErrorUnavailable: 7,\n  serverErrorWriteTimeout: 8,\n  // Any other server error (different from the ones detailed above)\n  serverErrorOther: 9\n};\n\nconst metricsHandlers = new Map([\n  [ errorCodes.none, (metrics, err, latency) => metrics.onSuccessfulResponse(latency) ],\n  [ errorCodes.socketError, (metrics, err) => metrics.onConnectionError(err) ],\n  [ errorCodes.clientTimeout, (metrics, err) => metrics.onClientTimeoutError(err) ],\n  [ errorCodes.serverErrorOverloaded, (metrics, err) => metrics.onOtherError(err) ],\n  [ errorCodes.serverErrorReadTimeout, (metrics, err) => metrics.onReadTimeoutError(err) ],\n  [ errorCodes.serverErrorUnavailable, (metrics, err) => metrics.onUnavailableError(err) ],\n  [ errorCodes.serverErrorWriteTimeout, (metrics, err) => metrics.onWriteTimeoutError(err) ],\n  [ errorCodes.serverErrorOther, (metrics, err) => metrics.onOtherError(err) ]\n]);\n\nconst metricsRetryHandlers = new Map([\n  [ errorCodes.socketError, (metrics, err) => metrics.onOtherErrorRetry(err) ],\n  [ errorCodes.clientTimeout, (metrics, err) => metrics.onClientTimeoutRetry(err) ],\n  [ errorCodes.serverErrorOverloaded, (metrics, err) => metrics.onOtherErrorRetry(err) ],\n  [ errorCodes.serverErrorReadTimeout, (metrics, err) => metrics.onReadTimeoutRetry(err) ],\n  [ errorCodes.serverErrorUnavailable, (metrics, err) => metrics.onUnavailableRetry(err) ],\n  [ errorCodes.serverErrorWriteTimeout, (metrics, err) => metrics.onWriteTimeoutRetry(err) ],\n  [ errorCodes.serverErrorOther, (metrics, err) => metrics.onOtherErrorRetry(err) ]\n]);\n\nclass RequestExecution {\n  /**\n   * Encapsulates a single flow of execution against a coordinator, handling individual retries and failover.\n   * @param {RequestHandler!} parent\n   * @param {Host!} host\n   * @param {Connection!} connection\n   */\n  constructor(parent, host, connection) {\n    this._parent = parent;\n    /** @type {OperationState} */\n    this._operation = null;\n    this._host = host;\n    this._connection = connection;\n    this._cancelled = false;\n    this._startTime = null;\n    this._retryCount = 0;\n    // The streamId information is not included in the request.\n    // A pointer to the parent request can be used, except when changing the consistency level from the retry policy\n    this._request = this._parent.request;\n\n    // Mark that it launched a new execution\n    parent.speculativeExecutions++;\n  }\n\n  /**\n   * Sends the request using the active connection.\n   */\n  start() {\n    this._sendOnConnection();\n  }\n\n  /**\n   * Borrows the next connection available using the query plan and sends the request.\n   * @returns {Promise<void>}\n   */\n  async restart() {\n    try {\n      const { host, connection } = this._parent.getNextConnection();\n\n      this._connection = connection;\n      this._host = host;\n    } catch (err) {\n      return this._parent.handleNoHostAvailable(err, this);\n    }\n\n    // It could be a new connection from the pool, we should make sure it's in the correct keyspace.\n    const keyspace = this._parent.client.keyspace;\n    if (keyspace && keyspace !== this._connection.keyspace) {\n      try {\n        await this._connection.changeKeyspace(keyspace);\n      } catch (err) {\n        // When its a socket error, attempt to retry.\n        // Otherwise, rethrow the error to the user.\n        return this._handleError(err, RequestExecution._getErrorCode(err));\n      }\n    }\n\n    if (this._cancelled) {\n      // No need to send the request or invoke any callback\n      return;\n    }\n\n    this._sendOnConnection();\n  }\n\n  /**\n   * Sends the request using the active connection.\n   * @private\n   */\n  _sendOnConnection() {\n    this._startTime = process.hrtime();\n\n    this._operation =\n      this._connection.sendStream(this._request, this._parent.executionOptions, (err, response, length) => {\n        const errorCode = RequestExecution._getErrorCode(err);\n\n        this._trackResponse(process.hrtime(this._startTime), errorCode, err, length);\n\n        if (this._cancelled) {\n          // Avoid handling the response / err\n          return;\n        }\n\n        if (errorCode !== errorCodes.none) {\n          return this._handleError(errorCode, err);\n        }\n\n        if (response.schemaChange) {\n          return promiseUtils.toBackground(\n            this._parent.client\n              .handleSchemaAgreementAndRefresh(this._connection, response.schemaChange)\n              .then(agreement => {\n                if (this._cancelled) {\n                  // After the schema agreement method was started, this execution was cancelled\n                  return;\n                }\n\n                this._parent.setCompleted(null, this._getResultSet(response, agreement));\n              })\n          );\n        }\n\n        if (response.keyspaceSet) {\n          this._parent.client.keyspace = response.keyspaceSet;\n        }\n\n        if (response.meta && response.meta.newResultId && this._request.queryId) {\n          // Update the resultId on the existing prepared statement.\n          // Eventually would want to update the result metadata as well (NODEJS-433)\n          const info = this._parent.client.metadata.getPreparedById(this._request.queryId);\n          info.meta.resultId = response.meta.newResultId;\n        }\n\n        this._parent.setCompleted(null, this._getResultSet(response));\n      });\n  }\n\n  _trackResponse(latency, errorCode, err, length) {\n    // Record metrics\n    RequestExecution._invokeMetricsHandler(errorCode, this._parent.client.metrics, err, latency);\n\n    // Request tracker\n    const tracker = this._parent.client.options.requestTracker;\n\n    if (tracker === null) {\n      return;\n    }\n\n    // Avoid using instanceof as property check is faster\n    const query = this._request.query || this._request.queries;\n    const parameters = this._request.params;\n    const requestLength = this._request.length;\n\n    if (err) {\n      tracker.onError(this._host, query, parameters, this._parent.executionOptions, requestLength, err, latency);\n    } else {\n      tracker.onSuccess(this._host, query, parameters, this._parent.executionOptions, requestLength, length, latency);\n    }\n  }\n\n  _getResultSet(response, agreement) {\n    const rs = new types.ResultSet(response, this._host.address, this._parent.triedHosts, this._parent.speculativeExecutions,\n      this._request.consistency, agreement === undefined || agreement);\n\n    if (rs.rawPageState) {\n      rs.nextPageAsync = this._parent.getNextPageHandler();\n    }\n\n    return rs;\n  }\n\n  /**\n   * Gets the method of the {ClientMetrics} instance depending on the error code and invokes it.\n   * @param {Number} errorCode\n   * @param {ClientMetrics} metrics\n   * @param {Error} err\n   * @param {Array} latency\n   * @private\n   */\n  static _invokeMetricsHandler(errorCode, metrics, err, latency) {\n    const handler = metricsHandlers.get(errorCode);\n    if (handler !== undefined) {\n      handler(metrics, err, latency);\n    }\n\n    if (!err || err instanceof errors.ResponseError) {\n      metrics.onResponse(latency);\n    }\n  }\n\n  /**\n   * Gets the method of the {ClientMetrics} instance related to retry depending on the error code and invokes it.\n   * @param {Number} errorCode\n   * @param {ClientMetrics} metrics\n   * @param {Error} err\n   * @private\n   */\n  static _invokeMetricsHandlerForRetry(errorCode, metrics, err) {\n    const handler = metricsRetryHandlers.get(errorCode);\n\n    if (handler !== undefined) {\n      handler(metrics, err);\n    }\n  }\n\n  /**\n   * Allows the handler to cancel the current request.\n   * When the request has been already written, we can unset the callback and forget about it.\n   */\n  cancel() {\n    this._cancelled = true;\n\n    if (this._operation === null) {\n      return;\n    }\n\n    this._operation.cancel();\n  }\n\n  /**\n   * Determines if the current execution was cancelled.\n   */\n  wasCancelled() {\n    return this._cancelled;\n  }\n\n  _handleError(errorCode, err) {\n    this._parent.triedHosts[this._host.address] = err;\n    err['coordinator'] = this._host.address;\n\n    if (errorCode === errorCodes.serverErrorUnprepared) {\n      return this._prepareAndRetry(err.queryId);\n    }\n\n    if (errorCode === errorCodes.socketError || errorCode === errorCodes.socketErrorBeforeRequestWritten) {\n      this._host.removeFromPool(this._connection);\n    } else if (errorCode === errorCodes.clientTimeout) {\n      this._parent.log('warning', err.message);\n      this._host.checkHealth(this._connection);\n    }\n\n    const decisionInfo = this._getDecision(errorCode, err);\n\n    if (!decisionInfo || decisionInfo.decision === retry.RetryPolicy.retryDecision.rethrow) {\n      if (this._request instanceof requests.QueryRequest || this._request instanceof requests.ExecuteRequest) {\n        err['query'] = this._request.query;\n      }\n      return this._parent.setCompleted(err);\n    }\n\n    const metrics = this._parent.client.metrics;\n\n    if (decisionInfo.decision === retry.RetryPolicy.retryDecision.ignore) {\n      metrics.onIgnoreError(err);\n\n      // Return an empty ResultSet\n      return this._parent.setCompleted(null, this._getResultSet(utils.emptyObject));\n    }\n\n    RequestExecution._invokeMetricsHandlerForRetry(errorCode, metrics, err);\n\n    return this._retry(decisionInfo.consistency, decisionInfo.useCurrentHost);\n  }\n\n  /**\n   * Gets a decision whether or not to retry based on the error information.\n   * @param {Number} errorCode\n   * @param {Error} err\n   * @returns {{decision, useCurrentHost, consistency}}\n   */\n  _getDecision(errorCode, err) {\n    const operationInfo = {\n      query: this._request && this._request.query,\n      executionOptions: this._parent.executionOptions,\n      nbRetry: this._retryCount\n    };\n\n    const retryPolicy = operationInfo.executionOptions.getRetryPolicy();\n\n    switch (errorCode) {\n      case errorCodes.socketErrorBeforeRequestWritten:\n        // The request was definitely not applied, it's safe to retry.\n        // Retry on the current host as there might be other connections open, in case it fails to obtain a connection\n        // on the current host, the driver will immediately retry on the next host.\n        return retryOnCurrentHost;\n      case errorCodes.socketError:\n      case errorCodes.clientTimeout:\n      case errorCodes.serverErrorOverloaded:\n        if (operationInfo.executionOptions.isIdempotent()) {\n          return retryPolicy.onRequestError(operationInfo, this._request.consistency, err);\n        }\n        return rethrowDecision;\n      case errorCodes.serverErrorUnavailable:\n        return retryPolicy.onUnavailable(operationInfo, err.consistencies, err.required, err.alive);\n      case errorCodes.serverErrorReadTimeout:\n        return retryPolicy.onReadTimeout(\n          operationInfo, err.consistencies, err.received, err.blockFor, err.isDataPresent);\n      case errorCodes.serverErrorWriteTimeout:\n        if (operationInfo.executionOptions.isIdempotent()) {\n          return retryPolicy.onWriteTimeout(\n            operationInfo, err.consistencies, err.received, err.blockFor, err.writeType);\n        }\n        return rethrowDecision;\n      default:\n        return rethrowDecision;\n    }\n  }\n\n  static _getErrorCode(err) {\n    if (!err) {\n      return errorCodes.none;\n    }\n\n    if (err.isSocketError) {\n      if (err.requestNotWritten) {\n        return errorCodes.socketErrorBeforeRequestWritten;\n      }\n      return errorCodes.socketError;\n    }\n\n    if (err instanceof errors.OperationTimedOutError) {\n      return errorCodes.clientTimeout;\n    }\n\n    if (err instanceof errors.ResponseError) {\n      switch (err.code) {\n        case types.responseErrorCodes.overloaded:\n        case types.responseErrorCodes.isBootstrapping:\n        case types.responseErrorCodes.truncateError:\n          return errorCodes.serverErrorOverloaded;\n        case types.responseErrorCodes.unavailableException:\n          return errorCodes.serverErrorUnavailable;\n        case types.responseErrorCodes.readTimeout:\n          return errorCodes.serverErrorReadTimeout;\n        case types.responseErrorCodes.writeTimeout:\n          return errorCodes.serverErrorWriteTimeout;\n        case types.responseErrorCodes.unprepared:\n          return errorCodes.serverErrorUnprepared;\n      }\n    }\n\n    return errorCodes.serverErrorOther;\n  }\n\n  /**\n   * @param {Number|undefined} consistency\n   * @param {Boolean} useCurrentHost\n   * @param {Object} [meta]\n   * @private\n   */\n  _retry(consistency, useCurrentHost, meta) {\n    if (this._cancelled) {\n      // No point in retrying\n      return;\n    }\n\n    this._parent.log('info', 'Retrying request');\n    this._retryCount++;\n\n    if (meta || (typeof consistency === 'number' && this._request.consistency !== consistency)) {\n      this._request = this._request.clone();\n      if (typeof consistency === 'number') {\n        this._request.consistency = consistency;\n      }\n      // possible that we are retrying because we had to reprepare.  In this case it is also possible\n      // that our known metadata had changed, therefore we update it on the request.\n      if (meta) {\n        this._request.meta = meta;\n      }\n    }\n\n    if (useCurrentHost !== false) {\n      // Reusing the existing connection is suitable for the most common scenarios, like server read timeouts that\n      // will be fixed with a new request.\n      // To cover all scenarios (e.g., where a different connection to the same host might mean something different),\n      // we obtain a new connection from the host pool.\n      // When there was a socket error, the connection provided was already removed from the pool earlier.\n      try {\n        this._connection = this._host.borrowConnection(this._connection);\n      } catch (err) {\n        // All connections are busy (`BusyConnectionError`) or there isn't a ready connection in the pool (`Error`)\n        // The retry policy declared the intention to retry on the current host but its not available anymore.\n        // Use the next host\n        return promiseUtils.toBackground(this.restart());\n      }\n\n      return this._sendOnConnection();\n    }\n\n    // Use the next host in the query plan to send the request in the background\n    promiseUtils.toBackground(this.restart());\n  }\n\n  /**\n   * Issues a PREPARE request on the current connection.\n   * If there's a socket or timeout issue, it moves to next host and executes the original request.\n   * @param {Buffer} queryId\n   * @private\n   */\n  _prepareAndRetry(queryId) {\n    const connection = this._connection;\n\n    this._parent.log('info',\n      `Query 0x${queryId.toString('hex')} not prepared on` +\n      ` host ${connection.endpointFriendlyName}, preparing and retrying`);\n\n    const info = this._parent.client.metadata.getPreparedById(queryId);\n\n    if (!info) {\n      return this._parent.setCompleted(new errors.DriverInternalError(\n        `Unprepared response invalid, id: 0x${queryId.toString('hex')}`));\n    }\n\n    const version = this._connection.protocolVersion;\n\n    if (!types.protocolVersion.supportsKeyspaceInRequest(version) && info.keyspace && info.keyspace !== connection.keyspace) {\n      return this._parent.setCompleted(\n        new Error(`Query was prepared on keyspace ${info.keyspace}, can't execute it on ${connection.keyspace} (${info.query})`));\n    }\n\n    const self = this;\n    this._connection.prepareOnce(info.query, info.keyspace, function (err, result) {\n      if (err) {\n        if (!err.isSocketError && err instanceof errors.OperationTimedOutError) {\n          self._parent.log('warning',\n            `Unexpected timeout error when re-preparing query on host ${connection.endpointFriendlyName}`);\n        }\n\n        // There was a failure re-preparing on this connection.\n        // Execute the original request on the next connection and forget about the PREPARE-UNPREPARE flow.\n        return self._retry(undefined, false);\n      }\n\n      // It's possible that when re-preparing we got new metadata (i.e. if schema changed), update cache.\n      info.meta = result.meta;\n      // pass the metadata so it can be used in retry.\n      self._retry(undefined, true, result.meta);\n    });\n  }\n}\n\nmodule.exports = RequestExecution;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\n\nconst errors = require('./errors');\nconst types = require('./types');\nconst utils = require('./utils');\nconst RequestExecution = require('./request-execution');\nconst promiseUtils = require('./promise-utils');\n\n/**\n * Handles a BATCH, QUERY and EXECUTE request to the server, dealing with host fail-over and retries on error\n */\nclass RequestHandler {\n  /**\n   * Creates a new instance of RequestHandler.\n   * @param {Request} request\n   * @param {ExecutionOptions} execOptions\n   * @param {Client} client Client instance used to retrieve and set the keyspace.\n   */\n  constructor(request, execOptions, client) {\n    this.client = client;\n    this._speculativeExecutionPlan = client.options.policies.speculativeExecution.newPlan(\n      client.keyspace, request.query || request.queries);\n    this.logEmitter = client.options.logEmitter;\n    this.log = utils.log;\n    this.request = request;\n    this.executionOptions = execOptions;\n    this.stackContainer = null;\n    this.triedHosts = {};\n    // start at -1 as first request does not count.\n    this.speculativeExecutions = -1;\n    this._hostIterator = null;\n    this._resolveCallback = null;\n    this._rejectCallback = null;\n    this._newExecutionTimeout = null;\n    /** @type {RequestExecution[]} */\n    this._executions = [];\n  }\n\n  /**\n   * Sends a new BATCH, QUERY or EXECUTE request.\n   * @param {Request} request\n   * @param {ExecutionOptions} execOptions\n   * @param {Client} client Client instance used to retrieve and set the keyspace.\n   * @returns {Promise<ResultSet>}\n   */\n  static send(request, execOptions, client) {\n    const instance = new RequestHandler(request, execOptions, client);\n    return instance.send();\n  }\n\n  /**\n   * Gets a connection from the next host according to the query plan or throws a NoHostAvailableError.\n   * @returns {{host, connection}}\n   * @throws {NoHostAvailableError}\n   */\n  getNextConnection() {\n    let host;\n    let connection;\n    const iterator = this._hostIterator;\n\n    // Get a host that is UP in a sync loop\n    while (true) {\n      const item = iterator.next();\n      if (item.done) {\n        throw new errors.NoHostAvailableError(this.triedHosts);\n      }\n\n      host = item.value;\n\n      // Set the distance relative to the client first\n      const distance = this.client.profileManager.getDistance(host);\n      if (distance === types.distance.ignored) {\n        //If its marked as ignore by the load balancing policy, move on.\n        continue;\n      }\n\n      if (!host.isUp()) {\n        this.triedHosts[host.address] = 'Host considered as DOWN';\n        continue;\n      }\n\n      try {\n        connection = host.borrowConnection();\n        this.triedHosts[host.address] = null;\n        break;\n      } catch (err) {\n        this.triedHosts[host.address] = err;\n      }\n    }\n\n    return { connection, host };\n  }\n\n  /**\n   * Gets an available connection and sends the request\n   * @returns {Promise<ResultSet>}\n   */\n  send() {\n    if (this.executionOptions.getCaptureStackTrace()) {\n      Error.captureStackTrace(this.stackContainer = {});\n    }\n\n    return new Promise((resolve, reject) => {\n      this._resolveCallback = resolve;\n      this._rejectCallback = reject;\n\n      const lbp = this.executionOptions.getLoadBalancingPolicy();\n      const fixedHost = this.executionOptions.getFixedHost();\n\n      if (fixedHost) {\n        // if host is configured bypass load balancing policy and use\n        // a single host plan.\n        this._hostIterator = utils.arrayIterator([fixedHost]);\n        promiseUtils.toBackground(this._startNewExecution());\n      } else {\n        lbp.newQueryPlan(this.client.keyspace, this.executionOptions, (err, iterator) => {\n          if (err) {\n            return reject(err);\n          }\n\n          this._hostIterator = iterator;\n          promiseUtils.toBackground(this._startNewExecution());\n        });\n      }\n    });\n  }\n\n  /**\n   * Starts a new execution on the next host of the query plan.\n   * @param {Boolean} [isSpecExec]\n   * @returns {Promise<void>}\n   * @private\n   */\n  async _startNewExecution(isSpecExec) {\n    if (isSpecExec) {\n      this.client.metrics.onSpeculativeExecution();\n    }\n\n    let host;\n    let connection;\n\n    try {\n      ({ host, connection } = this.getNextConnection());\n    } catch (err) {\n      return this.handleNoHostAvailable(err, null);\n    }\n\n    if (isSpecExec && this._executions.length >= 0 && this._executions[0].wasCancelled()) {\n      // This method was called on the next tick and could not be cleared, the previous execution was cancelled so\n      // there's no point in launching a new execution.\n      return;\n    }\n\n    if (this.client.keyspace && this.client.keyspace !== connection.keyspace) {\n      try {\n        await connection.changeKeyspace(this.client.keyspace);\n      } catch (err) {\n        this.triedHosts[host.address] = err;\n        // The error occurred asynchronously\n        // We can blindly re-try to obtain a different host/connection.\n        return this._startNewExecution(isSpecExec);\n      }\n    }\n\n    const execution = new RequestExecution(this, host, connection);\n    this._executions.push(execution);\n    execution.start();\n\n    if (this.executionOptions.isIdempotent()) {\n      this._scheduleSpeculativeExecution(host);\n    }\n  }\n\n  /**\n   * Schedules next speculative execution, if any.\n   * @param {Host!} host\n   * @private\n   */\n  _scheduleSpeculativeExecution(host) {\n    const delay = this._speculativeExecutionPlan.nextExecution(host);\n    if (typeof delay !== 'number' || delay < 0) {\n      return;\n    }\n\n    if (delay === 0) {\n      // Parallel speculative execution\n      return process.nextTick(() => {\n        promiseUtils.toBackground(this._startNewExecution(true));\n      });\n    }\n\n    // Create timer for speculative execution\n    this._newExecutionTimeout = setTimeout(() =>\n      promiseUtils.toBackground(this._startNewExecution(true)), delay);\n  }\n\n  /**\n   * Sets the keyspace in any connection that is already opened.\n   * @param {Client} client\n   * @returns {Promise}\n   */\n  static setKeyspace(client) {\n    let connection;\n\n    for (const host of client.hosts.values()) {\n      connection = host.getActiveConnection();\n      if (connection) {\n        break;\n      }\n    }\n\n    if (!connection) {\n      throw new errors.DriverInternalError('No active connection found');\n    }\n\n    return connection.changeKeyspace(client.keyspace);\n  }\n\n  /**\n   * @param {Error} err\n   * @param {ResultSet} [result]\n   */\n  setCompleted(err, result) {\n    if (this._newExecutionTimeout !== null) {\n      clearTimeout(this._newExecutionTimeout);\n    }\n\n    // Mark all executions as cancelled\n    for (const execution of this._executions) {\n      execution.cancel();\n    }\n\n    if (err) {\n      if (this.executionOptions.getCaptureStackTrace()) {\n        utils.fixStack(this.stackContainer.stack, err);\n      }\n\n      // Reject the promise\n      return this._rejectCallback(err);\n    }\n\n    if (result.info.warnings) {\n      // Log the warnings from the response\n      result.info.warnings.forEach(function (message, i, warnings) {\n        this.log('warning', util.format(\n          'Received warning (%d of %d) \"%s\" for \"%s\"',\n          i + 1,\n          warnings.length,\n          message,\n          this.request.query || 'batch'));\n      }, this);\n    }\n\n    // We used to invoke the callback on next tick to allow stack unwinding and prevent the optimizing compiler to\n    // optimize read and write functions together.\n    // As we are resolving a Promise then() and catch() are always scheduled in the microtask queue\n    // We can invoke the resolve method directly.\n    this._resolveCallback(result);\n  }\n\n  /**\n   * @param {NoHostAvailableError} err\n   * @param {RequestExecution|null} execution\n   */\n  handleNoHostAvailable(err, execution) {\n    if (execution !== null) {\n      // Remove the execution\n      const index = this._executions.indexOf(execution);\n      this._executions.splice(index, 1);\n    }\n\n    if (this._executions.length === 0) {\n      // There aren't any other executions, we should report back to the user that there isn't\n      // a host available for executing the request\n      this.setCompleted(err);\n    }\n  }\n\n  /**\n   * Gets a long lived closure that can fetch the next page.\n   * @returns {Function}\n   */\n  getNextPageHandler() {\n    const request = this.request;\n    const execOptions = this.executionOptions;\n    const client = this.client;\n\n    return function nextPageHandler(pageState) {\n      execOptions.setPageState(pageState);\n      return new RequestHandler(request, execOptions, client).send();\n    };\n  }\n}\n\nmodule.exports = RequestHandler;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst os = require('os');\nconst path = require('path');\nconst fs = require('fs');\nconst utils = require('./utils');\nconst promiseUtils = require('./promise-utils');\nconst types = require('./types');\nconst requests = require('./requests');\nconst { ExecutionOptions } = require('./execution-options');\nconst packageInfo = require('../package.json');\nconst VersionNumber = require('./types/version-number');\nconst { NoAuthProvider } = require('./auth');\n\nlet kerberosModule;\n\ntry {\n  // eslint-disable-next-line\n  kerberosModule = require('kerberos');\n}\ncatch (err) {\n  // Kerberos is an optional dependency\n}\n\nconst minDse6Version = new VersionNumber(6, 0, 5);\nconst minDse51Version = new VersionNumber(5, 1, 13);\nconst dse600Version = new VersionNumber(6, 0, 0);\nconst rpc = \"CALL InsightsRpc.reportInsight(?)\";\nconst maxStatusErrorLogs = 5;\n\n/**\n * Contains methods and functionality to send events to DSE Insights.\n */\nclass InsightsClient {\n\n  /**\n   * Creates a new instance of the {@link InsightsClient} using the driver {@link Client}.\n   * @param {Client} client\n   * @param {Object} [options]\n   * @param {Number} [options.statusEventDelay]\n   * @param {Function} [options.errorCallback]\n   */\n  constructor(client, options) {\n    this._client = client;\n    this._sessionId = types.Uuid.random().toString();\n    this._enabled = false;\n    this._closed = false;\n    this._firstTimeout = null;\n    this._recurrentTimeout = null;\n    this._statusErrorLogs = 0;\n\n    options = options || {};\n\n    this._statusEventDelay = options.statusEventDelay || 300000;\n    this._errorCallback = options.errorCallback || utils.noop;\n  }\n\n  /**\n   * Initializes the insights client in the background by sending the startup event and scheduling status events at\n   * regular intervals.\n   * @returns {undefined}\n   */\n  init() {\n    this._enabled = this._client.options.monitorReporting.enabled && this._dseSupportsInsights();\n    if (!this._enabled) {\n      return;\n    }\n\n    promiseUtils.toBackground(this._init());\n  }\n\n  async _init() {\n    try {\n      await this._sendStartupEvent();\n\n      if (this._closed) {\n        // The client was shutdown\n        return;\n      }\n\n      // Send the status event the first time with a delay containing some random portion\n      // Initial delay should be statusEventDelay - (0 to 10%)\n      const firstDelay = Math.floor(this._statusEventDelay - 0.1 * this._statusEventDelay * Math.random());\n      // Schedule the first timer\n      this._firstTimeout = setTimeout(() => {\n        // Send the first status event, the promise will never be rejected\n        this._sendStatusEvent();\n        // The following status events are sent at regular intervals\n        this._recurrentTimeout = setInterval(() => this._sendStatusEvent(), this._statusEventDelay);\n      }, firstDelay);\n    } catch (err) {\n      if (this._closed) {\n        // Sending failed because the Client was shutdown\n        return;\n      }\n      // We shouldn't try to recover\n      this._client.log('verbose', `Insights startup message could not be sent (${err})`, err);\n      this._errorCallback(err);\n    }\n  }\n\n  /**\n   * Sends the startup event.\n   * @returns {Promise}\n   * @private\n   */\n  async _sendStartupEvent() {\n    const message = await this._getStartupMessage();\n    const request = new requests.QueryRequest(rpc, [message], ExecutionOptions.empty());\n    await this._client.controlConnection.query(request, false);\n  }\n\n  /**\n   * Sends the status event.\n   * @returns {Promise} A promise that is never rejected.\n   * @private\n   */\n  async _sendStatusEvent() {\n    const request = new requests.QueryRequest(rpc, [ this._getStatusEvent() ], ExecutionOptions.empty());\n\n    try {\n      await this._client.controlConnection.query(request, false);\n    } catch (err) {\n      if (this._closed) {\n        // Sending failed because the Client was shutdown\n        return;\n      }\n\n      if (this._statusErrorLogs < maxStatusErrorLogs) {\n        this._client.log('warning', `Insights status message could not be sent (${err})`, err);\n        this._statusErrorLogs++;\n      }\n\n      this._errorCallback(err);\n    }\n  }\n\n  /**\n   * Validates the minimum server version for all nodes in the cluster.\n   * @private\n   */\n  _dseSupportsInsights() {\n    if (this._client.hosts.length === 0) {\n      return false;\n    }\n\n    return this._client.hosts.values().reduce((acc, host) => {\n      if (!acc) {\n        return acc;\n      }\n\n      const versionArr = host.getDseVersion();\n\n      if (versionArr.length === 0) {\n        return false;\n      }\n\n      const version = new VersionNumber(...versionArr);\n\n      return version.compare(minDse6Version) >= 0 ||\n        (version.compare(dse600Version) < 0 && version.compare(minDse51Version) >= 0);\n\n    }, true);\n  }\n\n  /**\n   * @returns {Promise<String>} Returns a json string with the startup message.\n   * @private\n   */\n  async _getStartupMessage() {\n    const cc = this._client.controlConnection;\n    const options = this._client.options;\n\n\n    const appInfo = await this._getAppInfo(options);\n    const message = {\n      metadata: {\n        name: 'driver.startup',\n        insightMappingId: 'v1',\n        insightType: 'EVENT',\n        timestamp: Date.now(),\n        tags: { language: 'nodejs' }\n      },\n      data: {\n        driverName: packageInfo.description,\n        driverVersion: packageInfo.version,\n        clientId: options.id,\n        sessionId: this._sessionId,\n        applicationName: appInfo.applicationName,\n        applicationVersion: appInfo.applicationVersion,\n        applicationNameWasGenerated: appInfo.applicationNameWasGenerated,\n        contactPoints: mapToObject(cc.getResolvedContactPoints()),\n        dataCenters: this._getDataCenters(),\n        initialControlConnection: cc.host ? cc.host.address : undefined,\n        protocolVersion: cc.protocolVersion,\n        localAddress: cc.getLocalAddress(),\n        hostName: os.hostname(),\n        executionProfiles: getExecutionProfiles(this._client),\n        poolSizeByHostDistance: {\n          local: options.pooling.coreConnectionsPerHost[types.distance.local],\n          remote: options.pooling.coreConnectionsPerHost[types.distance.remote]\n        },\n        heartbeatInterval: options.pooling.heartBeatInterval,\n        compression: 'NONE',\n        reconnectionPolicy: getPolicyInfo(options.policies.reconnection),\n        ssl: {\n          enabled: !!options.sslOptions,\n          certValidation: options.sslOptions ? !!options.sslOptions.rejectUnauthorized : undefined\n        },\n        authProvider: {\n          type: !(options.authProvider instanceof NoAuthProvider) ? getConstructor(options.authProvider) : undefined,\n        },\n        otherOptions: {\n          coalescingThreshold: options.socketOptions.coalescingThreshold,\n        },\n        platformInfo: {\n          os: {\n            name: os.platform(),\n            version: os.release(),\n            arch: os.arch()\n          },\n          cpus: {\n            length: os.cpus().length,\n            model: os.cpus()[0].model\n          },\n          runtime: {\n            node: process.versions['node'],\n            v8: process.versions['v8'],\n            uv: process.versions['uv'],\n            openssl: process.versions['openssl'],\n            kerberos: kerberosModule ? kerberosModule.version : undefined\n          }\n        },\n        configAntiPatterns: this._getConfigAntiPatterns(),\n        periodicStatusInterval: Math.floor(this._statusEventDelay / 1000)\n      }\n    };\n\n    return JSON.stringify(message);\n  }\n\n  _getConfigAntiPatterns() {\n    const options = this._client.options;\n    const result = {};\n\n    if (options.sslOptions && !options.sslOptions.rejectUnauthorized) {\n      result.sslWithoutCertValidation =\n        'Client-to-node encryption is enabled but server certificate validation is disabled';\n    }\n\n    return result;\n  }\n\n  /**\n   * Gets an array of data centers the driver connects to.\n   * Whether the driver connects to a certain host is determined by the host distance (local and remote hosts)\n   * and the pooling options (whether connection length for remote hosts is greater than 0).\n   * @returns {Array}\n   * @private\n   */\n  _getDataCenters() {\n    const remoteConnectionsLength = this._client.options.pooling.coreConnectionsPerHost[types.distance.remote];\n    const dataCenters = new Set();\n\n    this._client.hosts.values().forEach(h => {\n      const distance = this._client.profileManager.getDistance(h);\n      if (distance === types.distance.local || (distance === types.distance.remote && remoteConnectionsLength > 0)) {\n        dataCenters.add(h.datacenter);\n      }\n    });\n\n    return Array.from(dataCenters);\n  }\n\n  /**\n   * Tries to obtain the application name and version from\n   * @param {DseClientOptions} options\n   * @returns {Promise}\n   * @private\n   */\n  async _getAppInfo(options) {\n    if (typeof options.applicationName === 'string') {\n      return Promise.resolve({\n        applicationName: options.applicationName,\n        applicationVersion: options.applicationVersion,\n        applicationNameWasGenerated: false\n      });\n    }\n\n    let readPromise = Promise.resolve();\n\n    if (require.main && require.main.filename) {\n      const packageInfoPath = path.dirname(require.main.filename);\n      readPromise = this._readPackageInfoFile(packageInfoPath);\n    }\n\n    const text = await readPromise;\n    let applicationName = 'Default Node.js Application';\n    let applicationVersion;\n\n    if (text) {\n      try {\n        const packageInfo = JSON.parse(text);\n        if (packageInfo.name) {\n          applicationName = packageInfo.name;\n          applicationVersion = packageInfo.version;\n        }\n      }\n      catch (err) {\n        // The package.json file could not be parsed\n        // Use the default name\n      }\n    }\n\n    return {\n      applicationName,\n      applicationVersion,\n      applicationNameWasGenerated: true\n    };\n  }\n\n  /**\n   * @private\n   * @returns {Promise<string>} A Promise that will never be rejected\n   */\n  _readPackageInfoFile(packageInfoPath) {\n    return new Promise(resolve => {\n      fs.readFile(path.join(packageInfoPath, 'package.json'), 'utf8', (err, data) => {\n        // Swallow error\n        resolve(data);\n      });\n    });\n  }\n\n  /**\n   * @returns {String} Returns a json string with the startup message.\n   * @private\n   */\n  _getStatusEvent() {\n    const cc = this._client.controlConnection;\n    const options = this._client.options;\n    const state = this._client.getState();\n    const connectedNodes = {};\n\n    state.getConnectedHosts().forEach(h => {\n      connectedNodes[h.address] = {\n        connections: state.getOpenConnections(h),\n        inFlightQueries: state.getInFlightQueries(h)\n      };\n    });\n\n    const message = {\n      metadata: {\n        name: 'driver.status',\n        insightMappingId: 'v1',\n        insightType: 'EVENT',\n        timestamp: Date.now(),\n        tags: { language: 'nodejs' }\n      },\n      data: {\n        clientId: options.id,\n        sessionId: this._sessionId,\n        controlConnection: cc.host ? cc.host.address : undefined,\n        connectedNodes\n      }\n    };\n\n    return JSON.stringify(message);\n  }\n\n  /**\n   * Cleans any timer used internally and sets the client as closed.\n   */\n  shutdown() {\n    if (!this._enabled) {\n      return;\n    }\n\n    this._closed = true;\n\n    if (this._firstTimeout !== null) {\n      clearTimeout(this._firstTimeout);\n    }\n\n    if (this._recurrentTimeout !== null) {\n      clearInterval(this._recurrentTimeout);\n    }\n  }\n}\n\nmodule.exports = InsightsClient;\n\nfunction mapToObject(map) {\n  const result = {};\n  map.forEach((value, key) => result[key] = value);\n  return result;\n}\n\nfunction getPolicyInfo(policy) {\n  if (!policy) {\n    return undefined;\n  }\n\n  const options = policy.getOptions && policy.getOptions();\n\n  return {\n    type: policy.constructor.name,\n    options: (options instanceof Map) ? mapToObject(options) : utils.emptyObject\n  };\n}\n\nfunction getConsistencyString(c) {\n  if (typeof c !== 'number') {\n    return undefined;\n  }\n\n  return types.consistencyToString[c];\n}\n\nfunction getConstructor(instance) {\n  return instance ? instance.constructor.name : undefined;\n}\n\nfunction getExecutionProfiles(client) {\n  const executionProfiles = {};\n\n  const defaultProfile = client.profileManager.getDefault();\n  setExecutionProfileProperties(client, executionProfiles, defaultProfile, defaultProfile);\n\n  client.profileManager.getAll()\n    .filter(p => p !== defaultProfile)\n    .forEach(profile => setExecutionProfileProperties(client, executionProfiles, profile, defaultProfile));\n\n  return executionProfiles;\n}\n\nfunction setExecutionProfileProperties(client, parent, profile, defaultProfile) {\n  const output = parent[profile.name] = {};\n  setExecutionProfileItem(output, profile, defaultProfile, 'readTimeout');\n  setExecutionProfileItem(output, profile, defaultProfile, 'loadBalancing', getPolicyInfo);\n  setExecutionProfileItem(output, profile, defaultProfile, 'retry', getPolicyInfo);\n  setExecutionProfileItem(output, profile, defaultProfile, 'consistency', getConsistencyString);\n  setExecutionProfileItem(output, profile, defaultProfile, 'serialConsistency', getConsistencyString);\n\n  if (profile === defaultProfile) {\n    // Speculative execution policy is included in the profiles as some drivers support\n    // different spec exec policy per profile, in this case is fixed for all profiles\n    output.speculativeExecution = getPolicyInfo(client.options.policies.speculativeExecution);\n  }\n\n  if (profile.graphOptions) {\n    output.graphOptions = {};\n    const defaultGraphOptions = defaultProfile.graphOptions || utils.emptyObject;\n    setExecutionProfileItem(output.graphOptions, profile.graphOptions, defaultGraphOptions, 'language');\n    setExecutionProfileItem(output.graphOptions, profile.graphOptions, defaultGraphOptions, 'name');\n    setExecutionProfileItem(output.graphOptions, profile.graphOptions, defaultGraphOptions, 'readConsistency',\n      getConsistencyString);\n    setExecutionProfileItem(output.graphOptions, profile.graphOptions, defaultGraphOptions, 'source');\n    setExecutionProfileItem(output.graphOptions, profile.graphOptions, defaultGraphOptions, 'writeConsistency',\n      getConsistencyString);\n\n    if (Object.keys(output.graphOptions).length === 0) {\n      // Properties that are undefined will not be included in the JSON\n      output.graphOptions = undefined;\n    }\n  }\n}\n\nfunction setExecutionProfileItem(output, profile, defaultProfile, prop, valueGetter) {\n  const value = profile[prop];\n  valueGetter = valueGetter || (x => x);\n\n  if ((profile === defaultProfile && value !== undefined) || value !== defaultProfile[prop]) {\n    output[prop] = valueGetter(value);\n  }\n}","exports.require = function () {\n    if (typeof process === \"object\" && process.versions && process.versions[\"electron\"]) {\n        try {\n            const originalFs = require(\"original-fs\");\n            if (Object.keys(originalFs).length > 0) {\n                return originalFs;\n            }\n        } catch (e) {}\n    }\n    return require(\"fs\");\n};\n","module.exports = {\n    /* The local file header */\n    LOCHDR           : 30, // LOC header size\n    LOCSIG           : 0x04034b50, // \"PK\\003\\004\"\n    LOCVER           : 4,\t// version needed to extract\n    LOCFLG           : 6, // general purpose bit flag\n    LOCHOW           : 8, // compression method\n    LOCTIM           : 10, // modification time (2 bytes time, 2 bytes date)\n    LOCCRC           : 14, // uncompressed file crc-32 value\n    LOCSIZ           : 18, // compressed size\n    LOCLEN           : 22, // uncompressed size\n    LOCNAM           : 26, // filename length\n    LOCEXT           : 28, // extra field length\n\n    /* The Data descriptor */\n    EXTSIG           : 0x08074b50, // \"PK\\007\\008\"\n    EXTHDR           : 16, // EXT header size\n    EXTCRC           : 4, // uncompressed file crc-32 value\n    EXTSIZ           : 8, // compressed size\n    EXTLEN           : 12, // uncompressed size\n\n    /* The central directory file header */\n    CENHDR           : 46, // CEN header size\n    CENSIG           : 0x02014b50, // \"PK\\001\\002\"\n    CENVEM           : 4, // version made by\n    CENVER           : 6, // version needed to extract\n    CENFLG           : 8, // encrypt, decrypt flags\n    CENHOW           : 10, // compression method\n    CENTIM           : 12, // modification time (2 bytes time, 2 bytes date)\n    CENCRC           : 16, // uncompressed file crc-32 value\n    CENSIZ           : 20, // compressed size\n    CENLEN           : 24, // uncompressed size\n    CENNAM           : 28, // filename length\n    CENEXT           : 30, // extra field length\n    CENCOM           : 32, // file comment length\n    CENDSK           : 34, // volume number start\n    CENATT           : 36, // internal file attributes\n    CENATX           : 38, // external file attributes (host system dependent)\n    CENOFF           : 42, // LOC header offset\n\n    /* The entries in the end of central directory */\n    ENDHDR           : 22, // END header size\n    ENDSIG           : 0x06054b50, // \"PK\\005\\006\"\n    ENDSUB           : 8, // number of entries on this disk\n    ENDTOT           : 10, // total number of entries\n    ENDSIZ           : 12, // central directory size in bytes\n    ENDOFF           : 16, // offset of first CEN header\n    ENDCOM           : 20, // zip file comment length\n\n    END64HDR         : 20, // zip64 END header size\n    END64SIG         : 0x07064b50, // zip64 Locator signature, \"PK\\006\\007\"\n    END64START       : 4, // number of the disk with the start of the zip64\n    END64OFF         : 8, // relative offset of the zip64 end of central directory\n    END64NUMDISKS    : 16, // total number of disks\n\n    ZIP64SIG         : 0x06064b50, // zip64 signature, \"PK\\006\\006\"\n    ZIP64HDR         : 56, // zip64 record minimum size\n    ZIP64LEAD        : 12, // leading bytes at the start of the record, not counted by the value stored in ZIP64SIZE\n    ZIP64SIZE        : 4, // zip64 size of the central directory record\n    ZIP64VEM         : 12, // zip64 version made by\n    ZIP64VER         : 14, // zip64 version needed to extract\n    ZIP64DSK         : 16, // zip64 number of this disk\n    ZIP64DSKDIR      : 20, // number of the disk with the start of the record directory\n    ZIP64SUB         : 24, // number of entries on this disk\n    ZIP64TOT         : 32, // total number of entries\n    ZIP64SIZB        : 40, // zip64 central directory size in bytes\n    ZIP64OFF         : 48, // offset of start of central directory with respect to the starting disk number\n    ZIP64EXTRA       : 56, // extensible data sector\n\n    /* Compression methods */\n    STORED           : 0, // no compression\n    SHRUNK           : 1, // shrunk\n    REDUCED1         : 2, // reduced with compression factor 1\n    REDUCED2         : 3, // reduced with compression factor 2\n    REDUCED3         : 4, // reduced with compression factor 3\n    REDUCED4         : 5, // reduced with compression factor 4\n    IMPLODED         : 6, // imploded\n    // 7 reserved for Tokenizing compression algorithm\n    DEFLATED         : 8, // deflated\n    ENHANCED_DEFLATED: 9, // enhanced deflated\n    PKWARE           : 10,// PKWare DCL imploded\n    // 11 reserved by PKWARE\n    BZIP2            : 12, //  compressed using BZIP2\n    // 13 reserved by PKWARE\n    LZMA             : 14, // LZMA\n    // 15-17 reserved by PKWARE\n    IBM_TERSE        : 18, // compressed using IBM TERSE\n    IBM_LZ77         : 19, // IBM LZ77 z\n    AES_ENCRYPT      : 99, // WinZIP AES encryption method\n\n    /* General purpose bit flag */\n    // values can obtained with expression 2**bitnr\n    FLG_ENC          : 1,    // Bit 0: encrypted file\n    FLG_COMP1        : 2,    // Bit 1, compression option\n    FLG_COMP2        : 4,    // Bit 2, compression option\n    FLG_DESC         : 8,    // Bit 3, data descriptor\n    FLG_ENH          : 16,   // Bit 4, enhanced deflating\n    FLG_PATCH        : 32,   // Bit 5, indicates that the file is compressed patched data.\n    FLG_STR          : 64,   // Bit 6, strong encryption (patented)\n                             // Bits 7-10: Currently unused.\n    FLG_EFS          : 2048, // Bit 11: Language encoding flag (EFS)\n                             // Bit 12: Reserved by PKWARE for enhanced compression.\n                             // Bit 13: encrypted the Central Directory (patented).\n                             // Bits 14-15: Reserved by PKWARE.\n    FLG_MSK          : 4096, // mask header values\n\n    /* Load type */\n    FILE             : 2,\n    BUFFER           : 1,\n    NONE             : 0,\n\n    /* 4.5 Extensible data fields */\n    EF_ID            : 0,\n    EF_SIZE          : 2,\n\n    /* Header IDs */\n    ID_ZIP64         : 0x0001,\n    ID_AVINFO        : 0x0007,\n    ID_PFS           : 0x0008,\n    ID_OS2           : 0x0009,\n    ID_NTFS          : 0x000a,\n    ID_OPENVMS       : 0x000c,\n    ID_UNIX          : 0x000d,\n    ID_FORK          : 0x000e,\n    ID_PATCH         : 0x000f,\n    ID_X509_PKCS7    : 0x0014,\n    ID_X509_CERTID_F : 0x0015,\n    ID_X509_CERTID_C : 0x0016,\n    ID_STRONGENC     : 0x0017,\n    ID_RECORD_MGT    : 0x0018,\n    ID_X509_PKCS7_RL : 0x0019,\n    ID_IBM1          : 0x0065,\n    ID_IBM2          : 0x0066,\n    ID_POSZIP        : 0x4690,\n\n    EF_ZIP64_OR_32   : 0xffffffff,\n    EF_ZIP64_OR_16   : 0xffff,\n    EF_ZIP64_SUNCOMP : 0,\n    EF_ZIP64_SCOMP   : 8,\n    EF_ZIP64_RHO     : 16,\n    EF_ZIP64_DSN     : 24\n};\n","const fsystem = require(\"./fileSystem\").require();\nconst pth = require(\"path\");\nconst Constants = require(\"./constants\");\nconst isWin = typeof process === \"object\" && \"win32\" === process.platform;\n\nconst is_Obj = (obj) => obj && typeof obj === \"object\";\n\n// generate CRC32 lookup table\nconst crcTable = new Uint32Array(256).map((t, c) => {\n    for (let k = 0; k < 8; k++) {\n        if ((c & 1) !== 0) {\n            c = 0xedb88320 ^ (c >>> 1);\n        } else {\n            c >>>= 1;\n        }\n    }\n    return c >>> 0;\n});\n\n// UTILS functions\n\nfunction Utils(opts) {\n    this.sep = pth.sep;\n    this.fs = fsystem;\n\n    if (is_Obj(opts)) {\n        // custom filesystem\n        if (is_Obj(opts.fs) && typeof opts.fs.statSync === \"function\") {\n            this.fs = opts.fs;\n        }\n    }\n}\n\nmodule.exports = Utils;\n\n// INSTANCED functions\n\nUtils.prototype.makeDir = function (/*String*/ folder) {\n    const self = this;\n\n    // Sync - make directories tree\n    function mkdirSync(/*String*/ fpath) {\n        let resolvedPath = fpath.split(self.sep)[0];\n        fpath.split(self.sep).forEach(function (name) {\n            if (!name || name.substr(-1, 1) === \":\") return;\n            resolvedPath += self.sep + name;\n            var stat;\n            try {\n                stat = self.fs.statSync(resolvedPath);\n            } catch (e) {\n                self.fs.mkdirSync(resolvedPath);\n            }\n            if (stat && stat.isFile()) throw Errors.FILE_IN_THE_WAY.replace(\"%s\", resolvedPath);\n        });\n    }\n\n    mkdirSync(folder);\n};\n\nUtils.prototype.writeFileTo = function (/*String*/ path, /*Buffer*/ content, /*Boolean*/ overwrite, /*Number*/ attr) {\n    const self = this;\n    if (self.fs.existsSync(path)) {\n        if (!overwrite) return false; // cannot overwrite\n\n        var stat = self.fs.statSync(path);\n        if (stat.isDirectory()) {\n            return false;\n        }\n    }\n    var folder = pth.dirname(path);\n    if (!self.fs.existsSync(folder)) {\n        self.makeDir(folder);\n    }\n\n    var fd;\n    try {\n        fd = self.fs.openSync(path, \"w\", 438); // 0666\n    } catch (e) {\n        self.fs.chmodSync(path, 438);\n        fd = self.fs.openSync(path, \"w\", 438);\n    }\n    if (fd) {\n        try {\n            self.fs.writeSync(fd, content, 0, content.length, 0);\n        } finally {\n            self.fs.closeSync(fd);\n        }\n    }\n    self.fs.chmodSync(path, attr || 438);\n    return true;\n};\n\nUtils.prototype.writeFileToAsync = function (/*String*/ path, /*Buffer*/ content, /*Boolean*/ overwrite, /*Number*/ attr, /*Function*/ callback) {\n    if (typeof attr === \"function\") {\n        callback = attr;\n        attr = undefined;\n    }\n\n    const self = this;\n\n    self.fs.exists(path, function (exist) {\n        if (exist && !overwrite) return callback(false);\n\n        self.fs.stat(path, function (err, stat) {\n            if (exist && stat.isDirectory()) {\n                return callback(false);\n            }\n\n            var folder = pth.dirname(path);\n            self.fs.exists(folder, function (exists) {\n                if (!exists) self.makeDir(folder);\n\n                self.fs.open(path, \"w\", 438, function (err, fd) {\n                    if (err) {\n                        self.fs.chmod(path, 438, function () {\n                            self.fs.open(path, \"w\", 438, function (err, fd) {\n                                self.fs.write(fd, content, 0, content.length, 0, function () {\n                                    self.fs.close(fd, function () {\n                                        self.fs.chmod(path, attr || 438, function () {\n                                            callback(true);\n                                        });\n                                    });\n                                });\n                            });\n                        });\n                    } else if (fd) {\n                        self.fs.write(fd, content, 0, content.length, 0, function () {\n                            self.fs.close(fd, function () {\n                                self.fs.chmod(path, attr || 438, function () {\n                                    callback(true);\n                                });\n                            });\n                        });\n                    } else {\n                        self.fs.chmod(path, attr || 438, function () {\n                            callback(true);\n                        });\n                    }\n                });\n            });\n        });\n    });\n};\n\nUtils.prototype.findFiles = function (/*String*/ path) {\n    const self = this;\n\n    function findSync(/*String*/ dir, /*RegExp*/ pattern, /*Boolean*/ recursive) {\n        if (typeof pattern === \"boolean\") {\n            recursive = pattern;\n            pattern = undefined;\n        }\n        let files = [];\n        self.fs.readdirSync(dir).forEach(function (file) {\n            var path = pth.join(dir, file);\n\n            if (self.fs.statSync(path).isDirectory() && recursive) files = files.concat(findSync(path, pattern, recursive));\n\n            if (!pattern || pattern.test(path)) {\n                files.push(pth.normalize(path) + (self.fs.statSync(path).isDirectory() ? self.sep : \"\"));\n            }\n        });\n        return files;\n    }\n\n    return findSync(path, undefined, true);\n};\n\nUtils.prototype.getAttributes = function () {};\n\nUtils.prototype.setAttributes = function () {};\n\n// STATIC functions\n\n// crc32 single update (it is part of crc32)\nUtils.crc32update = function (crc, byte) {\n    return crcTable[(crc ^ byte) & 0xff] ^ (crc >>> 8);\n};\n\nUtils.crc32 = function (buf) {\n    if (typeof buf === \"string\") {\n        buf = Buffer.from(buf, \"utf8\");\n    }\n    // Generate crcTable\n    if (!crcTable.length) genCRCTable();\n\n    let len = buf.length;\n    let crc = ~0;\n    for (let off = 0; off < len; ) crc = Utils.crc32update(crc, buf[off++]);\n    // xor and cast as uint32 number\n    return ~crc >>> 0;\n};\n\nUtils.methodToString = function (/*Number*/ method) {\n    switch (method) {\n        case Constants.STORED:\n            return \"STORED (\" + method + \")\";\n        case Constants.DEFLATED:\n            return \"DEFLATED (\" + method + \")\";\n        default:\n            return \"UNSUPPORTED (\" + method + \")\";\n    }\n};\n\n// removes \"..\" style path elements\nUtils.canonical = function (/*string*/ path) {\n    if (!path) return \"\";\n    // trick normalize think path is absolute\n    var safeSuffix = pth.posix.normalize(\"/\" + path.split(\"\\\\\").join(\"/\"));\n    return pth.join(\".\", safeSuffix);\n};\n\n// make abolute paths taking prefix as root folder\nUtils.sanitize = function (/*string*/ prefix, /*string*/ name) {\n    prefix = pth.resolve(pth.normalize(prefix));\n    var parts = name.split(\"/\");\n    for (var i = 0, l = parts.length; i < l; i++) {\n        var path = pth.normalize(pth.join(prefix, parts.slice(i, l).join(pth.sep)));\n        if (path.indexOf(prefix) === 0) {\n            return path;\n        }\n    }\n    return pth.normalize(pth.join(prefix, pth.basename(name)));\n};\n\n// converts buffer, Uint8Array, string types to buffer\nUtils.toBuffer = function toBuffer(/*buffer, Uint8Array, string*/ input) {\n    if (Buffer.isBuffer(input)) {\n        return input;\n    } else if (input instanceof Uint8Array) {\n        return Buffer.from(input);\n    } else {\n        // expect string all other values are invalid and return empty buffer\n        return typeof input === \"string\" ? Buffer.from(input, \"utf8\") : Buffer.alloc(0);\n    }\n};\n\nUtils.readBigUInt64LE = function (/*Buffer*/ buffer, /*int*/ index) {\n    var slice = Buffer.from(buffer.slice(index, index + 8));\n    slice.swap64();\n\n    return parseInt(`0x${slice.toString(\"hex\")}`);\n};\n\nUtils.isWin = isWin; // Do we have windows system\nUtils.crcTable = crcTable;\n","module.exports = {\n    /* Header error messages */\n    INVALID_LOC: \"Invalid LOC header (bad signature)\",\n    INVALID_CEN: \"Invalid CEN header (bad signature)\",\n    INVALID_END: \"Invalid END header (bad signature)\",\n\n    /* ZipEntry error messages*/\n    NO_DATA: \"Nothing to decompress\",\n    BAD_CRC: \"CRC32 checksum failed\",\n    FILE_IN_THE_WAY: \"There is a file in the way: %s\",\n    UNKNOWN_METHOD: \"Invalid/unsupported compression method\",\n\n    /* Inflater error messages */\n    AVAIL_DATA: \"inflate::Available inflate data did not terminate\",\n    INVALID_DISTANCE: \"inflate::Invalid literal/length or distance code in fixed or dynamic block\",\n    TO_MANY_CODES: \"inflate::Dynamic block code description: too many length or distance codes\",\n    INVALID_REPEAT_LEN: \"inflate::Dynamic block code description: repeat more than specified lengths\",\n    INVALID_REPEAT_FIRST: \"inflate::Dynamic block code description: repeat lengths with no first length\",\n    INCOMPLETE_CODES: \"inflate::Dynamic block code description: code lengths codes incomplete\",\n    INVALID_DYN_DISTANCE: \"inflate::Dynamic block code description: invalid distance code lengths\",\n    INVALID_CODES_LEN: \"inflate::Dynamic block code description: invalid literal/length code lengths\",\n    INVALID_STORE_BLOCK: \"inflate::Stored block length did not match one's complement\",\n    INVALID_BLOCK_TYPE: \"inflate::Invalid block type (type == 3)\",\n\n    /* ADM-ZIP error messages */\n    CANT_EXTRACT_FILE: \"Could not extract the file\",\n    CANT_OVERRIDE: \"Target file already exists\",\n    NO_ZIP: \"No zip file was loaded\",\n    NO_ENTRY: \"Entry doesn't exist\",\n    DIRECTORY_CONTENT_ERROR: \"A directory cannot have content\",\n    FILE_NOT_FOUND: \"File not found: %s\",\n    NOT_IMPLEMENTED: \"Not implemented\",\n    INVALID_FILENAME: \"Invalid filename\",\n    INVALID_FORMAT: \"Invalid or unsupported zip format. No END header found\"\n};\n","const fs = require(\"./fileSystem\").require();\nconst pth = require(\"path\");\n\nfs.existsSync = fs.existsSync || pth.existsSync;\n\nmodule.exports = function (/*String*/ path) {\n    var _path = path || \"\",\n        _obj = newAttr(),\n        _stat = null;\n\n    function newAttr() {\n        return {\n            directory: false,\n            readonly: false,\n            hidden: false,\n            executable: false,\n            mtime: 0,\n            atime: 0\n        };\n    }\n\n    if (_path && fs.existsSync(_path)) {\n        _stat = fs.statSync(_path);\n        _obj.directory = _stat.isDirectory();\n        _obj.mtime = _stat.mtime;\n        _obj.atime = _stat.atime;\n        _obj.executable = (0o111 & _stat.mode) !== 0; // file is executable who ever har right not just owner\n        _obj.readonly = (0o200 & _stat.mode) === 0; // readonly if owner has no write right\n        _obj.hidden = pth.basename(_path)[0] === \".\";\n    } else {\n        console.warn(\"Invalid path: \" + _path);\n    }\n\n    return {\n        get directory() {\n            return _obj.directory;\n        },\n\n        get readOnly() {\n            return _obj.readonly;\n        },\n\n        get hidden() {\n            return _obj.hidden;\n        },\n\n        get mtime() {\n            return _obj.mtime;\n        },\n\n        get atime() {\n            return _obj.atime;\n        },\n\n        get executable() {\n            return _obj.executable;\n        },\n\n        decodeAttributes: function () {},\n\n        encodeAttributes: function () {},\n\n        toJSON: function () {\n            return {\n                path: _path,\n                isDirectory: _obj.directory,\n                isReadOnly: _obj.readonly,\n                isHidden: _obj.hidden,\n                isExecutable: _obj.executable,\n                mTime: _obj.mtime,\n                aTime: _obj.atime\n            };\n        },\n\n        toString: function () {\n            return JSON.stringify(this.toJSON(), null, \"\\t\");\n        }\n    };\n};\n","module.exports = require(\"./utils\");\nmodule.exports.Constants = require(\"./constants\");\nmodule.exports.Errors = require(\"./errors\");\nmodule.exports.FileAttr = require(\"./fattr\");\n","var Utils = require(\"../util\"),\n    Constants = Utils.Constants;\n\n/* The central directory file header */\nmodule.exports = function () {\n    var _verMade = 20, // v2.0\n        _version = 10, // v1.0\n        _flags = 0,\n        _method = 0,\n        _time = 0,\n        _crc = 0,\n        _compressedSize = 0,\n        _size = 0,\n        _fnameLen = 0,\n        _extraLen = 0,\n        _comLen = 0,\n        _diskStart = 0,\n        _inattr = 0,\n        _attr = 0,\n        _offset = 0;\n\n    _verMade |= Utils.isWin ? 0x0a00 : 0x0300;\n\n    // Set EFS flag since filename and comment fields are all by default encoded using UTF-8.\n    // Without it file names may be corrupted for other apps when file names use unicode chars\n    _flags |= Constants.FLG_EFS;\n\n    var _dataHeader = {};\n\n    function setTime(val) {\n        val = new Date(val);\n        _time =\n            (((val.getFullYear() - 1980) & 0x7f) << 25) | // b09-16 years from 1980\n            ((val.getMonth() + 1) << 21) | // b05-08 month\n            (val.getDate() << 16) | // b00-04 hour\n            // 2 bytes time\n            (val.getHours() << 11) | // b11-15 hour\n            (val.getMinutes() << 5) | // b05-10 minute\n            (val.getSeconds() >> 1); // b00-04 seconds divided by 2\n    }\n\n    setTime(+new Date());\n\n    return {\n        get made() {\n            return _verMade;\n        },\n        set made(val) {\n            _verMade = val;\n        },\n\n        get version() {\n            return _version;\n        },\n        set version(val) {\n            _version = val;\n        },\n\n        get flags() {\n            return _flags;\n        },\n        set flags(val) {\n            _flags = val;\n        },\n\n        get method() {\n            return _method;\n        },\n        set method(val) {\n            switch (val) {\n                case Constants.STORED:\n                    this.version = 10;\n                case Constants.DEFLATED:\n                default:\n                    this.version = 20;\n            }\n            _method = val;\n        },\n\n        get time() {\n            return new Date(((_time >> 25) & 0x7f) + 1980, ((_time >> 21) & 0x0f) - 1, (_time >> 16) & 0x1f, (_time >> 11) & 0x1f, (_time >> 5) & 0x3f, (_time & 0x1f) << 1);\n        },\n        set time(val) {\n            setTime(val);\n        },\n\n        get crc() {\n            return _crc;\n        },\n        set crc(val) {\n            _crc = Math.max(0, val) >>> 0;\n        },\n\n        get compressedSize() {\n            return _compressedSize;\n        },\n        set compressedSize(val) {\n            _compressedSize = Math.max(0, val) >>> 0;\n        },\n\n        get size() {\n            return _size;\n        },\n        set size(val) {\n            _size = Math.max(0, val) >>> 0;\n        },\n\n        get fileNameLength() {\n            return _fnameLen;\n        },\n        set fileNameLength(val) {\n            _fnameLen = val;\n        },\n\n        get extraLength() {\n            return _extraLen;\n        },\n        set extraLength(val) {\n            _extraLen = val;\n        },\n\n        get commentLength() {\n            return _comLen;\n        },\n        set commentLength(val) {\n            _comLen = val;\n        },\n\n        get diskNumStart() {\n            return _diskStart;\n        },\n        set diskNumStart(val) {\n            _diskStart = Math.max(0, val) >>> 0;\n        },\n\n        get inAttr() {\n            return _inattr;\n        },\n        set inAttr(val) {\n            _inattr = Math.max(0, val) >>> 0;\n        },\n\n        get attr() {\n            return _attr;\n        },\n        set attr(val) {\n            _attr = Math.max(0, val) >>> 0;\n        },\n\n        // get Unix file permissions\n        get fileAttr() {\n            return _attr ? (((_attr >>> 0) | 0) >> 16) & 0xfff : 0;\n        },\n\n        get offset() {\n            return _offset;\n        },\n        set offset(val) {\n            _offset = Math.max(0, val) >>> 0;\n        },\n\n        get encripted() {\n            return (_flags & 1) === 1;\n        },\n\n        get entryHeaderSize() {\n            return Constants.CENHDR + _fnameLen + _extraLen + _comLen;\n        },\n\n        get realDataOffset() {\n            return _offset + Constants.LOCHDR + _dataHeader.fnameLen + _dataHeader.extraLen;\n        },\n\n        get dataHeader() {\n            return _dataHeader;\n        },\n\n        loadDataHeaderFromBinary: function (/*Buffer*/ input) {\n            var data = input.slice(_offset, _offset + Constants.LOCHDR);\n            // 30 bytes and should start with \"PK\\003\\004\"\n            if (data.readUInt32LE(0) !== Constants.LOCSIG) {\n                throw new Error(Utils.Errors.INVALID_LOC);\n            }\n            _dataHeader = {\n                // version needed to extract\n                version: data.readUInt16LE(Constants.LOCVER),\n                // general purpose bit flag\n                flags: data.readUInt16LE(Constants.LOCFLG),\n                // compression method\n                method: data.readUInt16LE(Constants.LOCHOW),\n                // modification time (2 bytes time, 2 bytes date)\n                time: data.readUInt32LE(Constants.LOCTIM),\n                // uncompressed file crc-32 value\n                crc: data.readUInt32LE(Constants.LOCCRC),\n                // compressed size\n                compressedSize: data.readUInt32LE(Constants.LOCSIZ),\n                // uncompressed size\n                size: data.readUInt32LE(Constants.LOCLEN),\n                // filename length\n                fnameLen: data.readUInt16LE(Constants.LOCNAM),\n                // extra field length\n                extraLen: data.readUInt16LE(Constants.LOCEXT)\n            };\n        },\n\n        loadFromBinary: function (/*Buffer*/ data) {\n            // data should be 46 bytes and start with \"PK 01 02\"\n            if (data.length !== Constants.CENHDR || data.readUInt32LE(0) !== Constants.CENSIG) {\n                throw new Error(Utils.Errors.INVALID_CEN);\n            }\n            // version made by\n            _verMade = data.readUInt16LE(Constants.CENVEM);\n            // version needed to extract\n            _version = data.readUInt16LE(Constants.CENVER);\n            // encrypt, decrypt flags\n            _flags = data.readUInt16LE(Constants.CENFLG);\n            // compression method\n            _method = data.readUInt16LE(Constants.CENHOW);\n            // modification time (2 bytes time, 2 bytes date)\n            _time = data.readUInt32LE(Constants.CENTIM);\n            // uncompressed file crc-32 value\n            _crc = data.readUInt32LE(Constants.CENCRC);\n            // compressed size\n            _compressedSize = data.readUInt32LE(Constants.CENSIZ);\n            // uncompressed size\n            _size = data.readUInt32LE(Constants.CENLEN);\n            // filename length\n            _fnameLen = data.readUInt16LE(Constants.CENNAM);\n            // extra field length\n            _extraLen = data.readUInt16LE(Constants.CENEXT);\n            // file comment length\n            _comLen = data.readUInt16LE(Constants.CENCOM);\n            // volume number start\n            _diskStart = data.readUInt16LE(Constants.CENDSK);\n            // internal file attributes\n            _inattr = data.readUInt16LE(Constants.CENATT);\n            // external file attributes\n            _attr = data.readUInt32LE(Constants.CENATX);\n            // LOC header offset\n            _offset = data.readUInt32LE(Constants.CENOFF);\n        },\n\n        dataHeaderToBinary: function () {\n            // LOC header size (30 bytes)\n            var data = Buffer.alloc(Constants.LOCHDR);\n            // \"PK\\003\\004\"\n            data.writeUInt32LE(Constants.LOCSIG, 0);\n            // version needed to extract\n            data.writeUInt16LE(_version, Constants.LOCVER);\n            // general purpose bit flag\n            data.writeUInt16LE(_flags, Constants.LOCFLG);\n            // compression method\n            data.writeUInt16LE(_method, Constants.LOCHOW);\n            // modification time (2 bytes time, 2 bytes date)\n            data.writeUInt32LE(_time, Constants.LOCTIM);\n            // uncompressed file crc-32 value\n            data.writeUInt32LE(_crc, Constants.LOCCRC);\n            // compressed size\n            data.writeUInt32LE(_compressedSize, Constants.LOCSIZ);\n            // uncompressed size\n            data.writeUInt32LE(_size, Constants.LOCLEN);\n            // filename length\n            data.writeUInt16LE(_fnameLen, Constants.LOCNAM);\n            // extra field length\n            data.writeUInt16LE(_extraLen, Constants.LOCEXT);\n            return data;\n        },\n\n        entryHeaderToBinary: function () {\n            // CEN header size (46 bytes)\n            var data = Buffer.alloc(Constants.CENHDR + _fnameLen + _extraLen + _comLen);\n            // \"PK\\001\\002\"\n            data.writeUInt32LE(Constants.CENSIG, 0);\n            // version made by\n            data.writeUInt16LE(_verMade, Constants.CENVEM);\n            // version needed to extract\n            data.writeUInt16LE(_version, Constants.CENVER);\n            // encrypt, decrypt flags\n            data.writeUInt16LE(_flags, Constants.CENFLG);\n            // compression method\n            data.writeUInt16LE(_method, Constants.CENHOW);\n            // modification time (2 bytes time, 2 bytes date)\n            data.writeUInt32LE(_time, Constants.CENTIM);\n            // uncompressed file crc-32 value\n            data.writeUInt32LE(_crc, Constants.CENCRC);\n            // compressed size\n            data.writeUInt32LE(_compressedSize, Constants.CENSIZ);\n            // uncompressed size\n            data.writeUInt32LE(_size, Constants.CENLEN);\n            // filename length\n            data.writeUInt16LE(_fnameLen, Constants.CENNAM);\n            // extra field length\n            data.writeUInt16LE(_extraLen, Constants.CENEXT);\n            // file comment length\n            data.writeUInt16LE(_comLen, Constants.CENCOM);\n            // volume number start\n            data.writeUInt16LE(_diskStart, Constants.CENDSK);\n            // internal file attributes\n            data.writeUInt16LE(_inattr, Constants.CENATT);\n            // external file attributes\n            data.writeUInt32LE(_attr, Constants.CENATX);\n            // LOC header offset\n            data.writeUInt32LE(_offset, Constants.CENOFF);\n            // fill all with\n            data.fill(0x00, Constants.CENHDR);\n            return data;\n        },\n\n        toJSON: function () {\n            const bytes = function (nr) {\n                return nr + \" bytes\";\n            };\n\n            return {\n                made: _verMade,\n                version: _version,\n                flags: _flags,\n                method: Utils.methodToString(_method),\n                time: this.time,\n                crc: \"0x\" + _crc.toString(16).toUpperCase(),\n                compressedSize: bytes(_compressedSize),\n                size: bytes(_size),\n                fileNameLength: bytes(_fnameLen),\n                extraLength: bytes(_extraLen),\n                commentLength: bytes(_comLen),\n                diskNumStart: _diskStart,\n                inAttr: _inattr,\n                attr: _attr,\n                offset: _offset,\n                entryHeaderSize: bytes(Constants.CENHDR + _fnameLen + _extraLen + _comLen)\n            };\n        },\n\n        toString: function () {\n            return JSON.stringify(this.toJSON(), null, \"\\t\");\n        }\n    };\n};\n","var Utils = require(\"../util\"),\n    Constants = Utils.Constants;\n\n/* The entries in the end of central directory */\nmodule.exports = function () {\n    var _volumeEntries = 0,\n        _totalEntries = 0,\n        _size = 0,\n        _offset = 0,\n        _commentLength = 0;\n\n    return {\n        get diskEntries() {\n            return _volumeEntries;\n        },\n        set diskEntries(/*Number*/ val) {\n            _volumeEntries = _totalEntries = val;\n        },\n\n        get totalEntries() {\n            return _totalEntries;\n        },\n        set totalEntries(/*Number*/ val) {\n            _totalEntries = _volumeEntries = val;\n        },\n\n        get size() {\n            return _size;\n        },\n        set size(/*Number*/ val) {\n            _size = val;\n        },\n\n        get offset() {\n            return _offset;\n        },\n        set offset(/*Number*/ val) {\n            _offset = val;\n        },\n\n        get commentLength() {\n            return _commentLength;\n        },\n        set commentLength(/*Number*/ val) {\n            _commentLength = val;\n        },\n\n        get mainHeaderSize() {\n            return Constants.ENDHDR + _commentLength;\n        },\n\n        loadFromBinary: function (/*Buffer*/ data) {\n            // data should be 22 bytes and start with \"PK 05 06\"\n            // or be 56+ bytes and start with \"PK 06 06\" for Zip64\n            if (\n                (data.length !== Constants.ENDHDR || data.readUInt32LE(0) !== Constants.ENDSIG) &&\n                (data.length < Constants.ZIP64HDR || data.readUInt32LE(0) !== Constants.ZIP64SIG)\n            ) {\n                throw new Error(Utils.Errors.INVALID_END);\n            }\n\n            if (data.readUInt32LE(0) === Constants.ENDSIG) {\n                // number of entries on this volume\n                _volumeEntries = data.readUInt16LE(Constants.ENDSUB);\n                // total number of entries\n                _totalEntries = data.readUInt16LE(Constants.ENDTOT);\n                // central directory size in bytes\n                _size = data.readUInt32LE(Constants.ENDSIZ);\n                // offset of first CEN header\n                _offset = data.readUInt32LE(Constants.ENDOFF);\n                // zip file comment length\n                _commentLength = data.readUInt16LE(Constants.ENDCOM);\n            } else {\n                // number of entries on this volume\n                _volumeEntries = Utils.readBigUInt64LE(data, Constants.ZIP64SUB);\n                // total number of entries\n                _totalEntries = Utils.readBigUInt64LE(data, Constants.ZIP64TOT);\n                // central directory size in bytes\n                _size = Utils.readBigUInt64LE(data, Constants.ZIP64SIZ);\n                // offset of first CEN header\n                _offset = Utils.readBigUInt64LE(data, Constants.ZIP64OFF);\n\n                _commentLength = 0;\n            }\n        },\n\n        toBinary: function () {\n            var b = Buffer.alloc(Constants.ENDHDR + _commentLength);\n            // \"PK 05 06\" signature\n            b.writeUInt32LE(Constants.ENDSIG, 0);\n            b.writeUInt32LE(0, 4);\n            // number of entries on this volume\n            b.writeUInt16LE(_volumeEntries, Constants.ENDSUB);\n            // total number of entries\n            b.writeUInt16LE(_totalEntries, Constants.ENDTOT);\n            // central directory size in bytes\n            b.writeUInt32LE(_size, Constants.ENDSIZ);\n            // offset of first CEN header\n            b.writeUInt32LE(_offset, Constants.ENDOFF);\n            // zip file comment length\n            b.writeUInt16LE(_commentLength, Constants.ENDCOM);\n            // fill comment memory with spaces so no garbage is left there\n            b.fill(\" \", Constants.ENDHDR);\n\n            return b;\n        },\n\n        toJSON: function () {\n            // creates 0x0000 style output\n            const offset = function (nr, len) {\n                let offs = nr.toString(16).toUpperCase();\n                while (offs.length < len) offs = \"0\" + offs;\n                return \"0x\" + offs;\n            };\n\n            return {\n                diskEntries: _volumeEntries,\n                totalEntries: _totalEntries,\n                size: _size + \" bytes\",\n                offset: offset(_offset, 4),\n                commentLength: _commentLength\n            };\n        },\n\n        toString: function () {\n            return JSON.stringify(this.toJSON(), null, \"\\t\");\n        }\n    };\n};\n","exports.EntryHeader = require(\"./entryHeader\");\nexports.MainHeader = require(\"./mainHeader\");\n","module.exports = function (/*Buffer*/ inbuf) {\n    var zlib = require(\"zlib\");\n\n    var opts = { chunkSize: (parseInt(inbuf.length / 1024) + 1) * 1024 };\n\n    return {\n        deflate: function () {\n            return zlib.deflateRawSync(inbuf, opts);\n        },\n\n        deflateAsync: function (/*Function*/ callback) {\n            var tmp = zlib.createDeflateRaw(opts),\n                parts = [],\n                total = 0;\n            tmp.on(\"data\", function (data) {\n                parts.push(data);\n                total += data.length;\n            });\n            tmp.on(\"end\", function () {\n                var buf = Buffer.alloc(total),\n                    written = 0;\n                buf.fill(0);\n                for (var i = 0; i < parts.length; i++) {\n                    var part = parts[i];\n                    part.copy(buf, written);\n                    written += part.length;\n                }\n                callback && callback(buf);\n            });\n            tmp.end(inbuf);\n        }\n    };\n};\n","module.exports = function (/*Buffer*/ inbuf) {\n    var zlib = require(\"zlib\");\n\n    return {\n        inflate: function () {\n            return zlib.inflateRawSync(inbuf);\n        },\n\n        inflateAsync: function (/*Function*/ callback) {\n            var tmp = zlib.createInflateRaw(),\n                parts = [],\n                total = 0;\n            tmp.on(\"data\", function (data) {\n                parts.push(data);\n                total += data.length;\n            });\n            tmp.on(\"end\", function () {\n                var buf = Buffer.alloc(total),\n                    written = 0;\n                buf.fill(0);\n                for (var i = 0; i < parts.length; i++) {\n                    var part = parts[i];\n                    part.copy(buf, written);\n                    written += part.length;\n                }\n                callback && callback(buf);\n            });\n            tmp.end(inbuf);\n        }\n    };\n};\n","\"use strict\";\n\n// node crypt, we use it for generate salt\n// eslint-disable-next-line node/no-unsupported-features/node-builtins\nconst { randomFillSync } = require(\"crypto\");\n\n// generate CRC32 lookup table\nconst crctable = new Uint32Array(256).map((t, crc) => {\n    for (let j = 0; j < 8; j++) {\n        if (0 !== (crc & 1)) {\n            crc = (crc >>> 1) ^ 0xedb88320;\n        } else {\n            crc >>>= 1;\n        }\n    }\n    return crc >>> 0;\n});\n\n// C-style uInt32 Multiply (discards higher bits, when JS multiply discards lower bits)\nconst uMul = (a, b) => Math.imul(a, b) >>> 0;\n\n// crc32 byte single update (actually same function is part of utils.crc32 function :) )\nconst crc32update = (pCrc32, bval) => {\n    return crctable[(pCrc32 ^ bval) & 0xff] ^ (pCrc32 >>> 8);\n};\n\n// function for generating salt for encrytion header\nconst genSalt = () => {\n    if (\"function\" === typeof randomFillSync) {\n        return randomFillSync(Buffer.alloc(12));\n    } else {\n        // fallback if function is not defined\n        return genSalt.node();\n    }\n};\n\n// salt generation with node random function (mainly as fallback)\ngenSalt.node = () => {\n    const salt = Buffer.alloc(12);\n    const len = salt.length;\n    for (let i = 0; i < len; i++) salt[i] = (Math.random() * 256) & 0xff;\n    return salt;\n};\n\n// general config\nconst config = {\n    genSalt\n};\n\n// Class Initkeys handles same basic ops with keys\nfunction Initkeys(pw) {\n    const pass = Buffer.isBuffer(pw) ? pw : Buffer.from(pw);\n    this.keys = new Uint32Array([0x12345678, 0x23456789, 0x34567890]);\n    for (let i = 0; i < pass.length; i++) {\n        this.updateKeys(pass[i]);\n    }\n}\n\nInitkeys.prototype.updateKeys = function (byteValue) {\n    const keys = this.keys;\n    keys[0] = crc32update(keys[0], byteValue);\n    keys[1] += keys[0] & 0xff;\n    keys[1] = uMul(keys[1], 134775813) + 1;\n    keys[2] = crc32update(keys[2], keys[1] >>> 24);\n    return byteValue;\n};\n\nInitkeys.prototype.next = function () {\n    const k = (this.keys[2] | 2) >>> 0; // key\n    return (uMul(k, k ^ 1) >> 8) & 0xff; // decode\n};\n\nfunction make_decrypter(/*Buffer*/ pwd) {\n    // 1. Stage initialize key\n    const keys = new Initkeys(pwd);\n\n    // return decrypter function\n    return function (/*Buffer*/ data) {\n        // result - we create new Buffer for results\n        const result = Buffer.alloc(data.length);\n        let pos = 0;\n        // process input data\n        for (let c of data) {\n            //c ^= keys.next();\n            //result[pos++] = c; // decode & Save Value\n            result[pos++] = keys.updateKeys(c ^ keys.next()); // update keys with decoded byte\n        }\n        return result;\n    };\n}\n\nfunction make_encrypter(/*Buffer*/ pwd) {\n    // 1. Stage initialize key\n    const keys = new Initkeys(pwd);\n\n    // return encrypting function, result and pos is here so we dont have to merge buffers later\n    return function (/*Buffer*/ data, /*Buffer*/ result, /* Number */ pos = 0) {\n        // result - we create new Buffer for results\n        if (!result) result = Buffer.alloc(data.length);\n        // process input data\n        for (let c of data) {\n            const k = keys.next(); // save key byte\n            result[pos++] = c ^ k; // save val\n            keys.updateKeys(c); // update keys with decoded byte\n        }\n        return result;\n    };\n}\n\nfunction decrypt(/*Buffer*/ data, /*Object*/ header, /*String, Buffer*/ pwd) {\n    if (!data || !Buffer.isBuffer(data) || data.length < 12) {\n        return Buffer.alloc(0);\n    }\n\n    // 1. We Initialize and generate decrypting function\n    const decrypter = make_decrypter(pwd);\n\n    // 2. decrypt salt what is always 12 bytes and is a part of file content\n    const salt = decrypter(data.slice(0, 12));\n\n    // 3. does password meet expectations\n    if (salt[11] !== header.crc >>> 24) {\n        throw \"ADM-ZIP: Wrong Password\";\n    }\n\n    // 4. decode content\n    return decrypter(data.slice(12));\n}\n\n// lets add way to populate salt, NOT RECOMMENDED for production but maybe useful for testing general functionality\nfunction _salter(data) {\n    if (Buffer.isBuffer(data) && data.length >= 12) {\n        // be aware - currently salting buffer data is modified\n        config.genSalt = function () {\n            return data.slice(0, 12);\n        };\n    } else if (data === \"node\") {\n        // test salt generation with node random function\n        config.genSalt = genSalt.node;\n    } else {\n        // if value is not acceptable config gets reset.\n        config.genSalt = genSalt;\n    }\n}\n\nfunction encrypt(/*Buffer*/ data, /*Object*/ header, /*String, Buffer*/ pwd, /*Boolean*/ oldlike = false) {\n    // 1. test data if data is not Buffer we make buffer from it\n    if (data == null) data = Buffer.alloc(0);\n    // if data is not buffer be make buffer from it\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data.toString());\n\n    // 2. We Initialize and generate encrypting function\n    const encrypter = make_encrypter(pwd);\n\n    // 3. generate salt (12-bytes of random data)\n    const salt = config.genSalt();\n    salt[11] = (header.crc >>> 24) & 0xff;\n\n    // old implementations (before PKZip 2.04g) used two byte check\n    if (oldlike) salt[10] = (header.crc >>> 16) & 0xff;\n\n    // 4. create output\n    const result = Buffer.alloc(data.length + 12);\n    encrypter(salt, result);\n\n    // finally encode content\n    return encrypter(data, result, 12);\n}\n\nmodule.exports = { decrypt, encrypt, _salter };\n","exports.Deflater = require(\"./deflater\");\nexports.Inflater = require(\"./inflater\");\nexports.ZipCrypto = require(\"./zipcrypto\");\n","var Utils = require(\"./util\"),\n    Headers = require(\"./headers\"),\n    Constants = Utils.Constants,\n    Methods = require(\"./methods\");\n\nmodule.exports = function (/*Buffer*/ input) {\n    var _entryHeader = new Headers.EntryHeader(),\n        _entryName = Buffer.alloc(0),\n        _comment = Buffer.alloc(0),\n        _isDirectory = false,\n        uncompressedData = null,\n        _extra = Buffer.alloc(0);\n\n    function getCompressedDataFromZip() {\n        if (!input || !Buffer.isBuffer(input)) {\n            return Buffer.alloc(0);\n        }\n        _entryHeader.loadDataHeaderFromBinary(input);\n        return input.slice(_entryHeader.realDataOffset, _entryHeader.realDataOffset + _entryHeader.compressedSize);\n    }\n\n    function crc32OK(data) {\n        // if bit 3 (0x08) of the general-purpose flags field is set, then the CRC-32 and file sizes are not known when the header is written\n        if ((_entryHeader.flags & 0x8) !== 0x8) {\n            if (Utils.crc32(data) !== _entryHeader.dataHeader.crc) {\n                return false;\n            }\n        } else {\n            // @TODO: load and check data descriptor header\n            // The fields in the local header are filled with zero, and the CRC-32 and size are appended in a 12-byte structure\n            // (optionally preceded by a 4-byte signature) immediately after the compressed data:\n        }\n        return true;\n    }\n\n    function decompress(/*Boolean*/ async, /*Function*/ callback, /*String, Buffer*/ pass) {\n        if (typeof callback === \"undefined\" && typeof async === \"string\") {\n            pass = async;\n            async = void 0;\n        }\n        if (_isDirectory) {\n            if (async && callback) {\n                callback(Buffer.alloc(0), Utils.Errors.DIRECTORY_CONTENT_ERROR); //si added error.\n            }\n            return Buffer.alloc(0);\n        }\n\n        var compressedData = getCompressedDataFromZip();\n\n        if (compressedData.length === 0) {\n            // File is empty, nothing to decompress.\n            if (async && callback) callback(compressedData);\n            return compressedData;\n        }\n\n        if (_entryHeader.encripted) {\n            if (\"string\" !== typeof pass && !Buffer.isBuffer(pass)) {\n                throw new Error(\"ADM-ZIP: Incompatible password parameter\");\n            }\n            compressedData = Methods.ZipCrypto.decrypt(compressedData, _entryHeader, pass);\n        }\n\n        var data = Buffer.alloc(_entryHeader.size);\n\n        switch (_entryHeader.method) {\n            case Utils.Constants.STORED:\n                compressedData.copy(data);\n                if (!crc32OK(data)) {\n                    if (async && callback) callback(data, Utils.Errors.BAD_CRC); //si added error\n                    throw new Error(Utils.Errors.BAD_CRC);\n                } else {\n                    //si added otherwise did not seem to return data.\n                    if (async && callback) callback(data);\n                    return data;\n                }\n            case Utils.Constants.DEFLATED:\n                var inflater = new Methods.Inflater(compressedData);\n                if (!async) {\n                    const result = inflater.inflate(data);\n                    result.copy(data, 0);\n                    if (!crc32OK(data)) {\n                        throw new Error(Utils.Errors.BAD_CRC + \" \" + _entryName.toString());\n                    }\n                    return data;\n                } else {\n                    inflater.inflateAsync(function (result) {\n                        result.copy(result, 0);\n                        if (callback) {\n                            if (!crc32OK(result)) {\n                                callback(result, Utils.Errors.BAD_CRC); //si added error\n                            } else {\n                                callback(result);\n                            }\n                        }\n                    });\n                }\n                break;\n            default:\n                if (async && callback) callback(Buffer.alloc(0), Utils.Errors.UNKNOWN_METHOD);\n                throw new Error(Utils.Errors.UNKNOWN_METHOD);\n        }\n    }\n\n    function compress(/*Boolean*/ async, /*Function*/ callback) {\n        if ((!uncompressedData || !uncompressedData.length) && Buffer.isBuffer(input)) {\n            // no data set or the data wasn't changed to require recompression\n            if (async && callback) callback(getCompressedDataFromZip());\n            return getCompressedDataFromZip();\n        }\n\n        if (uncompressedData.length && !_isDirectory) {\n            var compressedData;\n            // Local file header\n            switch (_entryHeader.method) {\n                case Utils.Constants.STORED:\n                    _entryHeader.compressedSize = _entryHeader.size;\n\n                    compressedData = Buffer.alloc(uncompressedData.length);\n                    uncompressedData.copy(compressedData);\n\n                    if (async && callback) callback(compressedData);\n                    return compressedData;\n                default:\n                case Utils.Constants.DEFLATED:\n                    var deflater = new Methods.Deflater(uncompressedData);\n                    if (!async) {\n                        var deflated = deflater.deflate();\n                        _entryHeader.compressedSize = deflated.length;\n                        return deflated;\n                    } else {\n                        deflater.deflateAsync(function (data) {\n                            compressedData = Buffer.alloc(data.length);\n                            _entryHeader.compressedSize = data.length;\n                            data.copy(compressedData);\n                            callback && callback(compressedData);\n                        });\n                    }\n                    deflater = null;\n                    break;\n            }\n        } else if (async && callback) {\n            callback(Buffer.alloc(0));\n        } else {\n            return Buffer.alloc(0);\n        }\n    }\n\n    function readUInt64LE(buffer, offset) {\n        return (buffer.readUInt32LE(offset + 4) << 4) + buffer.readUInt32LE(offset);\n    }\n\n    function parseExtra(data) {\n        var offset = 0;\n        var signature, size, part;\n        while (offset < data.length) {\n            signature = data.readUInt16LE(offset);\n            offset += 2;\n            size = data.readUInt16LE(offset);\n            offset += 2;\n            part = data.slice(offset, offset + size);\n            offset += size;\n            if (Constants.ID_ZIP64 === signature) {\n                parseZip64ExtendedInformation(part);\n            }\n        }\n    }\n\n    //Override header field values with values from the ZIP64 extra field\n    function parseZip64ExtendedInformation(data) {\n        var size, compressedSize, offset, diskNumStart;\n\n        if (data.length >= Constants.EF_ZIP64_SCOMP) {\n            size = readUInt64LE(data, Constants.EF_ZIP64_SUNCOMP);\n            if (_entryHeader.size === Constants.EF_ZIP64_OR_32) {\n                _entryHeader.size = size;\n            }\n        }\n        if (data.length >= Constants.EF_ZIP64_RHO) {\n            compressedSize = readUInt64LE(data, Constants.EF_ZIP64_SCOMP);\n            if (_entryHeader.compressedSize === Constants.EF_ZIP64_OR_32) {\n                _entryHeader.compressedSize = compressedSize;\n            }\n        }\n        if (data.length >= Constants.EF_ZIP64_DSN) {\n            offset = readUInt64LE(data, Constants.EF_ZIP64_RHO);\n            if (_entryHeader.offset === Constants.EF_ZIP64_OR_32) {\n                _entryHeader.offset = offset;\n            }\n        }\n        if (data.length >= Constants.EF_ZIP64_DSN + 4) {\n            diskNumStart = data.readUInt32LE(Constants.EF_ZIP64_DSN);\n            if (_entryHeader.diskNumStart === Constants.EF_ZIP64_OR_16) {\n                _entryHeader.diskNumStart = diskNumStart;\n            }\n        }\n    }\n\n    return {\n        get entryName() {\n            return _entryName.toString();\n        },\n        get rawEntryName() {\n            return _entryName;\n        },\n        set entryName(val) {\n            _entryName = Utils.toBuffer(val);\n            var lastChar = _entryName[_entryName.length - 1];\n            _isDirectory = lastChar === 47 || lastChar === 92;\n            _entryHeader.fileNameLength = _entryName.length;\n        },\n\n        get extra() {\n            return _extra;\n        },\n        set extra(val) {\n            _extra = val;\n            _entryHeader.extraLength = val.length;\n            parseExtra(val);\n        },\n\n        get comment() {\n            return _comment.toString();\n        },\n        set comment(val) {\n            _comment = Utils.toBuffer(val);\n            _entryHeader.commentLength = _comment.length;\n        },\n\n        get name() {\n            var n = _entryName.toString();\n            return _isDirectory\n                ? n\n                      .substr(n.length - 1)\n                      .split(\"/\")\n                      .pop()\n                : n.split(\"/\").pop();\n        },\n        get isDirectory() {\n            return _isDirectory;\n        },\n\n        getCompressedData: function () {\n            return compress(false, null);\n        },\n\n        getCompressedDataAsync: function (/*Function*/ callback) {\n            compress(true, callback);\n        },\n\n        setData: function (value) {\n            uncompressedData = Utils.toBuffer(value);\n            if (!_isDirectory && uncompressedData.length) {\n                _entryHeader.size = uncompressedData.length;\n                _entryHeader.method = Utils.Constants.DEFLATED;\n                _entryHeader.crc = Utils.crc32(value);\n                _entryHeader.changed = true;\n            } else {\n                // folders and blank files should be stored\n                _entryHeader.method = Utils.Constants.STORED;\n            }\n        },\n\n        getData: function (pass) {\n            if (_entryHeader.changed) {\n                return uncompressedData;\n            } else {\n                return decompress(false, null, pass);\n            }\n        },\n\n        getDataAsync: function (/*Function*/ callback, pass) {\n            if (_entryHeader.changed) {\n                callback(uncompressedData);\n            } else {\n                decompress(true, callback, pass);\n            }\n        },\n\n        set attr(attr) {\n            _entryHeader.attr = attr;\n        },\n        get attr() {\n            return _entryHeader.attr;\n        },\n\n        set header(/*Buffer*/ data) {\n            _entryHeader.loadFromBinary(data);\n        },\n\n        get header() {\n            return _entryHeader;\n        },\n\n        packHeader: function () {\n            // 1. create header (buffer)\n            var header = _entryHeader.entryHeaderToBinary();\n            var addpos = Utils.Constants.CENHDR;\n            // 2. add file name\n            _entryName.copy(header, addpos);\n            addpos += _entryName.length;\n            // 3. add extra data\n            if (_entryHeader.extraLength) {\n                _extra.copy(header, addpos);\n                addpos += _entryHeader.extraLength;\n            }\n            // 4. add file comment\n            if (_entryHeader.commentLength) {\n                _comment.copy(header, addpos);\n            }\n            return header;\n        },\n\n        toJSON: function () {\n            const bytes = function (nr) {\n                return \"<\" + ((nr && nr.length + \" bytes buffer\") || \"null\") + \">\";\n            };\n\n            return {\n                entryName: this.entryName,\n                name: this.name,\n                comment: this.comment,\n                isDirectory: this.isDirectory,\n                header: _entryHeader.toJSON(),\n                compressedData: bytes(input),\n                data: bytes(uncompressedData)\n            };\n        },\n\n        toString: function () {\n            return JSON.stringify(this.toJSON(), null, \"\\t\");\n        }\n    };\n};\n","const ZipEntry = require(\"./zipEntry\");\nconst Headers = require(\"./headers\");\nconst Utils = require(\"./util\");\n\nmodule.exports = function (/*Buffer|null*/ inBuffer, /** object */ options) {\n    var entryList = [],\n        entryTable = {},\n        _comment = Buffer.alloc(0),\n        mainHeader = new Headers.MainHeader(),\n        loadedEntries = false;\n\n    // assign options\n    const opts = Object.assign(Object.create(null), options);\n\n    const { noSort } = opts;\n\n    if (inBuffer) {\n        // is a memory buffer\n        readMainHeader(opts.readEntries);\n    } else {\n        // none. is a new file\n        loadedEntries = true;\n    }\n\n    function iterateEntries(callback) {\n        const totalEntries = mainHeader.diskEntries; // total number of entries\n        let index = mainHeader.offset; // offset of first CEN header\n\n        for (let i = 0; i < totalEntries; i++) {\n            let tmp = index;\n            const entry = new ZipEntry(inBuffer);\n\n            entry.header = inBuffer.slice(tmp, (tmp += Utils.Constants.CENHDR));\n            entry.entryName = inBuffer.slice(tmp, (tmp += entry.header.fileNameLength));\n\n            index += entry.header.entryHeaderSize;\n\n            callback(entry);\n        }\n    }\n\n    function readEntries() {\n        loadedEntries = true;\n        entryTable = {};\n        entryList = new Array(mainHeader.diskEntries); // total number of entries\n        var index = mainHeader.offset; // offset of first CEN header\n        for (var i = 0; i < entryList.length; i++) {\n            var tmp = index,\n                entry = new ZipEntry(inBuffer);\n            entry.header = inBuffer.slice(tmp, (tmp += Utils.Constants.CENHDR));\n\n            entry.entryName = inBuffer.slice(tmp, (tmp += entry.header.fileNameLength));\n\n            if (entry.header.extraLength) {\n                entry.extra = inBuffer.slice(tmp, (tmp += entry.header.extraLength));\n            }\n\n            if (entry.header.commentLength) entry.comment = inBuffer.slice(tmp, tmp + entry.header.commentLength);\n\n            index += entry.header.entryHeaderSize;\n\n            entryList[i] = entry;\n            entryTable[entry.entryName] = entry;\n        }\n    }\n\n    function readMainHeader(/*Boolean*/ readNow) {\n        var i = inBuffer.length - Utils.Constants.ENDHDR, // END header size\n            max = Math.max(0, i - 0xffff), // 0xFFFF is the max zip file comment length\n            n = max,\n            endStart = inBuffer.length,\n            endOffset = -1, // Start offset of the END header\n            commentEnd = 0;\n\n        for (i; i >= n; i--) {\n            if (inBuffer[i] !== 0x50) continue; // quick check that the byte is 'P'\n            if (inBuffer.readUInt32LE(i) === Utils.Constants.ENDSIG) {\n                // \"PK\\005\\006\"\n                endOffset = i;\n                commentEnd = i;\n                endStart = i + Utils.Constants.ENDHDR;\n                // We already found a regular signature, let's look just a bit further to check if there's any zip64 signature\n                n = i - Utils.Constants.END64HDR;\n                continue;\n            }\n\n            if (inBuffer.readUInt32LE(i) === Utils.Constants.END64SIG) {\n                // Found a zip64 signature, let's continue reading the whole zip64 record\n                n = max;\n                continue;\n            }\n\n            if (inBuffer.readUInt32LE(i) === Utils.Constants.ZIP64SIG) {\n                // Found the zip64 record, let's determine it's size\n                endOffset = i;\n                endStart = i + Utils.readBigUInt64LE(inBuffer, i + Utils.Constants.ZIP64SIZE) + Utils.Constants.ZIP64LEAD;\n                break;\n            }\n        }\n\n        if (!~endOffset) throw new Error(Utils.Errors.INVALID_FORMAT);\n\n        mainHeader.loadFromBinary(inBuffer.slice(endOffset, endStart));\n        if (mainHeader.commentLength) {\n            _comment = inBuffer.slice(commentEnd + Utils.Constants.ENDHDR);\n        }\n        if (readNow) readEntries();\n    }\n\n    function sortEntries() {\n        if (entryList.length > 1 && !noSort) {\n            entryList.sort((a, b) => a.entryName.toLowerCase().localeCompare(b.entryName.toLowerCase()));\n        }\n    }\n\n    return {\n        /**\n         * Returns an array of ZipEntry objects existent in the current opened archive\n         * @return Array\n         */\n        get entries() {\n            if (!loadedEntries) {\n                readEntries();\n            }\n            return entryList;\n        },\n\n        /**\n         * Archive comment\n         * @return {String}\n         */\n        get comment() {\n            return _comment.toString();\n        },\n        set comment(val) {\n            _comment = Utils.toBuffer(val);\n            mainHeader.commentLength = _comment.length;\n        },\n\n        getEntryCount: function () {\n            if (!loadedEntries) {\n                return mainHeader.diskEntries;\n            }\n\n            return entryList.length;\n        },\n\n        forEach: function (callback) {\n            if (!loadedEntries) {\n                iterateEntries(callback);\n                return;\n            }\n\n            entryList.forEach(callback);\n        },\n\n        /**\n         * Returns a reference to the entry with the given name or null if entry is inexistent\n         *\n         * @param entryName\n         * @return ZipEntry\n         */\n        getEntry: function (/*String*/ entryName) {\n            if (!loadedEntries) {\n                readEntries();\n            }\n            return entryTable[entryName] || null;\n        },\n\n        /**\n         * Adds the given entry to the entry list\n         *\n         * @param entry\n         */\n        setEntry: function (/*ZipEntry*/ entry) {\n            if (!loadedEntries) {\n                readEntries();\n            }\n            entryList.push(entry);\n            entryTable[entry.entryName] = entry;\n            mainHeader.totalEntries = entryList.length;\n        },\n\n        /**\n         * Removes the entry with the given name from the entry list.\n         *\n         * If the entry is a directory, then all nested files and directories will be removed\n         * @param entryName\n         */\n        deleteEntry: function (/*String*/ entryName) {\n            if (!loadedEntries) {\n                readEntries();\n            }\n            var entry = entryTable[entryName];\n            if (entry && entry.isDirectory) {\n                var _self = this;\n                this.getEntryChildren(entry).forEach(function (child) {\n                    if (child.entryName !== entryName) {\n                        _self.deleteEntry(child.entryName);\n                    }\n                });\n            }\n            entryList.splice(entryList.indexOf(entry), 1);\n            delete entryTable[entryName];\n            mainHeader.totalEntries = entryList.length;\n        },\n\n        /**\n         *  Iterates and returns all nested files and directories of the given entry\n         *\n         * @param entry\n         * @return Array\n         */\n        getEntryChildren: function (/*ZipEntry*/ entry) {\n            if (!loadedEntries) {\n                readEntries();\n            }\n            if (entry && entry.isDirectory) {\n                const list = [];\n                const name = entry.entryName;\n                const len = name.length;\n\n                entryList.forEach(function (zipEntry) {\n                    if (zipEntry.entryName.substr(0, len) === name) {\n                        list.push(zipEntry);\n                    }\n                });\n                return list;\n            }\n            return [];\n        },\n\n        /**\n         * Returns the zip file\n         *\n         * @return Buffer\n         */\n        compressToBuffer: function () {\n            if (!loadedEntries) {\n                readEntries();\n            }\n            sortEntries();\n\n            const dataBlock = [];\n            const entryHeaders = [];\n            let totalSize = 0;\n            let dindex = 0;\n\n            mainHeader.size = 0;\n            mainHeader.offset = 0;\n\n            for (const entry of entryList) {\n                // compress data and set local and entry header accordingly. Reason why is called first\n                const compressedData = entry.getCompressedData();\n                // 1. construct data header\n                entry.header.offset = dindex;\n                const dataHeader = entry.header.dataHeaderToBinary();\n                const entryNameLen = entry.rawEntryName.length;\n                // 1.2. postheader - data after data header\n                const postHeader = Buffer.alloc(entryNameLen + entry.extra.length);\n                entry.rawEntryName.copy(postHeader, 0);\n                postHeader.copy(entry.extra, entryNameLen);\n\n                // 2. offsets\n                const dataLength = dataHeader.length + postHeader.length + compressedData.length;\n                dindex += dataLength;\n\n                // 3. store values in sequence\n                dataBlock.push(dataHeader);\n                dataBlock.push(postHeader);\n                dataBlock.push(compressedData);\n\n                // 4. construct entry header\n                const entryHeader = entry.packHeader();\n                entryHeaders.push(entryHeader);\n                // 5. update main header\n                mainHeader.size += entryHeader.length;\n                totalSize += dataLength + entryHeader.length;\n            }\n\n            totalSize += mainHeader.mainHeaderSize; // also includes zip file comment length\n            // point to end of data and beginning of central directory first record\n            mainHeader.offset = dindex;\n\n            dindex = 0;\n            const outBuffer = Buffer.alloc(totalSize);\n            // write data blocks\n            for (const content of dataBlock) {\n                content.copy(outBuffer, dindex);\n                dindex += content.length;\n            }\n\n            // write central directory entries\n            for (const content of entryHeaders) {\n                content.copy(outBuffer, dindex);\n                dindex += content.length;\n            }\n\n            // write main header\n            const mh = mainHeader.toBinary();\n            if (_comment) {\n                _comment.copy(mh, Utils.Constants.ENDHDR); // add zip file comment\n            }\n            mh.copy(outBuffer, dindex);\n\n            return outBuffer;\n        },\n\n        toAsyncBuffer: function (/*Function*/ onSuccess, /*Function*/ onFail, /*Function*/ onItemStart, /*Function*/ onItemEnd) {\n            try {\n                if (!loadedEntries) {\n                    readEntries();\n                }\n                sortEntries();\n\n                const dataBlock = [];\n                const entryHeaders = [];\n                let totalSize = 0;\n                let dindex = 0;\n\n                mainHeader.size = 0;\n                mainHeader.offset = 0;\n\n                const compress2Buffer = function (entryLists) {\n                    if (entryLists.length) {\n                        const entry = entryLists.pop();\n                        const name = entry.entryName + entry.extra.toString();\n                        if (onItemStart) onItemStart(name);\n                        entry.getCompressedDataAsync(function (compressedData) {\n                            if (onItemEnd) onItemEnd(name);\n\n                            entry.header.offset = dindex;\n                            // data header\n                            const dataHeader = entry.header.dataHeaderToBinary();\n                            const postHeader = Buffer.alloc(name.length, name);\n                            const dataLength = dataHeader.length + postHeader.length + compressedData.length;\n\n                            dindex += dataLength;\n\n                            dataBlock.push(dataHeader);\n                            dataBlock.push(postHeader);\n                            dataBlock.push(compressedData);\n\n                            const entryHeader = entry.packHeader();\n                            entryHeaders.push(entryHeader);\n                            mainHeader.size += entryHeader.length;\n                            totalSize += dataLength + entryHeader.length;\n\n                            compress2Buffer(entryLists);\n                        });\n                    } else {\n                        totalSize += mainHeader.mainHeaderSize; // also includes zip file comment length\n                        // point to end of data and beginning of central directory first record\n                        mainHeader.offset = dindex;\n\n                        dindex = 0;\n                        const outBuffer = Buffer.alloc(totalSize);\n                        dataBlock.forEach(function (content) {\n                            content.copy(outBuffer, dindex); // write data blocks\n                            dindex += content.length;\n                        });\n                        entryHeaders.forEach(function (content) {\n                            content.copy(outBuffer, dindex); // write central directory entries\n                            dindex += content.length;\n                        });\n\n                        const mh = mainHeader.toBinary();\n                        if (_comment) {\n                            _comment.copy(mh, Utils.Constants.ENDHDR); // add zip file comment\n                        }\n\n                        mh.copy(outBuffer, dindex); // write main header\n\n                        onSuccess(outBuffer);\n                    }\n                };\n\n                compress2Buffer(entryList);\n            } catch (e) {\n                onFail(e);\n            }\n        }\n    };\n};\n","const Utils = require(\"./util\");\nconst pth = require(\"path\");\nconst ZipEntry = require(\"./zipEntry\");\nconst ZipFile = require(\"./zipFile\");\n\nconst get_Bool = (val, def) => (typeof val === \"boolean\" ? val : def);\nconst get_Str = (val, def) => (typeof val === \"string\" ? val : def);\n\nconst defaultOptions = {\n    // option \"noSort\" : if true it disables files sorting\n    noSort: false,\n    // read entries during load (initial loading may be slower)\n    readEntries: false,\n    // default method is none\n    method: Utils.Constants.NONE,\n    // file system\n    fs: null\n};\n\nmodule.exports = function (/**String*/ input, /** object */ options) {\n    let inBuffer = null;\n\n    // create object based default options, allowing them to be overwritten\n    const opts = Object.assign(Object.create(null), defaultOptions);\n\n    // test input variable\n    if (input && \"object\" === typeof input) {\n        // if value is not buffer we accept it to be object with options\n        if (!(input instanceof Uint8Array)) {\n            Object.assign(opts, input);\n            input = opts.input ? opts.input : undefined;\n            if (opts.input) delete opts.input;\n        }\n\n        // if input is buffer\n        if (Buffer.isBuffer(input)) {\n            inBuffer = input;\n            opts.method = Utils.Constants.BUFFER;\n            input = undefined;\n        }\n    }\n\n    // assign options\n    Object.assign(opts, options);\n\n    // instanciate utils filesystem\n    const filetools = new Utils(opts);\n\n    // if input is file name we retrieve its content\n    if (input && \"string\" === typeof input) {\n        // load zip file\n        if (filetools.fs.existsSync(input)) {\n            opts.method = Utils.Constants.FILE;\n            opts.filename = input;\n            inBuffer = filetools.fs.readFileSync(input);\n        } else {\n            throw new Error(Utils.Errors.INVALID_FILENAME);\n        }\n    }\n\n    // create variable\n    const _zip = new ZipFile(inBuffer, opts);\n\n    const { canonical, sanitize } = Utils;\n\n    function getEntry(/**Object*/ entry) {\n        if (entry && _zip) {\n            var item;\n            // If entry was given as a file name\n            if (typeof entry === \"string\") item = _zip.getEntry(entry);\n            // if entry was given as a ZipEntry object\n            if (typeof entry === \"object\" && typeof entry.entryName !== \"undefined\" && typeof entry.header !== \"undefined\") item = _zip.getEntry(entry.entryName);\n\n            if (item) {\n                return item;\n            }\n        }\n        return null;\n    }\n\n    function fixPath(zipPath) {\n        const { join, normalize, sep } = pth.posix;\n        // convert windows file separators and normalize\n        return join(\".\", normalize(sep + zipPath.split(\"\\\\\").join(sep) + sep));\n    }\n\n    return {\n        /**\n         * Extracts the given entry from the archive and returns the content as a Buffer object\n         * @param entry ZipEntry object or String with the full path of the entry\n         *\n         * @return Buffer or Null in case of error\n         */\n        readFile: function (/**Object*/ entry, /*String, Buffer*/ pass) {\n            var item = getEntry(entry);\n            return (item && item.getData(pass)) || null;\n        },\n\n        /**\n         * Asynchronous readFile\n         * @param entry ZipEntry object or String with the full path of the entry\n         * @param callback\n         *\n         * @return Buffer or Null in case of error\n         */\n        readFileAsync: function (/**Object*/ entry, /**Function*/ callback) {\n            var item = getEntry(entry);\n            if (item) {\n                item.getDataAsync(callback);\n            } else {\n                callback(null, \"getEntry failed for:\" + entry);\n            }\n        },\n\n        /**\n         * Extracts the given entry from the archive and returns the content as plain text in the given encoding\n         * @param entry ZipEntry object or String with the full path of the entry\n         * @param encoding Optional. If no encoding is specified utf8 is used\n         *\n         * @return String\n         */\n        readAsText: function (/**Object*/ entry, /**String=*/ encoding) {\n            var item = getEntry(entry);\n            if (item) {\n                var data = item.getData();\n                if (data && data.length) {\n                    return data.toString(encoding || \"utf8\");\n                }\n            }\n            return \"\";\n        },\n\n        /**\n         * Asynchronous readAsText\n         * @param entry ZipEntry object or String with the full path of the entry\n         * @param callback\n         * @param encoding Optional. If no encoding is specified utf8 is used\n         *\n         * @return String\n         */\n        readAsTextAsync: function (/**Object*/ entry, /**Function*/ callback, /**String=*/ encoding) {\n            var item = getEntry(entry);\n            if (item) {\n                item.getDataAsync(function (data, err) {\n                    if (err) {\n                        callback(data, err);\n                        return;\n                    }\n\n                    if (data && data.length) {\n                        callback(data.toString(encoding || \"utf8\"));\n                    } else {\n                        callback(\"\");\n                    }\n                });\n            } else {\n                callback(\"\");\n            }\n        },\n\n        /**\n         * Remove the entry from the file or the entry and all it's nested directories and files if the given entry is a directory\n         *\n         * @param entry\n         */\n        deleteFile: function (/**Object*/ entry) {\n            // @TODO: test deleteFile\n            var item = getEntry(entry);\n            if (item) {\n                _zip.deleteEntry(item.entryName);\n            }\n        },\n\n        /**\n         * Adds a comment to the zip. The zip must be rewritten after adding the comment.\n         *\n         * @param comment\n         */\n        addZipComment: function (/**String*/ comment) {\n            // @TODO: test addZipComment\n            _zip.comment = comment;\n        },\n\n        /**\n         * Returns the zip comment\n         *\n         * @return String\n         */\n        getZipComment: function () {\n            return _zip.comment || \"\";\n        },\n\n        /**\n         * Adds a comment to a specified zipEntry. The zip must be rewritten after adding the comment\n         * The comment cannot exceed 65535 characters in length\n         *\n         * @param entry\n         * @param comment\n         */\n        addZipEntryComment: function (/**Object*/ entry, /**String*/ comment) {\n            var item = getEntry(entry);\n            if (item) {\n                item.comment = comment;\n            }\n        },\n\n        /**\n         * Returns the comment of the specified entry\n         *\n         * @param entry\n         * @return String\n         */\n        getZipEntryComment: function (/**Object*/ entry) {\n            var item = getEntry(entry);\n            if (item) {\n                return item.comment || \"\";\n            }\n            return \"\";\n        },\n\n        /**\n         * Updates the content of an existing entry inside the archive. The zip must be rewritten after updating the content\n         *\n         * @param entry\n         * @param content\n         */\n        updateFile: function (/**Object*/ entry, /**Buffer*/ content) {\n            var item = getEntry(entry);\n            if (item) {\n                item.setData(content);\n            }\n        },\n\n        /**\n         * Adds a file from the disk to the archive\n         *\n         * @param localPath File to add to zip\n         * @param zipPath Optional path inside the zip\n         * @param zipName Optional name for the file\n         */\n        addLocalFile: function (/**String*/ localPath, /**String=*/ zipPath, /**String=*/ zipName, /**String*/ comment) {\n            if (filetools.fs.existsSync(localPath)) {\n                // fix ZipPath\n                zipPath = zipPath ? fixPath(zipPath) : \"\";\n\n                // p - local file name\n                var p = localPath.split(\"\\\\\").join(\"/\").split(\"/\").pop();\n\n                // add file name into zippath\n                zipPath += zipName ? zipName : p;\n\n                // read file attributes\n                const _attr = filetools.fs.statSync(localPath);\n\n                // add file into zip file\n                this.addFile(zipPath, filetools.fs.readFileSync(localPath), comment, _attr);\n            } else {\n                throw new Error(Utils.Errors.FILE_NOT_FOUND.replace(\"%s\", localPath));\n            }\n        },\n\n        /**\n         * Adds a local directory and all its nested files and directories to the archive\n         *\n         * @param localPath\n         * @param zipPath optional path inside zip\n         * @param filter optional RegExp or Function if files match will\n         *               be included.\n         */\n        addLocalFolder: function (/**String*/ localPath, /**String=*/ zipPath, /**=RegExp|Function*/ filter) {\n            // Prepare filter\n            if (filter instanceof RegExp) {\n                // if filter is RegExp wrap it\n                filter = (function (rx) {\n                    return function (filename) {\n                        return rx.test(filename);\n                    };\n                })(filter);\n            } else if (\"function\" !== typeof filter) {\n                // if filter is not function we will replace it\n                filter = function () {\n                    return true;\n                };\n            }\n\n            // fix ZipPath\n            zipPath = zipPath ? fixPath(zipPath) : \"\";\n\n            // normalize the path first\n            localPath = pth.normalize(localPath);\n\n            if (filetools.fs.existsSync(localPath)) {\n                const items = filetools.findFiles(localPath);\n                const self = this;\n\n                if (items.length) {\n                    items.forEach(function (filepath) {\n                        var p = pth.relative(localPath, filepath).split(\"\\\\\").join(\"/\"); //windows fix\n                        if (filter(p)) {\n                            var stats = filetools.fs.statSync(filepath);\n                            if (stats.isFile()) {\n                                self.addFile(zipPath + p, filetools.fs.readFileSync(filepath), \"\", stats);\n                            } else {\n                                self.addFile(zipPath + p + \"/\", Buffer.alloc(0), \"\", stats);\n                            }\n                        }\n                    });\n                }\n            } else {\n                throw new Error(Utils.Errors.FILE_NOT_FOUND.replace(\"%s\", localPath));\n            }\n        },\n\n        /**\n         * Asynchronous addLocalFile\n         * @param localPath\n         * @param callback\n         * @param zipPath optional path inside zip\n         * @param filter optional RegExp or Function if files match will\n         *               be included.\n         */\n        addLocalFolderAsync: function (/*String*/ localPath, /*Function*/ callback, /*String*/ zipPath, /*RegExp|Function*/ filter) {\n            if (filter instanceof RegExp) {\n                filter = (function (rx) {\n                    return function (filename) {\n                        return rx.test(filename);\n                    };\n                })(filter);\n            } else if (\"function\" !== typeof filter) {\n                filter = function () {\n                    return true;\n                };\n            }\n\n            // fix ZipPath\n            zipPath = zipPath ? fixPath(zipPath) : \"\";\n\n            // normalize the path first\n            localPath = pth.normalize(localPath);\n\n            var self = this;\n            filetools.fs.open(localPath, \"r\", function (err) {\n                if (err && err.code === \"ENOENT\") {\n                    callback(undefined, Utils.Errors.FILE_NOT_FOUND.replace(\"%s\", localPath));\n                } else if (err) {\n                    callback(undefined, err);\n                } else {\n                    var items = filetools.findFiles(localPath);\n                    var i = -1;\n\n                    var next = function () {\n                        i += 1;\n                        if (i < items.length) {\n                            var filepath = items[i];\n                            var p = pth.relative(localPath, filepath).split(\"\\\\\").join(\"/\"); //windows fix\n                            p = p\n                                .normalize(\"NFD\")\n                                .replace(/[\\u0300-\\u036f]/g, \"\")\n                                .replace(/[^\\x20-\\x7E]/g, \"\"); // accent fix\n                            if (filter(p)) {\n                                filetools.fs.stat(filepath, function (er0, stats) {\n                                    if (er0) callback(undefined, er0);\n                                    if (stats.isFile()) {\n                                        filetools.fs.readFile(filepath, function (er1, data) {\n                                            if (er1) {\n                                                callback(undefined, er1);\n                                            } else {\n                                                self.addFile(zipPath + p, data, \"\", stats);\n                                                next();\n                                            }\n                                        });\n                                    } else {\n                                        self.addFile(zipPath + p + \"/\", Buffer.alloc(0), \"\", stats);\n                                        next();\n                                    }\n                                });\n                            } else {\n                                next();\n                            }\n                        } else {\n                            callback(true, undefined);\n                        }\n                    };\n\n                    next();\n                }\n            });\n        },\n\n        /**\n         *\n         * @param {string} localPath - path where files will be extracted\n         * @param {object} props - optional properties\n         * @param {string} props.zipPath - optional path inside zip\n         * @param {regexp, function} props.filter - RegExp or Function if files match will be included.\n         */\n        addLocalFolderPromise: function (/*String*/ localPath, /* object */ props) {\n            return new Promise((resolve, reject) => {\n                const { filter, zipPath } = Object.assign({}, props);\n                this.addLocalFolderAsync(\n                    localPath,\n                    (done, err) => {\n                        if (err) reject(err);\n                        if (done) resolve(this);\n                    },\n                    zipPath,\n                    filter\n                );\n            });\n        },\n\n        /**\n         * Allows you to create a entry (file or directory) in the zip file.\n         * If you want to create a directory the entryName must end in / and a null buffer should be provided.\n         * Comment and attributes are optional\n         *\n         * @param {string} entryName\n         * @param {Buffer | string} content - file content as buffer or utf8 coded string\n         * @param {string} comment - file comment\n         * @param {number | object} attr - number as unix file permissions, object as filesystem Stats object\n         */\n        addFile: function (/**String*/ entryName, /**Buffer*/ content, /**String*/ comment, /**Number*/ attr) {\n            let entry = getEntry(entryName);\n            const update = entry != null;\n\n            // prepare new entry\n            if (!update) {\n                entry = new ZipEntry();\n                entry.entryName = entryName;\n            }\n            entry.comment = comment || \"\";\n\n            const isStat = \"object\" === typeof attr && attr instanceof filetools.fs.Stats;\n\n            // last modification time from file stats\n            if (isStat) {\n                entry.header.time = attr.mtime;\n            }\n\n            // Set file attribute\n            var fileattr = entry.isDirectory ? 0x10 : 0; // (MS-DOS directory flag)\n\n            // extended attributes field for Unix\n            if (!Utils.isWin) {\n                // set file type either S_IFDIR / S_IFREG\n                let unix = entry.isDirectory ? 0x4000 : 0x8000;\n\n                if (isStat) {\n                    // File attributes from file stats\n                    unix |= 0xfff & attr.mode;\n                } else if (\"number\" === typeof attr) {\n                    // attr from given attr values\n                    unix |= 0xfff & attr;\n                } else {\n                    // Default values:\n                    unix |= entry.isDirectory ? 0o755 : 0o644; // permissions (drwxr-xr-x) or (-r-wr--r--)\n                }\n\n                fileattr = (fileattr | (unix << 16)) >>> 0; // add attributes\n            }\n\n            entry.attr = fileattr;\n\n            entry.setData(content);\n            if (!update) _zip.setEntry(entry);\n        },\n\n        /**\n         * Returns an array of ZipEntry objects representing the files and folders inside the archive\n         *\n         * @return Array\n         */\n        getEntries: function () {\n            return _zip ? _zip.entries : [];\n        },\n\n        /**\n         * Returns a ZipEntry object representing the file or folder specified by ``name``.\n         *\n         * @param name\n         * @return ZipEntry\n         */\n        getEntry: function (/**String*/ name) {\n            return getEntry(name);\n        },\n\n        getEntryCount: function () {\n            return _zip.getEntryCount();\n        },\n\n        forEach: function (callback) {\n            return _zip.forEach(callback);\n        },\n\n        /**\n         * Extracts the given entry to the given targetPath\n         * If the entry is a directory inside the archive, the entire directory and it's subdirectories will be extracted\n         *\n         * @param entry ZipEntry object or String with the full path of the entry\n         * @param targetPath Target folder where to write the file\n         * @param maintainEntryPath If maintainEntryPath is true and the entry is inside a folder, the entry folder\n         *                          will be created in targetPath as well. Default is TRUE\n         * @param overwrite If the file already exists at the target path, the file will be overwriten if this is true.\n         *                  Default is FALSE\n         * @param keepOriginalPermission The file will be set as the permission from the entry if this is true.\n         *                  Default is FALSE\n         * @param outFileName String If set will override the filename of the extracted file (Only works if the entry is a file)\n         *\n         * @return Boolean\n         */\n        extractEntryTo: function (\n            /**Object*/ entry,\n            /**String*/ targetPath,\n            /**Boolean*/ maintainEntryPath,\n            /**Boolean*/ overwrite,\n            /**Boolean*/ keepOriginalPermission,\n            /**String**/ outFileName\n        ) {\n            overwrite = get_Bool(overwrite, false);\n            keepOriginalPermission = get_Bool(keepOriginalPermission, false);\n            maintainEntryPath = get_Bool(maintainEntryPath, true);\n            outFileName = get_Str(outFileName, get_Str(keepOriginalPermission, undefined));\n\n            var item = getEntry(entry);\n            if (!item) {\n                throw new Error(Utils.Errors.NO_ENTRY);\n            }\n\n            var entryName = canonical(item.entryName);\n\n            var target = sanitize(targetPath, outFileName && !item.isDirectory ? outFileName : maintainEntryPath ? entryName : pth.basename(entryName));\n\n            if (item.isDirectory) {\n                var children = _zip.getEntryChildren(item);\n                children.forEach(function (child) {\n                    if (child.isDirectory) return;\n                    var content = child.getData();\n                    if (!content) {\n                        throw new Error(Utils.Errors.CANT_EXTRACT_FILE);\n                    }\n                    var name = canonical(child.entryName);\n                    var childName = sanitize(targetPath, maintainEntryPath ? name : pth.basename(name));\n                    // The reverse operation for attr depend on method addFile()\n                    const fileAttr = keepOriginalPermission ? child.header.fileAttr : undefined;\n                    filetools.writeFileTo(childName, content, overwrite, fileAttr);\n                });\n                return true;\n            }\n\n            var content = item.getData();\n            if (!content) throw new Error(Utils.Errors.CANT_EXTRACT_FILE);\n\n            if (filetools.fs.existsSync(target) && !overwrite) {\n                throw new Error(Utils.Errors.CANT_OVERRIDE);\n            }\n            // The reverse operation for attr depend on method addFile()\n            const fileAttr = keepOriginalPermission ? entry.header.fileAttr : undefined;\n            filetools.writeFileTo(target, content, overwrite, fileAttr);\n\n            return true;\n        },\n\n        /**\n         * Test the archive\n         *\n         */\n        test: function (pass) {\n            if (!_zip) {\n                return false;\n            }\n\n            for (var entry in _zip.entries) {\n                try {\n                    if (entry.isDirectory) {\n                        continue;\n                    }\n                    var content = _zip.entries[entry].getData(pass);\n                    if (!content) {\n                        return false;\n                    }\n                } catch (err) {\n                    return false;\n                }\n            }\n            return true;\n        },\n\n        /**\n         * Extracts the entire archive to the given location\n         *\n         * @param targetPath Target location\n         * @param overwrite If the file already exists at the target path, the file will be overwriten if this is true.\n         *                  Default is FALSE\n         * @param keepOriginalPermission The file will be set as the permission from the entry if this is true.\n         *                  Default is FALSE\n         */\n        extractAllTo: function (/**String*/ targetPath, /**Boolean*/ overwrite, /**Boolean*/ keepOriginalPermission, /*String, Buffer*/ pass) {\n            overwrite = get_Bool(overwrite, false);\n            pass = get_Str(keepOriginalPermission, pass);\n            keepOriginalPermission = get_Bool(keepOriginalPermission, false);\n            if (!_zip) {\n                throw new Error(Utils.Errors.NO_ZIP);\n            }\n            _zip.entries.forEach(function (entry) {\n                var entryName = sanitize(targetPath, canonical(entry.entryName.toString()));\n                if (entry.isDirectory) {\n                    filetools.makeDir(entryName);\n                    return;\n                }\n                var content = entry.getData(pass);\n                if (!content) {\n                    throw new Error(Utils.Errors.CANT_EXTRACT_FILE);\n                }\n                // The reverse operation for attr depend on method addFile()\n                const fileAttr = keepOriginalPermission ? entry.header.fileAttr : undefined;\n                filetools.writeFileTo(entryName, content, overwrite, fileAttr);\n                try {\n                    filetools.fs.utimesSync(entryName, entry.header.time, entry.header.time);\n                } catch (err) {\n                    throw new Error(Utils.Errors.CANT_EXTRACT_FILE);\n                }\n            });\n        },\n\n        /**\n         * Asynchronous extractAllTo\n         *\n         * @param targetPath Target location\n         * @param overwrite If the file already exists at the target path, the file will be overwriten if this is true.\n         *                  Default is FALSE\n         * @param keepOriginalPermission The file will be set as the permission from the entry if this is true.\n         *                  Default is FALSE\n         * @param callback The callback will be executed when all entries are extracted successfully or any error is thrown.\n         */\n        extractAllToAsync: function (/**String*/ targetPath, /**Boolean*/ overwrite, /**Boolean*/ keepOriginalPermission, /**Function*/ callback) {\n            if (!callback) {\n                callback = function () {};\n            }\n            overwrite = get_Bool(overwrite, false);\n            if (typeof keepOriginalPermission === \"function\" && !callback) callback = keepOriginalPermission;\n            keepOriginalPermission = get_Bool(keepOriginalPermission, false);\n            if (!_zip) {\n                callback(new Error(Utils.Errors.NO_ZIP));\n                return;\n            }\n\n            targetPath = pth.resolve(targetPath);\n            // convert entryName to\n            const getPath = (entry) => sanitize(targetPath, pth.normalize(canonical(entry.entryName.toString())));\n            const getError = (msg, file) => new Error(msg + ': \"' + file + '\"');\n\n            // separate directories from files\n            const dirEntries = [];\n            const fileEntries = new Set();\n            _zip.entries.forEach((e) => {\n                if (e.isDirectory) {\n                    dirEntries.push(e);\n                } else {\n                    fileEntries.add(e);\n                }\n            });\n\n            // Create directory entries first synchronously\n            // this prevents race condition and assures folders are there before writing files\n            for (const entry of dirEntries) {\n                const dirPath = getPath(entry);\n                // The reverse operation for attr depend on method addFile()\n                const dirAttr = keepOriginalPermission ? entry.header.fileAttr : undefined;\n                try {\n                    filetools.makeDir(dirPath);\n                    if (dirAttr) filetools.fs.chmodSync(dirPath, dirAttr);\n                    // in unix timestamp will change if files are later added to folder, but still\n                    filetools.fs.utimesSync(dirPath, entry.header.time, entry.header.time);\n                } catch (er) {\n                    callback(getError(\"Unable to create folder\", dirPath));\n                }\n            }\n\n            // callback wrapper, for some house keeping\n            const done = () => {\n                if (fileEntries.size === 0) {\n                    callback();\n                }\n            };\n\n            // Extract file entries asynchronously\n            for (const entry of fileEntries.values()) {\n                const entryName = pth.normalize(canonical(entry.entryName.toString()));\n                const filePath = sanitize(targetPath, entryName);\n                entry.getDataAsync(function (content, err_1) {\n                    if (err_1) {\n                        callback(new Error(err_1));\n                        return;\n                    }\n                    if (!content) {\n                        callback(new Error(Utils.Errors.CANT_EXTRACT_FILE));\n                    } else {\n                        // The reverse operation for attr depend on method addFile()\n                        const fileAttr = keepOriginalPermission ? entry.header.fileAttr : undefined;\n                        filetools.writeFileToAsync(filePath, content, overwrite, fileAttr, function (succ) {\n                            if (!succ) {\n                                callback(getError(\"Unable to write file\", filePath));\n                                return;\n                            }\n                            filetools.fs.utimes(filePath, entry.header.time, entry.header.time, function (err_2) {\n                                if (err_2) {\n                                    callback(getError(\"Unable to set times\", filePath));\n                                    return;\n                                }\n                                fileEntries.delete(entry);\n                                // call the callback if it was last entry\n                                done();\n                            });\n                        });\n                    }\n                });\n            }\n            // call the callback if fileEntries was empty\n            done();\n        },\n\n        /**\n         * Writes the newly created zip file to disk at the specified location or if a zip was opened and no ``targetFileName`` is provided, it will overwrite the opened zip\n         *\n         * @param targetFileName\n         * @param callback\n         */\n        writeZip: function (/**String*/ targetFileName, /**Function*/ callback) {\n            if (arguments.length === 1) {\n                if (typeof targetFileName === \"function\") {\n                    callback = targetFileName;\n                    targetFileName = \"\";\n                }\n            }\n\n            if (!targetFileName && opts.filename) {\n                targetFileName = opts.filename;\n            }\n            if (!targetFileName) return;\n\n            var zipData = _zip.compressToBuffer();\n            if (zipData) {\n                var ok = filetools.writeFileTo(targetFileName, zipData, true);\n                if (typeof callback === \"function\") callback(!ok ? new Error(\"failed\") : null, \"\");\n            }\n        },\n\n        writeZipPromise: function (/**String*/ targetFileName, /* object */ props) {\n            const { overwrite, perm } = Object.assign({ overwrite: true }, props);\n\n            return new Promise((resolve, reject) => {\n                // find file name\n                if (!targetFileName && opts.filename) targetFileName = opts.filename;\n                if (!targetFileName) reject(\"ADM-ZIP: ZIP File Name Missing\");\n\n                this.toBufferPromise().then((zipData) => {\n                    const ret = (done) => (done ? resolve(done) : reject(\"ADM-ZIP: Wasn't able to write zip file\"));\n                    filetools.writeFileToAsync(targetFileName, zipData, overwrite, perm, ret);\n                }, reject);\n            });\n        },\n\n        toBufferPromise: function () {\n            return new Promise((resolve, reject) => {\n                _zip.toAsyncBuffer(resolve, reject);\n            });\n        },\n\n        /**\n         * Returns the content of the entire zip file as a Buffer object\n         *\n         * @return Buffer\n         */\n        toBuffer: function (/**Function=*/ onSuccess, /**Function=*/ onFail, /**Function=*/ onItemStart, /**Function=*/ onItemEnd) {\n            this.valueOf = 2;\n            if (typeof onSuccess === \"function\") {\n                _zip.toAsyncBuffer(onSuccess, onFail, onItemStart, onItemEnd);\n                return null;\n            }\n            return _zip.compressToBuffer();\n        }\n    };\n};\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst https = require('https');\nconst fs = require('fs');\nconst util = require('util');\nconst AdmZip = require('adm-zip');\nconst { URL } = require('url');\n\nconst errors = require('../../errors');\nconst utils = require('../../utils');\nconst { DsePlainTextAuthProvider, NoAuthProvider } = require('../../auth');\n\n// Use the callback-based method fs.readFile() instead of fs.promises as we have to support Node.js 8+\nconst readFile = util.promisify(fs.readFile);\n\n/**\n * When the user sets the cloud options, it uses the secure bundle or endpoint to access the metadata service and\n * setting the connection options\n * @param {ClientOptions} options\n * @returns {Promise<void>}\n */\nasync function init(options) {\n  if (!options.cloud) {\n    return;\n  }\n\n  const cloudOptions = new CloudOptions(options);\n  await parseZipFile(cloudOptions);\n  await getMetadataServiceInfoAsync(cloudOptions);\n\n  if (!cloudOptions.clientOptions.sslOptions.checkServerIdentity) {\n    // With SNI enabled, hostname (uuid) and CN will not match\n    // Use a custom validation function to validate against the proxy address.\n    // Note: this function is only called if the certificate passed all other checks, like CA validation.\n    cloudOptions.clientOptions.sslOptions.checkServerIdentity = (_, cert) =>\n      checkServerIdentity(cert, cloudOptions.clientOptions.sni.address);\n  }\n}\n\nclass CloudOptions {\n  constructor(clientOptions) {\n    this.clientOptions = clientOptions;\n\n    if (clientOptions.cloud.secureConnectBundle) {\n      this.secureConnectBundle = clientOptions.cloud.secureConnectBundle;\n      this.serviceUrl = null;\n    } else {\n      this.serviceUrl = clientOptions.cloud.endpoint;\n    }\n\n    this.contactPoints = null;\n    this.localDataCenter = null;\n  }\n\n  /**\n   * The sslOptions in the client options from a given map.\n   * @param {Map<String, Buffer>} zipEntries\n   */\n  setSslOptions(zipEntries) {\n    this.clientOptions.sslOptions = Object.assign({\n      ca: [zipEntries.get('ca.crt') ],\n      cert: zipEntries.get('cert'),\n      key: zipEntries.get('key'),\n      rejectUnauthorized: true\n    }, this.clientOptions.sslOptions);\n  }\n\n  /**\n   *\n   * @param username\n   * @param password\n   */\n  setAuthProvider(username, password) {\n    if (!username || !password) {\n      return;\n    }\n\n    if (this.clientOptions.authProvider && !(this.clientOptions.authProvider instanceof NoAuthProvider)) {\n      // There is an auth provider set by the user\n      return;\n    }\n\n    this.clientOptions.authProvider = new DsePlainTextAuthProvider(username, password);\n  }\n}\n\n/**\n * @param {CloudOptions} cloudOptions\n * @returns {Promise<void>}\n */\nasync function parseZipFile(cloudOptions) {\n  if (cloudOptions.serviceUrl) {\n    // Service url already was provided\n    return;\n  }\n\n  if (!cloudOptions.secureConnectBundle) {\n    throw new TypeError('secureConnectBundle must be provided');\n  }\n\n  const data = await readFile(cloudOptions.secureConnectBundle);\n  const zip = new AdmZip(data);\n  const zipEntries = new Map(zip.getEntries().map(e => [e.entryName, e.getData()]));\n\n  if (!zipEntries.get('config.json')) {\n    throw new TypeError('Config file must be contained in secure bundle');\n  }\n\n  const config = JSON.parse(zipEntries.get('config.json').toString('utf8'));\n  if (!config['host'] || !config['port']) {\n    throw new TypeError('Config file must include host and port information');\n  }\n\n  cloudOptions.serviceUrl = `${config['host']}:${config['port']}/metadata`;\n  cloudOptions.setSslOptions(zipEntries);\n  cloudOptions.setAuthProvider(config.username, config.password);\n}\n\n/**\n * Gets the information retrieved from the metadata service.\n * Invokes the callback with {proxyAddress, localDataCenter, contactPoints} as result\n * @param {CloudOptions} cloudOptions\n * @param {Function} callback\n */\nfunction getMetadataServiceInfo(cloudOptions, callback) {\n  const regex = /^(.+?):(\\d+)(.*)$/;\n  const matches = regex.exec(cloudOptions.serviceUrl);\n  callback = utils.callbackOnce(callback);\n\n  if (!matches || matches.length !== 4) {\n    throw new TypeError('url should be composed of host, port number and path, without scheme');\n  }\n\n  const requestOptions = Object.assign({\n    hostname: matches[1],\n    port: matches[2],\n    path: matches[3] || undefined,\n    timeout: cloudOptions.clientOptions.socketOptions.connectTimeout\n  }, cloudOptions.clientOptions.sslOptions);\n\n  const req = https.get(requestOptions, res => {\n    let data = '';\n\n    res\n      .on('data', chunk => data += chunk.toString())\n      .on('end', () => {\n        if (res.statusCode !== 200) {\n          return callback(getServiceRequestError(new Error(`Obtained http status ${res.statusCode}`), requestOptions));\n        }\n\n        let message;\n\n        try {\n          message = JSON.parse(data);\n\n          if (!message || !message['contact_info']) {\n            throw new TypeError('contact_info should be defined in response');\n          }\n\n        } catch (err) {\n          return callback(getServiceRequestError(err, requestOptions, true));\n        }\n\n        const contactInfo = message['contact_info'];\n\n        // Set the connect options\n        cloudOptions.clientOptions.contactPoints = contactInfo['contact_points'];\n        cloudOptions.clientOptions.localDataCenter = contactInfo['local_dc'];\n        cloudOptions.clientOptions.sni = { address: contactInfo['sni_proxy_address'] };\n\n        callback();\n      });\n  });\n\n  req.on('error', err => callback(getServiceRequestError(err, requestOptions)));\n\n  // We need to both set the timeout in the requestOptions and invoke ClientRequest#setTimeout()\n  // to handle all possible scenarios, for some reason... (tested with one OR the other and didn't fully work)\n  // Setting the also the timeout handler, aborting will emit 'error' and close\n  req.setTimeout(cloudOptions.clientOptions.socketOptions.connectTimeout, () => req.abort());\n}\n\nconst getMetadataServiceInfoAsync = util.promisify(getMetadataServiceInfo);\n\n/**\n * Returns an Error that wraps the inner error obtained while fetching metadata information.\n * @private\n */\nfunction getServiceRequestError(err, requestOptions, isParsingError) {\n  const message = isParsingError\n    ? 'There was an error while parsing the metadata service information'\n    : 'There was an error fetching the metadata information';\n\n  const url = `${requestOptions.hostname}:${requestOptions.port}${(requestOptions.path) ? requestOptions.path : '/'}`;\n  return new errors.NoHostAvailableError({ [url] : err }, message);\n}\n\n/**\n * @param {{subject: {CN: string}, subjectaltname: string?}} cert A certificate object as defined by\n * TLS module https://nodejs.org/docs/latest-v12.x/api/tls.html#tls_certificate_object\n * @param {string} sniAddress\n * @returns {Error|undefined} Similar to tls.checkServerIdentity() returns an Error object, populating it with reason,\n * host, and cert on failure. Otherwise, it returns undefined.\n * @internal\n * @ignore\n */\nfunction checkServerIdentity(cert, sniAddress) {\n  // Based on logic defined by the Node.js Core module\n  // https://github.com/nodejs/node/blob/ff48009fefcecedfee2c6ff1719e5be3f6969049/lib/tls.js#L212-L290\n\n  // SNI address is composed by hostname and port\n  const hostName = sniAddress.split(':')[0];\n  const altNames = cert.subjectaltname;\n  const cn = cert.subject.CN;\n\n  if (hostName === cn) {\n    // quick check based on common name\n    return undefined;\n  }\n\n  const parsedAltNames = [];\n  if (altNames) {\n    for (const name of altNames.split(', ')) {\n      if (name.startsWith('DNS:')) {\n        parsedAltNames.push(name.slice(4));\n      } else if (name.startsWith('URI:')) {\n        parsedAltNames.push(new URL(name.slice(4)).hostname);\n      }\n    }\n  }\n\n  const hostParts = hostName.split('.');\n  const wildcard = (pattern) => checkParts(hostParts, pattern);\n\n  let valid;\n  if (parsedAltNames.length > 0) {\n    valid = parsedAltNames.some(wildcard);\n  } else {\n    // Use the common name\n    valid = wildcard(cn);\n  }\n\n  if (!valid) {\n    const error = new Error(`Host: ${hostName} is not cert's CN/altnames: ${cn} / ${altNames}`);\n    error.reason = error.message;\n    error.host = hostName;\n    error.cert = cert;\n    return error;\n  }\n}\n\n/**\n * Simplified version of Node.js tls core lib check() function\n * https://github.com/nodejs/node/blob/ff48009fefcecedfee2c6ff1719e5be3f6969049/lib/tls.js#L148-L209\n * @private\n * @returns {boolean}\n */\nfunction checkParts(hostParts, pattern) {\n  // Empty strings, null, undefined, etc. never match.\n  if (!pattern) {\n    return false;\n  }\n\n  const patternParts = pattern.split('.');\n\n  if (hostParts.length !== patternParts.length) {\n    return false;\n  }\n\n  // Check host parts from right to left first.\n  for (let i = hostParts.length - 1; i > 0; i -= 1) {\n    if (hostParts[i] !== patternParts[i]) {\n      return false;\n    }\n  }\n\n  const hostSubdomain = hostParts[0];\n  const patternSubdomain = patternParts[0];\n  const patternSubdomainParts = patternSubdomain.split('*');\n\n  // Short-circuit when the subdomain does not contain a wildcard.\n  // RFC 6125 does not allow wildcard substitution for components\n  // containing IDNA A-labels (Punycode) so match those verbatim.\n  if (patternSubdomainParts.length === 1 || patternSubdomain.includes('xn--')) {\n    return hostSubdomain === patternSubdomain;\n  }\n\n  // More than one wildcard is always wrong.\n  if (patternSubdomainParts.length > 2) {\n    return false;\n  }\n\n  // *.tld wildcards are not allowed.\n  if (patternParts.length <= 2) {\n    return false;\n  }\n\n  const [prefix, suffix] = patternSubdomainParts;\n\n  if (prefix.length + suffix.length > hostSubdomain.length) {\n    return false;\n  }\n\n  if (!hostSubdomain.startsWith(prefix)) {\n    return false;\n  }\n\n  if (!hostSubdomain.endsWith(suffix)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  checkServerIdentity,\n  init\n};","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst utils = require('../../utils');\n\n/**\n * Creates a new instance of <code>GraphResultSet</code>.\n * @class\n * @classdesc\n * Represents the result set of a [graph query execution]{@link Client#executeGraph} containing vertices, edges or\n * scalar values depending on the query.\n * <p>\n * It allows iteration of the items using <code>for..of</code> statements under ES2015 and exposes\n * <code>forEach()</code>, <code>first()</code> and <code>toArray()</code> to access the underlying items.\n * </p>\n * @example\n * for (let vertex of result} { ... }\n * @example\n * const arr = result.toArray();\n * @example\n * const vertex = result.first();\n * @param {ResultSet} result\n * @param {Function} [rowParser]\n * @alias module:datastax/graph~GraphResultSet\n * @constructor\n */\nfunction GraphResultSet(result, rowParser) {\n  /**\n   * Information on the execution of a successful query:\n   * @member {Object}\n   * @property {Number} achievedConsistency The consistency level that has been actually achieved by the query.\n   * @property {String} queriedHost The Cassandra host that coordinated this query.\n   * @property {Object} triedHosts Gets the associative array of host that were queried before getting a valid response,\n   * being the last host the one that replied correctly.\n   * @property {Uuid} traceId Identifier of the trace session.\n   * @property {Array.<string>} warnings Warning messages generated by the server when executing the query.\n   */\n  this.info = result.info;\n  const rows = result.rows;\n  rowParser = rowParser || parsePlainJsonRow;\n\n  /**\n   * This property has been deprecated because it may return a lower value than the actual length of the results.\n   * Use <code>toArray()</code> instead.\n   * <p>Gets the length of the result.</p>\n   * @deprecated Use <code>toArray()</code> instead. This property will be removed in the following major version.\n   * @member {Number}\n   */\n  this.length = result.rowLength;\n\n  /**\n   * A string token representing the current page state of query. It can be used in the following executions to\n   * continue paging and retrieve the remained of the result for the query.\n   * @member {String}\n   */\n  this.pageState = result.pageState;\n\n  /**\n   * Returns the first element of the result or null if the result is empty.\n   * @returns {Object}\n   */\n  this.first = function first() {\n    const iterator = this.values();\n    const item = iterator.next();\n    if (item.done) {\n      return null;\n    }\n\n    return item.value;\n  };\n\n  /**\n   * Executes a provided function once per result element.\n   * @param {Function} callback Function to execute for each element, taking two arguments: currentValue and index.\n   * @param {Object} [thisArg] Value to use as <code>this</code> when executing callback.\n   */\n  this.forEach = function forEach(callback, thisArg) {\n    if (!rows.length) {\n      return;\n    }\n    const iterator = this.values();\n    let item = iterator.next();\n    let index = 0;\n    while (!item.done) {\n      callback.call(thisArg || this, item.value, index++);\n      item = iterator.next();\n    }\n  };\n\n  /**\n   * Results an Array of graph result elements (vertex, edge, scalar).\n   * @returns {Array}\n   */\n  this.toArray = function toArray() {\n    if (!rows.length) {\n      return utils.emptyArray;\n    }\n    return utils.iteratorToArray(this.values());\n  };\n\n  /**\n   * Returns a new Iterator object that contains the values for each index in the result.\n   * @returns {Iterator}\n   */\n  this.values = function* values() {\n    for (const traverser of this.getTraversers()) {\n      const bulk = traverser.bulk || 1;\n\n      for (let j = 0; j < bulk; j++) {\n        yield traverser.object;\n      }\n    }\n  };\n\n  /**\n   * Gets the traversers represented contained in the result set.\n   * @returns {Iterator}\n   */\n  this.getTraversers = function* () {\n    for (const row of rows) {\n      yield rowParser(row);\n    }\n  };\n}\n\nif (typeof Symbol !== 'undefined' && typeof Symbol.iterator === 'symbol') {\n  // Make iterable\n  GraphResultSet.prototype[Symbol.iterator] = function getIterator() {\n    return this.values();\n  };\n}\n\n/**\n * @param {Row} row\n * @private\n */\nfunction parsePlainJsonRow(row) {\n  const parsed = JSON.parse(row['gremlin']);\n  return { object: parsed.result, bulk: parsed.bulk || 1 };\n}\n\nmodule.exports = GraphResultSet;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst types = require('../../types');\nconst { dataTypes } = types;\n\n/**\n * Internal representation of a value with additional type information.\n * @internal\n * @ignore\n */\nclass GraphTypeWrapper {\n  constructor(value, typeInfo) {\n    this.value = value;\n    this.typeInfo = typeof typeInfo === 'number' ? { code: typeInfo } : typeInfo;\n  }\n}\n\n\n/**\n * Internal representation of user-defined type with the metadata.\n * @internal\n * @ignore\n */\nclass UdtGraphWrapper {\n  constructor(value, udtInfo) {\n    this.value = value;\n\n    if (!udtInfo || !udtInfo.name || !udtInfo.keyspace || !udtInfo.fields) {\n      throw new TypeError(`udtInfo must be an object with name, keyspace and field properties defined`);\n    }\n\n    this.udtInfo = udtInfo;\n  }\n}\n\n/**\n * Wraps a number or null value to hint the client driver that the data type of the value is an int\n * @memberOf module:datastax/graph\n */\nfunction asInt(value) { return new GraphTypeWrapper(value, dataTypes.int); }\n\n/**\n * Wraps a number or null value to hint the client driver that the data type of the value is a double\n * @memberOf module:datastax/graph\n */\nfunction asDouble(value) { return new GraphTypeWrapper(value, dataTypes.double); }\n\n/**\n * Wraps a number or null value to hint the client driver that the data type of the value is a double\n * @memberOf module:datastax/graph\n */\nfunction asFloat(value) { return new GraphTypeWrapper(value, dataTypes.float); }\n\n/**\n * Wraps a Date or null value to hint the client driver that the data type of the value is a timestamp\n * @memberOf module:datastax/graph\n */\nfunction asTimestamp(value) { return new GraphTypeWrapper(value, dataTypes.timestamp); }\n\n/**\n * Wraps an Object or null value to hint the client driver that the data type of the value is a user-defined type.\n * @memberOf module:datastax/graph\n * @param {object} value The object representing the UDT.\n * @param {{name: string, keyspace: string, fields: Array}} udtInfo The UDT metadata as defined by the driver.\n */\nfunction asUdt(value, udtInfo) { return new UdtGraphWrapper(value, udtInfo); }\n\nmodule.exports = { asInt, asDouble, asFloat, asTimestamp, asUdt, UdtGraphWrapper, GraphTypeWrapper };","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst { GraphTypeWrapper, UdtGraphWrapper } = require('./wrappers');\nconst types = require('../../types');\nconst Encoder = require('../../encoder');\nconst { dataTypes } = types;\n\nfunction getTypeDefinitionByValue(value) {\n  if (value instanceof types.Tuple) {\n    return {\n      'cqlType': 'tuple',\n      'definition': value.elements.map(getTypeDefinitionByValue)\n    };\n  }\n\n  if (value instanceof Map) {\n    // Try to guess the types of the key and value based on the first element\n    const result = { 'cqlType': 'map' };\n    if (value.size > 0) {\n      const first = value.entries().next().value;\n      result['definition'] = first.map(getTypeDefinitionByValue);\n    }\n\n    return result;\n  }\n\n  if (value instanceof UdtGraphWrapper) {\n    return getUdtTypeDefinitionByValue(value);\n  }\n\n  let type;\n  if (value instanceof GraphTypeWrapper) {\n    type = value.typeInfo;\n  } else {\n    type = Encoder.guessDataType(value);\n  }\n\n  if (!type) {\n    return null;\n  }\n\n  return getDefinitionByType(type);\n}\n\nfunction getDefinitionByType(type) {\n  if (type.code === dataTypes.udt) {\n    return getUdtTypeDefinition(type.info);\n  }\n\n  if (type.code === dataTypes.tuple || type.code === dataTypes.map) {\n    return {\n      'cqlType': types.getDataTypeNameByCode(type),\n      'definition': type.info.map(getDefinitionByType)\n    };\n  }\n\n  if (type.code === dataTypes.list || type.code === dataTypes.set) {\n    return {\n      'cqlType': type.code === dataTypes.list ? 'list' : 'set',\n      'definition': [ getDefinitionByType(type.info) ]\n    };\n  }\n\n  return { 'cqlType': types.getDataTypeNameByCode(type) };\n}\n\nfunction getUdtTypeDefinition(udtInfo) {\n  return {\n    'cqlType': 'udt',\n    'keyspace': udtInfo.keyspace,\n    'name': udtInfo.name,\n    'definition': udtInfo.fields.map(field =>\n      // fieldName should be the first property serialized\n      Object.assign({ 'fieldName': field.name }, getDefinitionByType(field.type))\n    ),\n  };\n}\n\nfunction getUdtTypeDefinitionByValue(wrappedValue) {\n  return getUdtTypeDefinition(wrappedValue.udtInfo);\n}\n\nmodule.exports = { getTypeDefinitionByValue, getUdtTypeDefinitionByValue };","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst util = require('util');\n\n/**\n * @classdesc\n * Represents a graph Element.\n * @param id\n * @param label\n * @abstract\n * @memberOf module:datastax/graph\n * @constructor\n */\nfunction Element(id, label) {\n  /**\n   * Gets the element id.\n   */\n  this.id = id;\n  /**\n   * Gets the element label.\n   * @type {String}\n   */\n  this.label = label;\n}\n\n/**\n * @classdesc\n * Represents a graph Vertex.\n * @param id\n * @param {String} label\n * @param {Object<string, Array>} properties\n * @extends {Element}\n * @memberOf module:datastax/graph\n * @constructor\n */\nfunction Vertex(id, label, properties) {\n  Element.call(this, id, label);\n  /**\n   * Gets the vertex properties.\n   * @type {Object<string, Array>}\n   */\n  this.properties = properties;\n}\n\nutil.inherits(Vertex, Element);\n\n/**\n * @classdesc\n * Represents a graph Edge.\n * @param id\n * @param outV\n * @param {outVLabel} outVLabel\n * @param {String} label\n * @param inV\n * @param {String} inVLabel\n * @param {Object<string, Property>} properties\n * @extends {Element}\n * @memberOf module:datastax/graph\n * @constructor\n */\nfunction Edge(id, outV, outVLabel, label, inV, inVLabel, properties) {\n  Element.call(this, id, label);\n  /**\n   * Gets the id of outgoing vertex of the edge.\n   */\n  this.outV = outV;\n  /**\n   * Gets the label of the outgoing vertex.\n   */\n  this.outVLabel = outVLabel;\n  /**\n   * Gets the id of the incoming vertex of the edge.\n   */\n  this.inV = inV;\n\n  /**\n   * Gets the label of the incoming vertex.\n   */\n  this.inVLabel = inVLabel;\n  /**\n   * Gets the properties of the edge as an associative array.\n   * @type {Object}\n   */\n  this.properties = {};\n  (function adaptProperties(self) {\n    if (properties) {\n      const keys = Object.keys(properties);\n      for (let i = 0; i < keys.length; i++) {\n        const k = keys[i];\n        self.properties[k] = properties[k].value;\n      }\n    }\n  })(this);\n}\n\nutil.inherits(Edge, Element);\n\n/**\n * @classdesc\n * Represents a graph vertex property.\n * @param id\n * @param {String} label\n * @param value\n * @param {Object} properties\n * @extends {Element}\n * @memberOf module:datastax/graph\n * @constructor\n */\nfunction VertexProperty(id, label, value, properties) {\n  Element.call(this, id, label);\n  this.value = value;\n  this.key = this.label;\n  this.properties = properties;\n}\n\nutil.inherits(VertexProperty, Element);\n\n/**\n * @classdesc\n * Represents a property.\n * @param key\n * @param value\n * @memberOf module:datastax/graph\n * @constructor\n */\nfunction Property(key, value) {\n  this.key = key;\n  this.value = value;\n}\n\n/**\n * @classdesc\n * Represents a walk through a graph as defined by a traversal.\n * @param {Array} labels\n * @param {Array} objects\n * @memberOf module:datastax/graph\n * @constructor\n */\nfunction Path(labels, objects) {\n  this.labels = labels;\n  this.objects = objects;\n}\n\nmodule.exports = {\n  Edge,\n  Element,\n  Path,\n  Property,\n  Vertex,\n  VertexProperty\n};","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst types = require('../../types');\nconst utils = require('../../utils');\nconst { getTypeDefinitionByValue, getUdtTypeDefinitionByValue } = require('./complex-type-helper');\nconst { Point, Polygon, LineString } = require('../../geometry');\nconst { Edge } = require('./structure');\nconst { GraphTypeWrapper, UdtGraphWrapper } = require('./wrappers');\nconst { Tuple, dataTypes } = types;\n\nconst typeKey = '@type';\nconst valueKey = '@value';\n\nclass EdgeDeserializer {\n  constructor() {\n    this.key = 'g:Edge';\n  }\n\n  deserialize(obj) {\n    const value = obj[valueKey];\n    return new Edge(this.reader.read(value['id']), this.reader.read(value['outV']), value['outVLabel'], value['label'], this.reader.read(value['inV']), value['inVLabel'], this.reader.read(value['properties']));\n  }\n}\n\n/**\n * Uses toString() instance method and fromString() static method to serialize and deserialize the value.\n * @abstract\n * @private\n */\nclass StringBasedTypeSerializer {\n\n  /**\n   * Creates a new instance of the deserializer.\n   * @param {String} key\n   * @param {Function} targetType\n   */\n  constructor(key, targetType) {\n    if (!key) {\n      throw new Error('Deserializer must provide a type key');\n    }\n    if (!targetType) {\n      throw new Error('Deserializer must provide a target type');\n    }\n    this.key = key;\n    this.targetType = targetType;\n  }\n\n  deserialize(obj) {\n    let value = obj[valueKey];\n    if (typeof value !== 'string') {\n      value = value.toString();\n    }\n    return this.targetType.fromString(value);\n  }\n\n  serialize(value) {\n    return {\n      [typeKey]: this.key,\n      [valueKey]: value.toString()\n    };\n  }\n\n  canBeUsedFor(value) {\n    return value instanceof this.targetType;\n  }\n}\n\nclass UuidSerializer extends StringBasedTypeSerializer {\n  constructor() {\n    super('g:UUID', types.Uuid);\n  }\n}\n\nclass LongSerializer extends StringBasedTypeSerializer {\n  constructor() {\n    super('g:Int64', types.Long);\n  }\n}\n\nclass BigDecimalSerializer extends StringBasedTypeSerializer {\n  constructor() {\n    super('gx:BigDecimal', types.BigDecimal);\n  }\n}\n\nclass BigIntegerSerializer extends StringBasedTypeSerializer {\n  constructor() {\n    super('gx:BigInteger', types.Integer);\n  }\n}\n\nclass InetAddressSerializer extends StringBasedTypeSerializer {\n  constructor() {\n    super('gx:InetAddress', types.InetAddress);\n  }\n}\n\nclass LocalDateSerializer extends StringBasedTypeSerializer {\n  constructor() {\n    super('gx:LocalDate', types.LocalDate);\n  }\n}\n\nclass LocalTimeSerializer extends StringBasedTypeSerializer {\n  constructor() {\n    super('gx:LocalTime', types.LocalTime);\n  }\n}\n\nclass InstantSerializer extends StringBasedTypeSerializer {\n  constructor() {\n    super('gx:Instant', Date);\n  }\n\n  serialize(item) {\n    return {\n      [typeKey]: this.key,\n      [valueKey]: item.toISOString()\n    };\n  }\n\n  deserialize(obj) {\n    return new Date(obj[valueKey]);\n  }\n}\n\nclass BlobSerializer extends StringBasedTypeSerializer {\n  constructor() {\n    super('dse:Blob', Buffer);\n  }\n\n  deserialize(obj) {\n    return utils.allocBufferFromString(obj[valueKey], 'base64');\n  }\n\n  serialize(item) {\n    return {\n      [typeKey]: this.key,\n      [valueKey]: item.toString('base64')\n    };\n  }\n}\n\nclass PointSerializer extends StringBasedTypeSerializer {\n  constructor() {\n    super('dse:Point', Point);\n  }\n}\n\nclass LineStringSerializer extends StringBasedTypeSerializer {\n  constructor() {\n    super('dse:LineString', LineString);\n  }\n}\n\nclass PolygonSerializer extends StringBasedTypeSerializer {\n  constructor() {\n    super('dse:Polygon', Polygon);\n  }\n}\n\nclass TupleSerializer {\n  constructor() {\n    this.key = 'dse:Tuple';\n  }\n\n  deserialize(obj) {\n    // Skip definitions and go to the value\n    const value = obj[valueKey]['value'];\n\n    if (!Array.isArray(value)) {\n      throw new Error('Expected Array, obtained: ' + value);\n    }\n\n    const result = [];\n\n    for (const element of value) {\n      result.push(this.reader.read(element));\n    }\n\n    return Tuple.fromArray(result);\n  }\n\n  /** @param {Tuple} tuple */\n  serialize(tuple) {\n    const result = {\n      'cqlType': 'tuple',\n      'definition': tuple.elements.map(getTypeDefinitionByValue),\n      'value': tuple.elements.map(e => this.writer.adaptObject(e))\n    };\n\n    return {\n      [typeKey]: this.key,\n      [valueKey]: result\n    };\n  }\n\n  canBeUsedFor(value) {\n    return value instanceof Tuple;\n  }\n}\n\nclass DurationSerializer {\n  constructor() {\n    this.key = 'dse:Duration';\n  }\n\n  deserialize(obj) {\n    // Skip definitions and go to the value\n    const value = obj[valueKey];\n\n    return new types.Duration(\n      this.reader.read(value['months']), this.reader.read(value['days']), this.reader.read(value['nanos']));\n  }\n\n  /** @param {Duration} value */\n  serialize(value) {\n    return {\n      [typeKey]: this.key,\n      [valueKey]: {\n        'months': value['months'],\n        'days': value['days'],\n        'nanos': value['nanoseconds'],\n      }\n    };\n  }\n\n  canBeUsedFor(value) {\n    return value instanceof types.Duration;\n  }\n}\n\nclass UdtSerializer {\n  constructor() {\n    this.key = 'dse:UDT';\n  }\n\n  deserialize(obj) {\n    // Skip definitions and go to the value\n    const valueRoot = obj[valueKey];\n    const result = {};\n    const value = valueRoot['value'];\n\n    valueRoot['definition'].forEach((definition, index) => {\n      result[definition.fieldName] = this.reader.read(value[index]);\n    });\n\n    return result;\n  }\n\n  serialize(udtWrapper) {\n    const serializedValue = getUdtTypeDefinitionByValue(udtWrapper);\n    // New properties can be added to the existing object without need to clone\n    // as getTypeDefinition() returns a new object each time\n    serializedValue['value'] = Object.entries(udtWrapper.value).map(([_, v]) => this.writer.adaptObject(v));\n\n    return {\n      [typeKey]: this.key,\n      [valueKey]: serializedValue\n    };\n  }\n\n  canBeUsedFor(value) {\n    return value instanceof UdtGraphWrapper;\n  }\n}\n\nclass InternalSerializer {\n  constructor(name, transformFn) {\n    this._name = name;\n    this._transformFn = transformFn || (x => x);\n  }\n\n  serialize(item) {\n    return {\n      [typeKey]: this._name,\n      [valueKey]: this._transformFn(item)\n    };\n  }\n}\n\n// Associative array of graph type name by CQL type code, used by the type wrapper\nconst graphSONSerializerByCqlType = {\n  [dataTypes.int]: new InternalSerializer('g:Int32'),\n  [dataTypes.bigint]: new InternalSerializer('g:Int64'),\n  [dataTypes.double]: new InternalSerializer('g:Double'),\n  [dataTypes.float]: new InternalSerializer('g:Float'),\n  [dataTypes.timestamp]: new InternalSerializer('g:Timestamp', x => x.getTime())\n};\n\nclass GraphTypeWrapperSerializer {\n  constructor() {\n    // Use a fixed name that doesn't conflict with TinkerPop and DS Graph\n    this.key = 'client:wrapper';\n  }\n\n  serialize(wrappedValue) {\n    const s = graphSONSerializerByCqlType[wrappedValue.typeInfo.code];\n\n    if (!s) {\n      throw new Error(`No serializer found for wrapped value ${wrappedValue}`);\n    }\n\n    return s.serialize(wrappedValue.value);\n  }\n\n  canBeUsedFor(value) {\n    return value instanceof GraphTypeWrapper;\n  }\n}\n\nconst serializersArray = [\n  EdgeDeserializer,\n  UuidSerializer,\n  LongSerializer,\n  BigDecimalSerializer,\n  BigIntegerSerializer,\n  InetAddressSerializer,\n  LocalDateSerializer,\n  LocalTimeSerializer,\n  InstantSerializer,\n  BlobSerializer,\n  PointSerializer,\n  LineStringSerializer,\n  PolygonSerializer,\n  TupleSerializer,\n  UdtSerializer,\n  GraphTypeWrapperSerializer,\n  DurationSerializer\n];\n\nfunction getCustomSerializers() {\n  const customSerializers = {};\n\n  serializersArray.forEach(sConstructor => {\n    const instance = new sConstructor();\n    if (!instance.key) {\n      throw new TypeError(`Key for ${sConstructor} instance not set`);\n    }\n\n    customSerializers[instance.key] = instance;\n  });\n\n  return customSerializers;\n}\n\nmodule.exports = getCustomSerializers;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\n/**\n * Graph module.\n * @module datastax/graph\n */\n\nconst GraphResultSet = require('./result-set');\nconst getCustomTypeSerializers = require('./custom-type-serializers');\nconst { asInt, asDouble, asFloat, asTimestamp, asUdt, UdtGraphWrapper, GraphTypeWrapper} = require('./wrappers');\nconst { Edge, Element, Path, Property, Vertex, VertexProperty } = require('./structure');\n\nclass EnumValue {\n  constructor(typeName, elementName) {\n    this.typeName = typeName;\n    this.elementName = elementName;\n  }\n\n  toString() {\n    return this.elementName;\n  }\n}\n\n/**\n * Represents a collection of tokens for more concise Traversal definitions.\n */\nconst t = {\n  id: new EnumValue('T', 'id'),\n  key: new EnumValue('T', 'key'),\n  label: new EnumValue('T', 'label'),\n  value: new EnumValue('T', 'value'),\n};\n\n/**\n * Represents the edge direction.\n */\nconst direction = {\n  'both': new EnumValue('Direction', 'BOTH'),\n  'in': new EnumValue('Direction', 'IN'),\n  'out': new EnumValue('Direction', 'OUT')\n};\n\n// `in` is a reserved keyword depending on the context\n// TinkerPop JavaScript GLV only exposes `in` but it can lead to issues for TypeScript users and others.\n// Expose an extra property to represent `Direction.IN`.\ndirection.in_ = direction.in;\n\nmodule.exports = {\n  Edge,\n  Element,\n  Path,\n  Property,\n  Vertex,\n  VertexProperty,\n\n  asInt,\n  asDouble,\n  asFloat,\n  asTimestamp,\n  asUdt,\n  direction,\n  getCustomTypeSerializers,\n  GraphResultSet,\n  GraphTypeWrapper,\n  t,\n  UdtGraphWrapper\n};","/*\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\n/**\n * @module datastax/graph/tinkerpop/typeSerializers\n * @ignore\n */\n\n/**\n * @author Jorge Bay Gondra\n */\n'use strict';\n\n// Replace dependencies to minimize code changes from Apache TinkerPop\nconst t = {\n  P: UnsupportedType, TextP: UnsupportedType, Traversal: UnsupportedType, Traverser: UnsupportedType,\n  EnumValue: UnsupportedType\n};\nconst ts = { TraversalStrategy: UnsupportedType };\nconst Bytecode = UnsupportedType;\nconst g = require('./index');\nconst utils = { Long: UnsupportedType };\nt.t = g.t;\nt.direction = g.direction;\n\nfunction UnsupportedType() { }\n\nconst valueKey = '@value';\nconst typeKey = '@type';\n\n/**\n * @abstract\n */\nclass TypeSerializer {\n  serialize() {\n    throw new Error('serialize() method not implemented for ' + this.constructor.name);\n  }\n\n  deserialize() {\n    throw new Error('deserialize() method not implemented for ' + this.constructor.name);\n  }\n\n  canBeUsedFor() {\n    throw new Error('canBeUsedFor() method not implemented for ' + this.constructor.name);\n  }\n}\n\nclass NumberSerializer extends TypeSerializer {\n  serialize(item) {\n    if (isNaN(item)) {\n      return {\n        [typeKey]: 'g:Double',\n        [valueKey]: 'NaN'\n      };\n    } else if (item === Number.POSITIVE_INFINITY) {\n      return {\n        [typeKey]: 'g:Double',\n        [valueKey]: 'Infinity'\n      };\n    } else if (item === Number.NEGATIVE_INFINITY) {\n      return {\n        [typeKey]: 'g:Double',\n        [valueKey]: '-Infinity'\n      };\n    } else {\n      return item;\n    }\n  }\n\n  deserialize(obj) {\n    var val = obj[valueKey];\n    if (val === 'NaN') {\n      return NaN;\n    } else if (val === 'Infinity') {\n      return Number.POSITIVE_INFINITY;\n    } else if (val === '-Infinity') {\n      return Number.NEGATIVE_INFINITY;\n    } else {\n      return parseFloat(val);\n    }\n  }\n\n  canBeUsedFor(value) {\n    return (typeof value === 'number');\n  }\n}\n\nclass DateSerializer extends TypeSerializer {\n  serialize(item) {\n    return {\n      [typeKey]: 'g:Date',\n      [valueKey]: item.getTime()\n    };\n  }\n\n  deserialize(obj) {\n    return new Date(obj[valueKey]);\n  }\n\n  canBeUsedFor(value) {\n    return (value instanceof Date);\n  }\n}\n\nclass LongSerializer extends TypeSerializer {\n  serialize(item) {\n    return {\n      [typeKey]: 'g:Int64',\n      [valueKey]: item.value\n    };\n  }\n\n  canBeUsedFor(value) {\n    return (value instanceof utils.Long);\n  }\n}\n\nclass BytecodeSerializer extends TypeSerializer {\n  serialize(item) {\n    let bytecode = item;\n    if (item instanceof t.Traversal) {\n      bytecode = item.getBytecode();\n    }\n    const result = {};\n    result[typeKey] = 'g:Bytecode';\n    const resultValue = result[valueKey] = {};\n    const sources = this._serializeInstructions(bytecode.sourceInstructions);\n    if (sources) {\n      resultValue['source'] = sources;\n    }\n    const steps = this._serializeInstructions(bytecode.stepInstructions);\n    if (steps) {\n      resultValue['step'] = steps;\n    }\n    return result;\n  }\n\n  _serializeInstructions(instructions) {\n    if (instructions.length === 0) {\n      return null;\n    }\n    const result = new Array(instructions.length);\n    result[0] = instructions[0];\n    for (let i = 0; i < instructions.length; i++) {\n      result[i] = instructions[i].map(item => this.writer.adaptObject(item));\n    }\n    return result;\n  }\n\n  canBeUsedFor(value) {\n    return (value instanceof Bytecode) || (value instanceof t.Traversal);\n  }\n}\n\nclass PSerializer extends TypeSerializer {\n  /** @param {P} item */\n  serialize(item) {\n    const result = {};\n    result[typeKey] = 'g:P';\n    const resultValue = result[valueKey] = {\n      'predicate': item.operator\n    };\n    if (item.other === undefined || item.other === null) {\n      resultValue['value'] = this.writer.adaptObject(item.value);\n    }\n    else {\n      resultValue['value'] = [ this.writer.adaptObject(item.value), this.writer.adaptObject(item.other) ];\n    }\n    return result;\n  }\n\n  canBeUsedFor(value) {\n    return (value instanceof t.P);\n  }\n}\n\nclass TextPSerializer extends TypeSerializer {\n  /** @param {TextP} item */\n  serialize(item) {\n    const result = {};\n    result[typeKey] = 'g:TextP';\n    const resultValue = result[valueKey] = {\n      'predicate': item.operator\n    };\n    if (item.other === undefined || item.other === null) {\n      resultValue['value'] = this.writer.adaptObject(item.value);\n    }\n    else {\n      resultValue['value'] = [ this.writer.adaptObject(item.value), this.writer.adaptObject(item.other) ];\n    }\n    return result;\n  }\n\n  canBeUsedFor(value) {\n    return (value instanceof t.TextP);\n  }\n}\n\nclass LambdaSerializer extends TypeSerializer {\n  /** @param {Function} item */\n  serialize(item) {\n    return {\n      [typeKey]: 'g:Lambda',\n      [valueKey]: {\n        'arguments': item.length,\n        'language': 'gremlin-javascript',\n        'script': item.toString()\n      }\n    };\n  }\n\n  canBeUsedFor(value) {\n    return (typeof value === 'function');\n  }\n}\n\nclass EnumSerializer extends TypeSerializer {\n  /** @param {EnumValue} item */\n  serialize(item) {\n    return {\n      [typeKey]: 'g:' + item.typeName,\n      [valueKey]: item.elementName\n    };\n  }\n\n  canBeUsedFor(value) {\n    return value && value.typeName && value instanceof t.EnumValue;\n  }\n}\n\nclass TraverserSerializer extends TypeSerializer {\n  /** @param {Traverser} item */\n  serialize(item) {\n    return {\n      [typeKey]: 'g:Traverser',\n      [valueKey]: {\n        'value': this.writer.adaptObject(item.object),\n        'bulk': this.writer.adaptObject(item.bulk)\n      }\n    };\n  }\n\n  deserialize(obj) {\n    const value = obj[valueKey];\n    return new t.Traverser(this.reader.read(value['value']), this.reader.read(value['bulk']));\n  }\n\n  canBeUsedFor(value) {\n    return (value instanceof t.Traverser);\n  }\n}\n\nclass TraversalStrategySerializer extends TypeSerializer {\n  /** @param {TraversalStrategy} item */\n  serialize(item) {\n    return {\n      [typeKey]: 'g:' + item.constructor.name,\n      [valueKey]: item.configuration\n    };\n  }\n\n  canBeUsedFor(value) {\n    return (value instanceof ts.TraversalStrategy);\n  }\n}\n\nclass VertexSerializer extends TypeSerializer {\n  deserialize(obj) {\n    const value = obj[valueKey];\n    return new g.Vertex(this.reader.read(value['id']), value['label'], this.reader.read(value['properties']));\n  }\n\n  /** @param {Vertex} item */\n  serialize(item) {\n    return {\n      [typeKey]: 'g:Vertex',\n      [valueKey]: {\n        'id': this.writer.adaptObject(item.id),\n        'label': item.label\n      }\n    };\n  }\n\n  canBeUsedFor(value) {\n    return (value instanceof g.Vertex);\n  }\n}\n\nclass VertexPropertySerializer extends TypeSerializer {\n  deserialize(obj) {\n    const value = obj[valueKey];\n    return new g.VertexProperty(\n      this.reader.read(value['id']),\n      value['label'],\n      this.reader.read(value['value']),\n      this.reader.read(value['properties'])\n    );\n  }\n}\n\nclass PropertySerializer extends TypeSerializer {\n  deserialize(obj) {\n    const value = obj[valueKey];\n    return new g.Property(\n      value['key'],\n      this.reader.read(value['value']));\n  }\n}\n\nclass EdgeSerializer extends TypeSerializer {\n  deserialize(obj) {\n    const value = obj[valueKey];\n    return new g.Edge(\n      this.reader.read(value['id']),\n      new g.Vertex(this.reader.read(value['outV']), this.reader.read(value['outVLabel'])),\n      value['label'],\n      new g.Vertex(this.reader.read(value['inV']), this.reader.read(value['inVLabel'])),\n      this.reader.read(value['properties'])\n    );\n  }\n\n  /** @param {Edge} item */\n  serialize(item) {\n    return {\n      [typeKey]: 'g:Edge',\n      [valueKey]: {\n        'id': this.writer.adaptObject(item.id),\n        'label': item.label,\n        'outV': this.writer.adaptObject(item.outV.id),\n        'outVLabel': item.outV.label,\n        'inV': this.writer.adaptObject(item.inV.id),\n        'inVLabel': item.inV.label\n      }\n    };\n  }\n\n  canBeUsedFor(value) {\n    return (value instanceof g.Edge);\n  }\n}\n\nclass PathSerializer extends TypeSerializer {\n  deserialize(obj) {\n    const value = obj[valueKey];\n    const objects = value['objects'].map(o => this.reader.read(o));\n    return new g.Path(this.reader.read(value['labels']), objects);\n  }\n}\n\nclass Path3Serializer extends TypeSerializer {\n  deserialize(obj) {\n    const value = obj[valueKey];\n    return new g.Path(this.reader.read(value['labels']), this.reader.read(value['objects']));\n  }\n}\n\nclass TSerializer extends TypeSerializer {\n  deserialize(obj) {\n    return t.t[obj[valueKey]];\n  }\n}\n\nclass DirectionSerializer extends TypeSerializer {\n    deserialize(obj) {\n        return t.direction[obj[valueKey].toLowerCase()];\n    }\n}\n\nclass ArraySerializer extends TypeSerializer {\n  constructor(typeKey) {\n    super();\n    this.typeKey = typeKey;\n  }\n\n  deserialize(obj) {\n    const value = obj[valueKey];\n    if (!Array.isArray(value)) {\n      throw new Error('Expected Array, obtained: ' + value);\n    }\n    return value.map(x => this.reader.read(x));\n  }\n\n  /** @param {Array} item */\n  serialize(item) {\n    return {\n      [typeKey]: this.typeKey,\n      [valueKey]: item.map(x => this.writer.adaptObject(x))\n    };\n  }\n\n  canBeUsedFor(value) {\n    return Array.isArray(value);\n  }\n}\n\nclass BulkSetSerializer extends TypeSerializer {\n  deserialize(obj) {\n      const value = obj[valueKey];\n      if (!Array.isArray(value)) {\n          throw new Error('Expected Array, obtained: ' + value);\n      }\n\n      // coerce the BulkSet to List. if the bulk exceeds the int space then we can't coerce to List anyway,\n      // so this query will be trouble. we'd need a legit BulkSet implementation here in js. this current\n      // implementation is here to replicate the previous functionality that existed on the server side in\n      // previous versions.\n      let result = [];\n      for (let ix = 0, iy = value.length; ix < iy; ix += 2) {\n        const pair = value.slice(ix, ix + 2);\n        result = result.concat(Array(this.reader.read(pair[1])).fill(this.reader.read(pair[0])));\n      }\n\n      return result;\n  }\n}\n\nclass MapSerializer extends TypeSerializer {\n  deserialize(obj) {\n    const value = obj[valueKey];\n    if (!Array.isArray(value)) {\n      throw new Error('Expected Array, obtained: ' + value);\n    }\n    const result = new Map();\n    for (let i = 0; i < value.length; i += 2) {\n      result.set(this.reader.read(value[i]), this.reader.read(value[i + 1]));\n    }\n    return result;\n  }\n\n  /** @param {Map} map */\n  serialize(map) {\n    const arr = [];\n    map.forEach((v, k) => {\n      arr.push(this.writer.adaptObject(k));\n      arr.push(this.writer.adaptObject(v));\n    });\n    return {\n      [typeKey]: 'g:Map',\n      [valueKey]: arr\n    };\n  }\n\n  canBeUsedFor(value) {\n    return value instanceof Map;\n  }\n}\n\nclass ListSerializer extends ArraySerializer {\n  constructor() {\n    super('g:List');\n  }\n}\n\nclass SetSerializer extends ArraySerializer {\n  constructor() {\n    super('g:Set');\n  }\n}\n\nmodule.exports = {\n  BulkSetSerializer,\n  BytecodeSerializer,\n  DateSerializer,\n  DirectionSerializer,\n  EdgeSerializer,\n  EnumSerializer,\n  LambdaSerializer,\n  ListSerializer,\n  LongSerializer,\n  MapSerializer,\n  NumberSerializer,\n  Path3Serializer,\n  PathSerializer,\n  PropertySerializer,\n  PSerializer,\n  TextPSerializer,\n  SetSerializer,\n  TSerializer,\n  TraverserSerializer,\n  TraversalStrategySerializer,\n  typeKey,\n  valueKey,\n  VertexPropertySerializer,\n  VertexSerializer\n};\n","/*\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\n/**\n * @module datastax/graph/tinkerpop/graphSerializers\n * @ignore\n */\n\n\n/**\n * @author Jorge Bay Gondra\n */\n'use strict';\n\nconst typeSerializers = require('./type-serializers');\n\n/**\n * GraphSON2 writer.\n */\nclass GraphSON2Writer {\n\n  /**\n   * @param {Object} [options]\n   * @param {Object} [options.serializers] An object used as an associative array with GraphSON 2 type name as keys and\n   * serializer instances as values, ie: { 'g:Int64': longSerializer }.\n   * @constructor\n   */\n  constructor(options) {\n    this._options = options || {};\n    // Create instance of the default serializers\n    this._serializers = this.getDefaultSerializers().map(serializerConstructor => {\n      const s = new serializerConstructor();\n      s.writer = this;\n      return s;\n    });\n\n    const customSerializers = this._options.serializers || {};\n\n    Object.keys(customSerializers).forEach(key => {\n      const s = customSerializers[key];\n      if (!s.serialize) {\n        return;\n      }\n      s.writer = this;\n      // Insert custom serializers first\n      this._serializers.unshift(s);\n    });\n  }\n\n  /**\n   * Gets the default serializers to be used.\n   * @returns {Array}\n   */\n  getDefaultSerializers() {\n    return graphSON2Serializers;\n  }\n\n  adaptObject(value) {\n    let s;\n\n    for (let i = 0; i < this._serializers.length; i++) {\n      const currentSerializer = this._serializers[i];\n      if (currentSerializer.canBeUsedFor && currentSerializer.canBeUsedFor(value)) {\n        s = currentSerializer;\n        break;\n      }\n    }\n\n    if (s) {\n      return s.serialize(value);\n    }\n\n    if (Array.isArray(value)) {\n      // We need to handle arrays when there is no serializer\n      // for older versions of GraphSON\n      return value.map(item => this.adaptObject(item));\n    }\n\n    // Default (strings / objects / ...)\n    return value;\n  }\n\n  /**\n   * Returns the GraphSON representation of the provided object instance.\n   * @param {Object} obj\n   * @returns {String}\n   */\n  write(obj) {\n    return JSON.stringify(this.adaptObject(obj));\n  }\n}\n\n/**\n * GraphSON3 writer.\n */\nclass GraphSON3Writer extends GraphSON2Writer {\n  getDefaultSerializers() {\n    return graphSON3Serializers;\n  }\n}\n\n/**\n * GraphSON2 reader.\n */\nclass GraphSON2Reader {\n  /**\n   * GraphSON Reader\n   * @param {Object} [options]\n   * @param {Object} [options.serializers] An object used as an associative array with GraphSON 2 type name as keys and\n   * deserializer instances as values, ie: { 'g:Int64': longSerializer }.\n   * @constructor\n   */\n  constructor(options) {\n    this._options = options || {};\n    this._deserializers = {};\n\n    const defaultDeserializers = this.getDefaultDeserializers();\n    Object.keys(defaultDeserializers).forEach(typeName => {\n      const serializerConstructor = defaultDeserializers[typeName];\n      const s = new serializerConstructor();\n      s.reader = this;\n      this._deserializers[typeName] = s;\n    });\n\n    if (this._options.serializers) {\n      const customSerializers = this._options.serializers || {};\n      Object.keys(customSerializers).forEach(key => {\n        const s = customSerializers[key];\n        if (!s.deserialize) {\n          return;\n        }\n        s.reader = this;\n        this._deserializers[key] = s;\n      });\n    }\n  }\n\n  /**\n   * Gets the default deserializers as an associative array.\n   * @returns {Object}\n   */\n  getDefaultDeserializers() {\n    return graphSON2Deserializers;\n  }\n\n  read(obj) {\n    if (obj === undefined) {\n      return undefined;\n    }\n    if (obj === null) {\n      return null;\n    }\n    if (Array.isArray(obj)) {\n      return obj.map(item => this.read(item));\n    }\n    const type = obj[typeSerializers.typeKey];\n    if (type) {\n      const d = this._deserializers[type];\n      if (d) {\n        // Use type serializer\n        return d.deserialize(obj);\n      }\n      return obj[typeSerializers.valueKey];\n    }\n    if (obj && typeof obj === 'object' && obj.constructor === Object) {\n      return this._deserializeObject(obj);\n    }\n    // Default (for boolean, number and other scalars)\n    return obj;\n  }\n\n  _deserializeObject(obj) {\n    const keys = Object.keys(obj);\n    const result = {};\n    for (let i = 0; i < keys.length; i++) {\n      result[keys[i]] = this.read(obj[keys[i]]);\n    }\n    return result;\n  }\n}\n\n/**\n * GraphSON3 reader.\n */\nclass GraphSON3Reader extends GraphSON2Reader {\n  getDefaultDeserializers() {\n    return graphSON3Deserializers;\n  }\n}\n\nconst graphSON2Deserializers = {\n  'g:Traverser': typeSerializers.TraverserSerializer,\n  'g:TraversalStrategy': typeSerializers.TraversalStrategySerializer,\n  'g:Int32':  typeSerializers.NumberSerializer,\n  'g:Int64':  typeSerializers.NumberSerializer,\n  'g:Float':  typeSerializers.NumberSerializer,\n  'g:Double': typeSerializers.NumberSerializer,\n  'g:Date': typeSerializers.DateSerializer,\n  'g:Direction': typeSerializers.DirectionSerializer,\n  'g:Vertex': typeSerializers.VertexSerializer,\n  'g:Edge': typeSerializers.EdgeSerializer,\n  'g:VertexProperty': typeSerializers.VertexPropertySerializer,\n  'g:Property': typeSerializers.PropertySerializer,\n  'g:Path': typeSerializers.Path3Serializer,\n  'g:TextP': typeSerializers.TextPSerializer,\n  'g:T': typeSerializers.TSerializer,\n  'g:BulkSet': typeSerializers.BulkSetSerializer\n};\n\nconst graphSON3Deserializers = Object.assign({}, graphSON2Deserializers, {\n  'g:List': typeSerializers.ListSerializer,\n  'g:Set': typeSerializers.SetSerializer,\n  'g:Map': typeSerializers.MapSerializer\n});\n\nconst graphSON2Serializers = [\n  typeSerializers.NumberSerializer,\n  typeSerializers.DateSerializer,\n  typeSerializers.BytecodeSerializer,\n  typeSerializers.TraverserSerializer,\n  typeSerializers.TraversalStrategySerializer,\n  typeSerializers.PSerializer,\n  typeSerializers.TextPSerializer,\n  typeSerializers.LambdaSerializer,\n  typeSerializers.EnumSerializer,\n  typeSerializers.VertexSerializer,\n  typeSerializers.EdgeSerializer,\n  typeSerializers.LongSerializer\n];\n\nconst graphSON3Serializers = graphSON2Serializers.concat([\n  typeSerializers.ListSerializer,\n  typeSerializers.SetSerializer,\n  typeSerializers.MapSerializer\n]);\n\nmodule.exports = {\n  GraphSON3Writer,\n  GraphSON3Reader,\n  GraphSON2Writer,\n  GraphSON2Reader,\n  GraphSONWriter: GraphSON3Writer,\n  GraphSONReader: GraphSON3Reader\n};","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\nconst util = require('util');\nconst types = require('../../types');\nconst utils = require('../../utils');\nconst { DefaultExecutionOptions, proxyExecuteKey } = require('../../execution-options');\nconst Long = types.Long;\n\nlet consistencyNames;\n\nconst graphProtocol = Object.freeze({\n  graphson1: 'graphson-1.0',\n  graphson2: 'graphson-2.0',\n  graphson3: 'graphson-3.0'\n});\n\nconst payloadKeys = Object.freeze({\n  language :'graph-language',\n  source: 'graph-source',\n  name: 'graph-name',\n  results: 'graph-results',\n  writeConsistency: 'graph-write-consistency',\n  readConsistency: 'graph-read-consistency',\n  timeout: 'request-timeout'\n});\n\n/**\n * Graph options that extends {@link QueryOptions}.\n * <p>\n *   Consider using [execution profiles]{@link ExecutionProfile} if you plan to reuse options across different\n *   query executions.\n * </p>\n * @typedef {QueryOptions} module:datastax/graph~GraphQueryOptions\n * @property {String} [graphLanguage] The graph language to use in graph queries.\n * @property {String} [graphResults] The protocol to use for serializing and deserializing graph results.\n * <p>\n *   Note that this value should rarely be set by users and will otherwise be unset. When unset the server resolves\n *   the protocol based on the <code>graphLanguage</code> specified.\n * </p>\n * @property {String} [graphName] The graph name to be used in the query. You can use <code>null</code> to clear the\n * value from the <code>DseClientOptions</code> and execute a query without a default graph.\n * @property {Number} [graphReadConsistency] Specifies the\n * [consistency level]{@link module:types~consistencies}\n * to be used for the graph read queries in this execution.\n * <p>\n *   When defined, it overrides the consistency level only for the READ part of the graph query.\n * </p>\n * @property {String} [graphSource] The graph traversal source name to use in graph queries.\n * @property {Number} [graphWriteConsistency] Specifies the [consistency level]{@link module:types~consistencies} to\n * be used for the graph write queries in this execution.\n * <p>\n *   When defined, it overrides the consistency level only for the WRITE part of the graph query.\n * </p>\n * @property {RetryPolicy} [retry] Sets the retry policy to be used for the graph query execution.\n * <p>\n *   When not specified in the {@link GraphQueryOptions} or in the {@link ExecutionProfile}, it will use by default\n *   a retry policy that does not retry graph executions.\n * </p>\n */\n\n/**\n * Gets the default options with the custom payload for a given profile.\n * @param {ProfileManager} profileManager\n * @param baseOptions\n * @param {RetryPolicy|null} defaultRetryPolicy\n * @param {ExecutionProfile} profile\n * @returns {DseClientOptions}\n * @private\n */\nfunction getDefaultGraphOptions(profileManager, baseOptions, defaultRetryPolicy, profile) {\n  return profileManager.getOrCreateGraphOptions(profile, function createDefaultOptions() {\n    const profileOptions = profile.graphOptions || utils.emptyObject;\n    const defaultProfile = profileManager.getDefault();\n    const options = {\n      customPayload: {\n        [payloadKeys.language]: utils.allocBufferFromString(profileOptions.language || baseOptions.language),\n        [payloadKeys.source]: utils.allocBufferFromString(profileOptions.source || baseOptions.source)\n      },\n      graphLanguage: profileOptions.language || baseOptions.language,\n      graphResults: profileOptions.results || baseOptions.results,\n      graphSource: profileOptions.source || baseOptions.source,\n      graphName: utils.ifUndefined(profileOptions.name, baseOptions.name)\n    };\n\n    if (profile !== defaultProfile) {\n      options.retry = profile.retry || baseOptions.retry;\n    } else {\n      // Based on an implementation detail of the execution profiles, the retry policy for the default profile is\n      // always loaded (required), but that doesn't mean that it was specified by the user.\n      // If it wasn't specified by the user, use the default retry policy for graph statements.\n      options.retry = defaultRetryPolicy || baseOptions.retry;\n    }\n\n    if (baseOptions.executeAs) {\n      options.customPayload[proxyExecuteKey] = utils.allocBufferFromString(baseOptions.executeAs);\n    }\n\n    if (options.graphName) {\n      options.customPayload[payloadKeys.name] = utils.allocBufferFromString(options.graphName);\n    }\n\n    const graphResults = utils.ifUndefined(profileOptions.results, baseOptions.graphResults);\n    if (graphResults !== undefined) {\n      options.customPayload[payloadKeys.results] = utils.allocBufferFromString(graphResults);\n    }\n\n    const readConsistency = utils.ifUndefined(profileOptions.readConsistency, baseOptions.readConsistency);\n    if (readConsistency !== undefined) {\n      options.customPayload[payloadKeys.readConsistency] =\n        utils.allocBufferFromString(getConsistencyName(readConsistency));\n    }\n\n    const writeConsistency = utils.ifUndefined(profileOptions.writeConsistency, baseOptions.writeConsistency);\n    if (writeConsistency !== undefined) {\n      options.customPayload[payloadKeys.writeConsistency] =\n        utils.allocBufferFromString(getConsistencyName(writeConsistency));\n    }\n\n    options.readTimeout = utils.ifUndefined3(profile.readTimeout, defaultProfile.readTimeout, baseOptions.readTimeout);\n    if (options.readTimeout > 0) {\n      // Write the graph read timeout payload\n      options.customPayload[payloadKeys.timeout] = longBuffer(options.readTimeout);\n    }\n\n    return options;\n  });\n}\n\n/**\n * Sets the payload key. If the value is not provided, it uses the value from the default profile options.\n * @param {Object} payload\n * @param {QueryOptions} profileOptions\n * @param {String} key\n * @param {String|Number|null} value\n * @param {Function} [converter]\n * @private\n */\nfunction setPayloadKey(payload, profileOptions, key, value, converter) {\n  converter = converter || utils.allocBufferFromString;\n  if (value === null) {\n    // Use null to avoid set payload for a key\n    return;\n  }\n\n  if (value !== undefined) {\n    payload[key] = converter(value);\n    return;\n  }\n\n  if (profileOptions.customPayload[key]) {\n    payload[key] = profileOptions.customPayload[key];\n  }\n}\n\nfunction longBuffer(value) {\n  value = Long.fromNumber(value);\n  return Long.toBuffer(value);\n}\n\n/**\n * Gets the name in upper case of the consistency level.\n * @param {Number} consistency\n * @private\n */\nfunction getConsistencyName(consistency) {\n  // eslint-disable-next-line\n  if (consistency == undefined) {\n    //null or undefined => undefined\n    return undefined;\n  }\n  loadConsistencyNames();\n  const name = consistencyNames[consistency];\n  if (!name) {\n    throw new Error(util.format(\n      'Consistency %s not found, use values defined as properties in types.consistencies object', consistency\n    ));\n  }\n  return name;\n}\n\nfunction loadConsistencyNames() {\n  if (consistencyNames) {\n    return;\n  }\n  consistencyNames = {};\n  const propertyNames = Object.keys(types.consistencies);\n  for (let i = 0; i < propertyNames.length; i++) {\n    const name = propertyNames[i];\n    consistencyNames[types.consistencies[name]] = name.toUpperCase();\n  }\n  //Using java constants naming conventions\n  consistencyNames[types.consistencies.localQuorum] = 'LOCAL_QUORUM';\n  consistencyNames[types.consistencies.eachQuorum] = 'EACH_QUORUM';\n  consistencyNames[types.consistencies.localSerial] = 'LOCAL_SERIAL';\n  consistencyNames[types.consistencies.localOne] = 'LOCAL_ONE';\n}\n\n/**\n * Represents a wrapper around the options related to a graph execution.\n * @internal\n * @ignore\n */\nclass GraphExecutionOptions extends DefaultExecutionOptions {\n\n  /**\n   * Creates a new instance of GraphExecutionOptions.\n   * @param {GraphQueryOptions} queryOptions The user provided query options.\n   * @param {Client} client the client instance.\n   * @param graphBaseOptions The default graph base options.\n   * @param {RetryPolicy} defaultProfileRetryPolicy\n   */\n  constructor(queryOptions, client, graphBaseOptions, defaultProfileRetryPolicy) {\n\n    queryOptions = queryOptions || utils.emptyObject;\n    super(queryOptions, client, null);\n\n    this._defaultGraphOptions = getDefaultGraphOptions(\n      client.profileManager, graphBaseOptions, defaultProfileRetryPolicy, this.getProfile());\n\n    this._preferredHost = null;\n    this._graphSubProtocol = queryOptions.graphResults || this._defaultGraphOptions.graphResults;\n    this._graphLanguage = queryOptions.graphLanguage || this._defaultGraphOptions.graphLanguage;\n  }\n\n  setPreferredHost(host) {\n    this._preferredHost = host;\n  }\n\n  getPreferredHost() {\n    return this._preferredHost;\n  }\n\n  getGraphSource() {\n    return this.getRawQueryOptions().graphSource || this._defaultGraphOptions.graphSource;\n  }\n\n  getGraphLanguage() {\n    return this._graphLanguage;\n  }\n\n  setGraphLanguage(value) {\n    this._graphLanguage = value;\n  }\n\n  getGraphName() {\n    return utils.ifUndefined(this.getRawQueryOptions().graphName, this._defaultGraphOptions.graphName);\n  }\n\n  getGraphSubProtocol() {\n    return this._graphSubProtocol;\n  }\n\n  setGraphSubProtocol(protocol) {\n    this._graphSubProtocol = protocol;\n  }\n\n  /** Graph executions have a specific default read timeout */\n  getReadTimeout() {\n    return this.getRawQueryOptions().readTimeout || this._defaultGraphOptions.readTimeout;\n  }\n\n  /** Graph executions have a specific default retry policy */\n  getRetryPolicy() {\n    return this.getRawQueryOptions().retry || this._defaultGraphOptions.retry;\n  }\n\n  getRowParser() {\n    const factory = this.getRawQueryOptions().rowParserFactory;\n\n    if (!factory) {\n      return null;\n    }\n\n    return factory(this.getGraphSubProtocol());\n  }\n\n  getQueryWriter() {\n    const factory = this.getRawQueryOptions().queryWriterFactory;\n\n    if (!factory) {\n      return null;\n    }\n\n    return factory(this.getGraphSubProtocol());\n  }\n\n  setGraphPayload() {\n    const options = this.getRawQueryOptions();\n    const defaultOptions = this._defaultGraphOptions;\n\n    // Clone the existing custom payload (if any)\n    const payload = Object.assign({}, this.getCustomPayload());\n\n    // Override the payload for DSE Graph exclusive options\n    setPayloadKey(payload, defaultOptions, payloadKeys.language,\n      this.getGraphLanguage() !== this._defaultGraphOptions.graphLanguage ? this.getGraphLanguage() : undefined);\n    setPayloadKey(payload, defaultOptions, payloadKeys.source, options.graphSource);\n    setPayloadKey(payload, defaultOptions, payloadKeys.name, options.graphName);\n    setPayloadKey(payload, defaultOptions, payloadKeys.readConsistency,\n      getConsistencyName(options.graphReadConsistency));\n    setPayloadKey(payload, defaultOptions, payloadKeys.writeConsistency,\n      getConsistencyName(options.graphWriteConsistency));\n\n    // Use the read timeout defined by the user or the one default to graph executions\n    setPayloadKey(payload, defaultOptions, payloadKeys.timeout,\n      this.getReadTimeout() > 0 ? this.getReadTimeout() : null, longBuffer);\n\n    // Graph result is always set\n    payload[payloadKeys.results] = defaultOptions.graphResults === this.getGraphSubProtocol()\n      ? defaultOptions.customPayload[payloadKeys.results] : utils.allocBufferFromString(this.getGraphSubProtocol());\n\n    this.setCustomPayload(payload);\n  }\n}\n\nmodule.exports = {\n  GraphExecutionOptions,\n  graphProtocol,\n  payloadKeys\n};","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst utils = require('../../utils');\nconst policies = require('../../policies');\nconst GraphResultSet = require('./result-set');\nconst { GraphSON2Reader, GraphSON2Writer, GraphSON3Reader, GraphSON3Writer } = require('./graph-serializer');\nconst getCustomTypeSerializers = require('./custom-type-serializers');\nconst { GraphExecutionOptions, graphProtocol } = require('./options');\n\nconst graphLanguageGroovyString = 'gremlin-groovy';\nconst graphEngineCore = 'Core';\n\nconst graphSON2Reader = new GraphSON2Reader({ serializers: getCustomTypeSerializers() });\nconst graphSON2Writer = new GraphSON2Writer({ serializers: getCustomTypeSerializers() });\nconst graphSON3Reader = new GraphSON3Reader({ serializers: getCustomTypeSerializers() });\nconst graphSON3Writer = new GraphSON3Writer({ serializers: getCustomTypeSerializers() });\n\nconst rowParsers = new Map([\n  [ graphProtocol.graphson2, getRowParser(graphSON2Reader) ],\n  [ graphProtocol.graphson3, getRowParser(graphSON3Reader) ]\n]);\n\nconst defaultWriters = new Map([\n  [ graphProtocol.graphson1, x => JSON.stringify(x) ],\n  [ graphProtocol.graphson2, getDefaultWriter(graphSON2Writer) ],\n  [ graphProtocol.graphson3, getDefaultWriter(graphSON3Writer) ]\n]);\n\n/**\n * Internal class that contains the logic for executing a graph traversal.\n * @ignore\n */\nclass GraphExecutor {\n\n  /**\n   * Creates a new instance of GraphExecutor.\n   * @param {Client} client\n   * @param {ClientOptions} rawOptions\n   * @param {Function} handler\n   */\n  constructor(client, rawOptions, handler) {\n    this._client = client;\n    this._handler = handler;\n\n    // Retrieve the retry policy for the default profile to determine if it was specified\n    this._defaultProfileRetryPolicy = client.profileManager.getDefaultConfiguredRetryPolicy();\n\n    // Use graphBaseOptions as a way to gather all defaults that affect graph executions\n    this._graphBaseOptions = utils.extend({\n      executeAs: client.options.queryOptions.executeAs,\n      language: graphLanguageGroovyString,\n      source: 'g',\n      readTimeout: 0,\n      // As the default retry policy might retry non-idempotent queries\n      // we should use default retry policy for all graph queries that does not retry\n      retry: new policies.retry.FallthroughRetryPolicy()\n    }, rawOptions.graphOptions, client.profileManager.getDefault().graphOptions);\n\n    if (this._graphBaseOptions.readTimeout === null) {\n      this._graphBaseOptions.readTimeout = client.options.socketOptions.readTimeout;\n    }\n  }\n\n  /**\n   * Executes the graph traversal.\n   * @param {String|Object} query\n   * @param {Object} parameters\n   * @param {GraphQueryOptions} options\n   */\n  async send(query, parameters, options) {\n    if (Array.isArray(parameters)) {\n      throw new TypeError('Parameters must be a Object instance as an associative array');\n    }\n\n    if (!query) {\n      throw new TypeError('Query must be defined');\n    }\n\n    const execOptions = new GraphExecutionOptions(\n      options, this._client, this._graphBaseOptions, this._defaultProfileRetryPolicy);\n\n    if (execOptions.getGraphSource() === 'a') {\n      const host = await this._getAnalyticsMaster();\n      execOptions.setPreferredHost(host);\n    }\n\n    // A query object that allows to plugin any executable thing\n    const isQueryObject = typeof query === 'object' && query.graphLanguage && query.value && query.queryWriterFactory;\n\n    if (isQueryObject) {\n      // Use the provided graph language to override the current\n      execOptions.setGraphLanguage(query.graphLanguage);\n    }\n\n    this._setGraphProtocol(execOptions);\n    execOptions.setGraphPayload();\n    parameters = GraphExecutor._buildGraphParameters(parameters, execOptions.getGraphSubProtocol());\n\n    if (typeof query !== 'string') {\n      // Its a traversal that needs to be converted\n      // Transforming the provided query into a traversal requires the protocol to be set first.\n      // Query writer factory can be defined in the options or in the query object\n      let queryWriter = execOptions.getQueryWriter();\n\n      if (isQueryObject) {\n        queryWriter = query.queryWriterFactory(execOptions.getGraphSubProtocol());\n      } else if (!queryWriter) {\n        queryWriter = GraphExecutor._writerFactory(execOptions.getGraphSubProtocol());\n      }\n\n      query = queryWriter(!isQueryObject ? query : query.value);\n    }\n\n    return await this._executeGraphQuery(query, parameters, execOptions);\n  }\n\n  /**\n   * Sends the graph traversal.\n   * @param {string} query\n   * @param {object} parameters\n   * @param {GraphExecutionOptions} execOptions\n   * @returns {Promise<GraphResultSet>}\n   * @private\n   */\n  async _executeGraphQuery(query, parameters, execOptions) {\n    const result = await this._handler.call(this._client, query, parameters, execOptions);\n\n    // Instances of rowParser transform Row instances into Traverser instances.\n    // Traverser instance is an object with the following form { object: any, bulk: number }\n    const rowParser = execOptions.getRowParser() || GraphExecutor._rowParserFactory(execOptions.getGraphSubProtocol());\n\n    return new GraphResultSet(result, rowParser);\n  }\n\n  /**\n   * Uses the RPC call to obtain the analytics master host.\n   * @returns {Promise<Host|null>}\n   * @private\n   */\n  async _getAnalyticsMaster() {\n    try {\n      const result = await this._client.execute('CALL DseClientTool.getAnalyticsGraphServer()', utils.emptyArray);\n\n      if (result.rows.length === 0) {\n        this._client.log('verbose',\n          'Empty response querying graph analytics server, query will not be routed optimally');\n        return null;\n      }\n\n      const resultField = result.rows[0]['result'];\n      if (!resultField || !resultField['location']) {\n        this._client.log('verbose',\n          'Unexpected response querying graph analytics server, query will not be routed optimally',\n          result.rows[0]);\n        return null;\n      }\n\n      const hostName = resultField['location'].substr(0, resultField['location'].lastIndexOf(':'));\n      const addressTranslator = this._client.options.policies.addressResolution;\n\n      return await new Promise(resolve => {\n        addressTranslator.translate(hostName, this._client.options.protocolOptions.port, (endpoint) =>\n          resolve(this._client.hosts.get(endpoint)));\n      });\n    } catch (err) {\n      this._client.log('verbose', 'Error querying graph analytics server, query will not be routed optimally', err);\n      return null;\n    }\n  }\n\n  /**\n   * Resolves what protocol should be used for decoding graph results for the given execution.\n   *\n   * <p>Resolution is done in the following manner if graphResults is not set:</p>\n   *\n   * <ul>\n   *   <li>If graph name is set, and associated keyspace's graph engine is set to \"Core\", use {@link\n    *       graphProtocol#graphson3}.\n   *   <li>Else, if the graph language is not 'gremlin-groovy', use {@link graphProtocol#graphson2}\n   *   <li>Otherwise, use {@link graphProtocol#graphson1}\n   * </ul>\n   * @param {GraphExecutionOptions} execOptions\n   */\n  _setGraphProtocol(execOptions) {\n    let protocol = execOptions.getGraphSubProtocol();\n\n    if (protocol) {\n      return;\n    }\n\n    if (execOptions.getGraphName()) {\n      const keyspace = this._client.metadata.keyspaces[execOptions.getGraphName()];\n      if (keyspace && keyspace.graphEngine === graphEngineCore) {\n        protocol = graphProtocol.graphson3;\n      }\n    }\n\n    if (!protocol) {\n      // Decide the minimal version supported by the graph language\n      if (execOptions.getGraphLanguage() === graphLanguageGroovyString) {\n        protocol = graphProtocol.graphson1;\n      } else {\n        protocol = graphProtocol.graphson2;\n      }\n    }\n\n    execOptions.setGraphSubProtocol(protocol);\n  }\n\n  /**\n   * Only GraphSON1 parameters are supported.\n   * @param {Array|function|null} parameters\n   * @param {string} protocol\n   * @returns {string[]|null}\n   * @private\n   */\n  static _buildGraphParameters(parameters, protocol) {\n    if (!parameters || typeof parameters !== 'object') {\n      return null;\n    }\n\n    const queryWriter = GraphExecutor._writerFactory(protocol);\n\n    return [\n      (protocol !== graphProtocol.graphson1 && protocol !== graphProtocol.graphson2)\n        ? queryWriter(new Map(Object.entries(parameters)))\n        : queryWriter(parameters)\n    ];\n  }\n\n  static _rowParserFactory(protocol) {\n    const handler = rowParsers.get(protocol);\n\n    if (!handler) {\n      // Default to no row parser\n      return null;\n    }\n\n    return handler;\n  }\n\n  static _writerFactory(protocol) {\n    const handler = defaultWriters.get(protocol);\n\n    if (!handler) {\n      throw new Error(`No writer defined for protocol ${protocol}`);\n    }\n\n    return handler;\n  }\n}\n\nfunction getRowParser(reader) {\n  return row => {\n    const item = reader.read(JSON.parse(row['gremlin']));\n    return { object: item['result'], bulk: item['bulk'] || 1 };\n  };\n}\n\nfunction getDefaultWriter(writer) {\n  return value => writer.write(value);\n}\n\nmodule.exports = GraphExecutor;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst events = require('events');\nconst util = require('util');\n\nconst utils = require('./utils.js');\nconst errors = require('./errors.js');\nconst types = require('./types');\nconst { ProfileManager } = require('./execution-profile');\nconst requests = require('./requests');\nconst clientOptions = require('./client-options');\nconst ClientState = require('./metadata/client-state');\nconst description = require('../package.json').description;\nconst { version } = require('../package.json');\nconst { DefaultExecutionOptions } = require('./execution-options');\nconst ControlConnection = require('./control-connection');\nconst RequestHandler = require('./request-handler');\nconst PrepareHandler = require('./prepare-handler');\nconst InsightsClient = require('./insights-client');\nconst cloud = require('./datastax/cloud');\nconst GraphExecutor = require('./datastax/graph/graph-executor');\nconst promiseUtils = require('./promise-utils');\n\n/**\n * Max amount of pools being warmup in parallel, when warmup is enabled\n * @private\n */\nconst warmupLimit = 32;\n\n/**\n * Client options.\n * <p>While the driver provides lots of extensibility points and configurability, few client options are required.</p>\n * <p>Default values for all settings are designed to be suitable for the majority of use cases, you should avoid\n * fine tuning it when not needed.</p>\n * <p>See [Client constructor]{@link Client} documentation for recommended options.</p>\n * @typedef {Object} ClientOptions\n * @property {Array.<string>} contactPoints\n * Array of addresses or host names of the nodes to add as contact points.\n * <p>\n *  Contact points are addresses of Cassandra nodes that the driver uses to discover the cluster topology.\n * </p>\n * <p>\n *  Only one contact point is required (the driver will retrieve the address of the other nodes automatically),\n *  but it is usually a good idea to provide more than one contact point, because if that single contact point is\n *  unavailable, the driver will not be able to initialize correctly.\n * </p>\n * @property {String} [localDataCenter] The local data center to use.\n * <p>\n *   If using DCAwareRoundRobinPolicy (default), this option is required and only hosts from this data center are\n *   connected to and used in query plans.\n * </p>\n * @property {String} [keyspace] The logged keyspace for all the connections created within the {@link Client} instance.\n * @property {Object} [credentials] An object containing the username and password for plain-text authentication.\n * It configures the authentication provider to be used against Apache Cassandra's PasswordAuthenticator or DSE's\n * DseAuthenticator, when default auth scheme is plain-text.\n * <p>\n *   Note that you should configure either <code>credentials</code> or <code>authProvider</code> to connect to an\n *   auth-enabled cluster, but not both.\n * </p>\n * @property {String} [credentials.username] The username to use for plain-text authentication.\n * @property {String} [credentials.password] The password to use for plain-text authentication.\n * @property {Uuid} [id] A unique identifier assigned to a {@link Client} object, that will be communicated to the\n * server (DSE 6.0+) to identify the client instance created with this options. When not defined, the driver will\n * generate a random identifier.\n * @property {String} [applicationName] An optional setting identifying the name of the application using\n * the {@link Client} instance.\n * <p>This value is passed to DSE and is useful as metadata for describing a client connection on the server side.</p>\n * @property {String} [applicationVersion] An optional setting identifying the version of the application using\n * the {@link Client} instance.\n * <p>This value is passed to DSE and is useful as metadata for describing a client connection on the server side.</p>\n * @property {Object} [monitorReporting] Options for reporting mechanism from the client to the DSE server, for\n * versions that support it.\n * @property {Boolean} [monitorReporting.enabled=true] Determines whether the reporting mechanism is enabled.\n * Defaults to <code>true</code>.\n * @property {Object} [cloud] The options to connect to a cloud instance.\n * @property {String|URL} cloud.secureConnectBundle Determines the file path for the credentials file bundle.\n * @property {Number} [refreshSchemaDelay] The default window size in milliseconds used to debounce node list and schema\n * refresh metadata requests. Default: 1000.\n * @property {Boolean} [isMetadataSyncEnabled] Determines whether client-side schema metadata retrieval and update is\n * enabled.\n * <p>Setting this value to <code>false</code> will cause keyspace information not to be automatically loaded, affecting\n * replica calculation per token in the different keyspaces. When disabling metadata synchronization, use\n * [Metadata.refreshKeyspaces()]{@link module:metadata~Metadata#refreshKeyspaces} to keep keyspace information up to\n * date or token-awareness will not work correctly.</p>\n * Default: <code>true</code>.\n * @property {Boolean} [prepareOnAllHosts] Determines if the driver should prepare queries on all hosts in the cluster.\n * Default: <code>true</code>.\n * @property {Boolean} [rePrepareOnUp] Determines if the driver should re-prepare all cached prepared queries on a\n * host when it marks it back up.\n * Default: <code>true</code>.\n * @property {Number} [maxPrepared] Determines the maximum amount of different prepared queries before evicting items\n * from the internal cache. Reaching a high threshold hints that the queries are not being reused, like when\n * hard-coding parameter values inside the queries.\n * Default: <code>500</code>.\n * @property {Object} [policies]\n * @property {LoadBalancingPolicy} [policies.loadBalancing] The load balancing policy instance to be used to determine\n * the coordinator per query.\n * @property {RetryPolicy} [policies.retry] The retry policy.\n * @property {ReconnectionPolicy} [policies.reconnection] The reconnection policy to be used.\n * @property {AddressTranslator} [policies.addressResolution] The address resolution policy.\n * @property {SpeculativeExecutionPolicy} [policies.speculativeExecution] The <code>SpeculativeExecutionPolicy</code>\n * instance to be used to determine if the client should send speculative queries when the selected host takes more\n * time than expected.\n * <p>\n *   Default: <code>[NoSpeculativeExecutionPolicy]{@link\n  *   module:policies/speculativeExecution~NoSpeculativeExecutionPolicy}</code>\n * </p>\n * @property {TimestampGenerator} [policies.timestampGeneration] The client-side\n * [query timestamp generator]{@link module:policies/timestampGeneration~TimestampGenerator}.\n * <p>\n *   Default: <code>[MonotonicTimestampGenerator]{@link module:policies/timestampGeneration~MonotonicTimestampGenerator}\n *   </code>\n * </p>\n * <p>Use <code>null</code> to disable client-side timestamp generation.</p>\n * @property {QueryOptions} [queryOptions] Default options for all queries.\n * @property {Object} [pooling] Pooling options.\n * @property {Number} [pooling.heartBeatInterval] The amount of idle time in milliseconds that has to pass before the\n * driver issues a request on an active connection to avoid idle time disconnections. Default: 30000.\n * @property {Object} [pooling.coreConnectionsPerHost] Associative array containing amount of connections per host\n * distance.\n * @property {Number} [pooling.maxRequestsPerConnection] The maximum number of requests per connection. The default\n * value is:\n * <ul>\n *   <li>For modern protocol versions (v3 and above): 2048</li>\n *   <li>For older protocol versions (v1 and v2): 128</li>\n * </ul>\n * @property {Boolean} [pooling.warmup] Determines if all connections to hosts in the local datacenter must be opened on\n * connect. Default: true.\n * @property {Object} [protocolOptions]\n * @property {Number} [protocolOptions.port] The port to use to connect to the Cassandra host. If not set through this\n * method, the default port (9042) will be used instead.\n * @property {Number} [protocolOptions.maxSchemaAgreementWaitSeconds] The maximum time in seconds to wait for schema\n * agreement between nodes before returning from a DDL query. Default: 10.\n * @property {Number} [protocolOptions.maxVersion] When set, it limits the maximum protocol version used to connect to\n * the nodes.\n * Useful for using the driver against a cluster that contains nodes with different major/minor versions of Cassandra.\n * @property {Boolean} [protocolOptions.noCompact] When set to true, enables the NO_COMPACT startup option.\n * <p>\n * When this option is supplied <code>SELECT</code>, <code>UPDATE</code>, <code>DELETE</code>, and <code>BATCH</code>\n * statements on <code>COMPACT STORAGE</code> tables function in \"compatibility\" mode which allows seeing these tables\n * as if they were \"regular\" CQL tables.\n * </p>\n * <p>\n * This option only effects interactions with interactions with tables using <code>COMPACT STORAGE</code> and is only\n * supported by C* 3.0.16+, 3.11.2+, 4.0+ and DSE 6.0+.\n * </p>\n * @property {Object} [socketOptions]\n * @property {Number} [socketOptions.connectTimeout] Connection timeout in milliseconds. Default: 5000.\n * @property {Number} [socketOptions.defunctReadTimeoutThreshold] Determines the amount of requests that simultaneously\n * have to timeout before closing the connection. Default: 64.\n * @property {Boolean} [socketOptions.keepAlive] Whether to enable TCP keep-alive on the socket. Default: true.\n * @property {Number} [socketOptions.keepAliveDelay] TCP keep-alive delay in milliseconds. Default: 0.\n * @property {Number} [socketOptions.readTimeout] Per-host read timeout in milliseconds.\n * <p>\n *   Please note that this is not the maximum time a call to {@link Client#execute} may have to wait;\n *   this is the maximum time that call will wait for one particular Cassandra host, but other hosts will be tried if\n *   one of them timeout. In other words, a {@link Client#execute} call may theoretically wait up to\n *   <code>readTimeout * number_of_cassandra_hosts</code> (though the total number of hosts tried for a given query also\n *   depends on the LoadBalancingPolicy in use).\n * <p>When setting this value, keep in mind the following:</p>\n * <ul>\n *   <li>the timeout settings used on the Cassandra side (*_request_timeout_in_ms in cassandra.yaml) should be taken\n *   into account when picking a value for this read timeout. You should pick a value a couple of seconds greater than\n *   the Cassandra timeout settings.\n *   </li>\n *   <li>\n *     the read timeout is only approximate and only control the timeout to one Cassandra host, not the full query.\n *   </li>\n * </ul>\n * Setting a value of 0 disables read timeouts. Default: <code>12000</code>.\n * @property {Boolean} [socketOptions.tcpNoDelay] When set to true, it disables the Nagle algorithm. Default: true.\n * @property {Number} [socketOptions.coalescingThreshold] Buffer length in bytes use by the write queue before flushing\n * the frames. Default: 8000.\n * @property {AuthProvider} [authProvider] Provider to be used to authenticate to an auth-enabled cluster.\n * @property {RequestTracker} [requestTracker] The instance of RequestTracker used to monitor or log requests executed\n * with this instance.\n * @property {Object} [sslOptions] Client-to-node ssl options. When set the driver will use the secure layer.\n * You can specify cert, ca, ... options named after the Node.js <code>tls.connect()</code> options.\n * <p>\n *   It uses the same default values as Node.js <code>tls.connect()</code> except for <code>rejectUnauthorized</code>\n *   which is set to <code>false</code> by default (for historical reasons). This setting is likely to change\n *   in upcoming versions to enable validation by default.\n * </p>\n * @property {Object} [encoding] Encoding options.\n * @property {Function} [encoding.map] Map constructor to use for Cassandra map<k,v> type encoding and decoding.\n * If not set, it will default to Javascript Object with map keys as property names.\n * @property {Function} [encoding.set] Set constructor to use for Cassandra set<k> type encoding and decoding.\n * If not set, it will default to Javascript Array.\n * @property {Boolean} [encoding.copyBuffer] Determines if the network buffer should be copied for buffer based data\n * types (blob, uuid, timeuuid and inet).\n * <p>\n *   Setting it to true will cause that the network buffer is copied for each row value of those types,\n *   causing additional allocations but freeing the network buffer to be reused.\n *   Setting it to true is a good choice for cases where the Row and ResultSet returned by the queries are long-lived\n *   objects.\n * </p>\n * <p>\n *  Setting it to false will cause less overhead and the reference of the network buffer to be maintained until the row\n *  / result set are de-referenced.\n *  Default: true.\n * </p>\n * @property {Boolean} [encoding.useUndefinedAsUnset] Valid for Cassandra 2.2 and above. Determines that, if a parameter\n * is set to\n * <code>undefined</code> it should be encoded as <code>unset</code>.\n * <p>\n *  By default, ECMAScript <code>undefined</code> is encoded as <code>null</code> in the driver. Cassandra 2.2\n *  introduced the concept of unset.\n *  At driver level, you can set a parameter to unset using the field <code>types.unset</code>. Setting this flag to\n *  true allows you to use ECMAScript undefined as Cassandra <code>unset</code>.\n * </p>\n * <p>\n *   Default: true.\n * </p>\n * @property {Boolean} [encoding.useBigIntAsLong] Use [BigInt ECMAScript type](https://tc39.github.io/proposal-bigint/)\n * to represent CQL bigint and counter data types.\n * @property {Boolean} [encoding.useBigIntAsVarint] Use [BigInt ECMAScript\n * type](https://tc39.github.io/proposal-bigint/) to represent CQL varint data type.\n * @property {Array.<ExecutionProfile>} [profiles] The array of [execution profiles]{@link ExecutionProfile}.\n * @property {Function} [promiseFactory] Function to be used to create a <code>Promise</code> from a\n * callback-style function.\n * <p>\n *   Promise libraries often provide different methods to create a promise. For example, you can use Bluebird's\n *   <code>Promise.fromCallback()</code> method.\n * </p>\n * <p>\n *   By default, the driver will use the\n *   [Promise constructor]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise}.\n * </p>\n */\n\n/**\n * Query options\n * @typedef {Object} QueryOptions\n * @property {Boolean} [autoPage] Determines if the driver must retrieve the following result pages automatically.\n * <p>\n *   This setting is only considered by the [Client#eachRow()]{@link Client#eachRow} method. For more information,\n *   check the\n *   [paging results documentation]{@link https://docs.datastax.com/en/developer/nodejs-driver/latest/features/paging/}.\n * </p>\n * @property {Boolean} [captureStackTrace] Determines if the stack trace before the query execution should be\n * maintained.\n * <p>\n *   Useful for debugging purposes, it should be set to <code>false</code> under production environment as it adds an\n *   unnecessary overhead to each execution.\n * </p>\n * Default: false.\n * @property {Number} [consistency] [Consistency level]{@link module:types~consistencies}.\n * <p>\n *   Defaults to <code>localOne</code> for Apache Cassandra and DSE deployments.\n *   For DataStax Astra, it defaults to <code>localQuorum</code>.\n * </p>\n * @property {Object} [customPayload] Key-value payload to be passed to the server. On the Cassandra side,\n * implementations of QueryHandler can use this data.\n * @property {String} [executeAs] The user or role name to act as when executing this statement.\n * <p>When set, it executes as a different user/role than the one currently authenticated (a.k.a. proxy execution).</p>\n * <p>This feature is only available in DSE 5.1+.</p>\n * @property {String|ExecutionProfile} [executionProfile] Name or instance of the [profile]{@link ExecutionProfile} to\n * be used for this execution. If not set, it will the use \"default\" execution profile.\n * @property {Number} [fetchSize] Amount of rows to retrieve per page.\n * @property {Array|Array<Array>} [hints] Type hints for parameters given in the query, ordered as for the parameters.\n * <p>For batch queries, an array of such arrays, ordered as with the queries in the batch.</p>\n * @property {Host} [host] The host that should handle the query.\n * <p>\n *   Use of this option is <em>heavily discouraged</em> and should only be used in the following cases:\n * </p>\n * <ol>\n *   <li>\n *     Querying node-local tables, such as tables in the <code>system</code> and <code>system_views</code>\n *     keyspaces.\n *   </li>\n *   <li>\n *     Applying a series of schema changes, where it may be advantageous to execute schema changes in sequence on the\n *     same node.\n *   </li>\n * </ol>\n * <p>\n *   Configuring a specific host causes the configured\n *   [LoadBalancingPolicy]{@link module:policies/loadBalancing~LoadBalancingPolicy} to be completely bypassed.\n *   However, if the load balancing policy dictates that the host is at a\n *   [distance of ignored]{@link module:types~distance} or there is no active connectivity to the host, the request will\n *   fail with a [NoHostAvailableError]{@link module:errors~NoHostAvailableError}.\n * </p>\n * @property {Boolean} [isIdempotent] Defines whether the query can be applied multiple times without changing the result\n * beyond the initial application.\n * <p>\n *   The query execution idempotence can be used at [RetryPolicy]{@link module:policies/retry~RetryPolicy} level to\n *   determine if an statement can be retried in case of request error or write timeout.\n * </p>\n * <p>Default: <code>false</code>.</p>\n * @property {String} [keyspace] Specifies the keyspace for the query. It is used for the following:\n * <ol>\n * <li>To indicate what keyspace the statement is applicable to (protocol V5+ only).  This is useful when the\n * query does not provide an explicit keyspace and you want to override the current {@link Client#keyspace}.</li>\n * <li>For query routing when the query operates on a different keyspace than the current {@link Client#keyspace}.</li>\n * </ol>\n * @property {Boolean} [logged] Determines if the batch should be written to the batchlog. Only valid for\n * [Client#batch()]{@link Client#batch}, it will be ignored by other methods. Default: true.\n * @property {Boolean} [counter] Determines if its a counter batch. Only valid for\n * [Client#batch()]{@link Client#batch}, it will be ignored by other methods. Default: false.\n * @property {Buffer|String} [pageState] Buffer or string token representing the paging state.\n * <p>Useful for manual paging, if provided, the query will be executed starting from a given paging state.</p>\n * @property {Boolean} [prepare] Determines if the query must be executed as a prepared statement.\n * @property {Number} [readTimeout] When defined, it overrides the default read timeout\n * (<code>socketOptions.readTimeout</code>) in milliseconds for this execution per coordinator.\n * <p>\n *   Suitable for statements for which the coordinator may allow a longer server-side timeout, for example aggregation\n *   queries.\n * </p>\n * <p>\n *   A value of <code>0</code> disables client side read timeout for the execution. Default: <code>undefined</code>.\n * </p>\n * @property {RetryPolicy} [retry] Retry policy for the query.\n * <p>\n *   This property can be used to specify a different [retry policy]{@link module:policies/retry} to the one specified\n *   in the {@link ClientOptions}.policies.\n * </p>\n * @property {Array} [routingIndexes] Index of the parameters that are part of the partition key to determine\n * the routing.\n * @property {Buffer|Array} [routingKey] Partition key(s) to determine which coordinator should be used for the query.\n * @property {Array} [routingNames] Array of the parameters names that are part of the partition key to determine the\n * routing. Only valid for non-prepared requests, it's recommended that you use the prepare flag instead.\n * @property {Number} [serialConsistency] Serial consistency is the consistency level for the serial phase of\n * conditional updates.\n * This option will be ignored for anything else that a conditional update/insert.\n * @property {Number|Long} [timestamp] The default timestamp for the query in microseconds from the unix epoch\n * (00:00:00, January 1st, 1970).\n * <p>If provided, this will replace the server side assigned timestamp as default timestamp.</p>\n * <p>Use [generateTimestamp()]{@link module:types~generateTimestamp} utility method to generate a valid timestamp\n * based on a Date and microseconds parts.</p>\n * @property {Boolean} [traceQuery] Enable query tracing for the execution. Use query tracing to diagnose performance\n * problems related to query executions. Default: false.\n * <p>To retrieve trace, you can call [Metadata.getTrace()]{@link module:metadata~Metadata#getTrace} method.</p>\n * @property {Object} [graphOptions] Default options for graph query executions.\n * <p>\n *   These options are meant to provide defaults for all graph query executions. Consider using\n *   [execution profiles]{@link ExecutionProfile} if you plan to reuse different set of options across different\n *   query executions.\n * </p>\n * @property {String} [graphOptions.language] The graph language to use in graph queries. Default:\n * <code>'gremlin-groovy'</code>.\n * @property {String} [graphOptions.name] The graph name to be used in all graph queries.\n * <p>\n * This property is required but there is no default value for it. This value can be overridden at query level.\n * </p>\n * @property {Number} [graphOptions.readConsistency] Overrides the\n * [consistency level]{@link module:types~consistencies}\n * defined in the query options for graph read queries.\n * @property {Number} [graphOptions.readTimeout] Overrides the default per-host read timeout (in milliseconds) for all\n * graph queries. Default: <code>0</code>.\n * <p>\n *   Use <code>null</code> to reset the value and use the default on <code>socketOptions.readTimeout</code> .\n * </p>\n * @property {String} [graphOptions.source] The graph traversal source name to use in graph queries. Default:\n * <code>'g'</code>.\n * @property {Number} [graphOptions.writeConsistency] Overrides the [consistency\n * level]{@link module:types~consistencies} defined in the query options for graph write queries.\n */\n\n/**\n * Creates a new instance of {@link Client}.\n * @classdesc\n * Represents a database client that maintains multiple connections to the cluster nodes, providing methods to\n * execute CQL statements.\n * <p>\n * The <code>Client</code> uses [policies]{@link module:policies} to decide which nodes to connect to, which node\n * to use per each query execution, when it should retry failed or timed-out executions and how reconnection to down\n * nodes should be made.\n * </p>\n * @extends EventEmitter\n * @param {ClientOptions} options The options for this instance.\n * @example <caption>Creating a new client instance</caption>\n * const client = new Client({\n *   contactPoints: ['10.0.1.101', '10.0.1.102'],\n *   localDataCenter: 'datacenter1'\n * });\n * @example <caption>Executing a query</caption>\n * const result = await client.connect();\n * console.log(`Connected to ${client.hosts.length} nodes in the cluster: ${client.hosts.keys().join(', ')}`);\n * @example <caption>Executing a query</caption>\n * const result = await client.execute('SELECT key FROM system.local');\n * const row = result.first();\n * console.log(row['key']);\n * @constructor\n */\nfunction Client(options) {\n  events.EventEmitter.call(this);\n  this.options = clientOptions.extend({ logEmitter: this.emit.bind(this), id: types.Uuid.random() }, options);\n  Object.defineProperty(this, 'profileManager', { value: new ProfileManager(this.options) });\n  Object.defineProperty(this, 'controlConnection', {\n    value: new ControlConnection(this.options, this.profileManager), writable: true }\n  );\n  Object.defineProperty(this, 'insightsClient', { value: new InsightsClient(this)});\n\n  //Unlimited amount of listeners for internal event queues by default\n  this.setMaxListeners(0);\n  this.connected = false;\n  this.isShuttingDown = false;\n  /**\n   * Gets the name of the active keyspace.\n   * @type {String}\n   */\n  this.keyspace = options.keyspace;\n  /**\n   * Gets the schema and cluster metadata information.\n   * @type {Metadata}\n   */\n  this.metadata = this.controlConnection.metadata;\n  /**\n   * Gets an associative array of cluster hosts.\n   * @type {HostMap}\n   */\n  this.hosts = this.controlConnection.hosts;\n\n  /**\n   * The [ClientMetrics]{@link module:metrics~ClientMetrics} instance used to expose measurements of its internal\n   * behavior and of the server as seen from the driver side.\n   * <p>By default, a [DefaultMetrics]{@link module:metrics~DefaultMetrics} instance is used.</p>\n   * @type {ClientMetrics}\n   */\n  this.metrics = this.options.metrics;\n\n  this._graphExecutor = new GraphExecutor(this, options, this._execute);\n}\n\nutil.inherits(Client, events.EventEmitter);\n\n/**\n * Emitted when a new host is added to the cluster.\n * <ul>\n *   <li>{@link Host} The host being added.</li>\n * </ul>\n * @event Client#hostAdd\n */\n/**\n * Emitted when a host is removed from the cluster\n * <ul>\n *   <li>{@link Host} The host being removed.</li>\n * </ul>\n * @event Client#hostRemove\n */\n/**\n * Emitted when a host in the cluster changed status from down to up.\n * <ul>\n *   <li>{@link Host host} The host that changed the status.</li>\n * </ul>\n * @event Client#hostUp\n */\n/**\n * Emitted when a host in the cluster changed status from up to down.\n * <ul>\n *   <li>{@link Host host} The host that changed the status.</li>\n * </ul>\n * @event Client#hostDown\n */\n\n/**\n * Attempts to connect to one of the [contactPoints]{@link ClientOptions} and discovers the rest the nodes of the\n * cluster.\n * <p>When the {@link Client} is already connected, it resolves immediately.</p>\n * <p>It returns a <code>Promise</code> when a <code>callback</code> is not provided.</p>\n * @param {function} [callback] The optional callback that is invoked when the pool is connected or it failed to\n * connect.\n * @example <caption>Usage example</caption>\n * await client.connect();\n */\nClient.prototype.connect = function (callback) {\n  if (this.connected && callback) {\n    // Avoid creating Promise to immediately resolve them\n    return callback();\n  }\n\n  return promiseUtils.optionalCallback(this._connect(), callback);\n};\n\n/**\n * Async-only version of {@link Client#connect()}.\n * @private\n */\nClient.prototype._connect = async function () {\n  if (this.connected) {\n    return;\n  }\n\n  if (this.isShuttingDown) {\n    //it is being shutdown, don't allow further calls to connect()\n    throw new errors.NoHostAvailableError(null, 'Connecting after shutdown is not supported');\n  }\n\n  if (this.connecting) {\n    return promiseUtils.fromEvent(this, 'connected');\n  }\n\n  this.connecting = true;\n  this.log('info', util.format(\"Connecting to cluster using '%s' version %s\", description, version));\n\n  try {\n    await cloud.init(this.options);\n    await this.controlConnection.init();\n    this.hosts = this.controlConnection.hosts;\n    await this.profileManager.init(this, this.hosts);\n\n    if (this.keyspace) {\n      await RequestHandler.setKeyspace(this);\n    }\n\n    clientOptions.setMetadataDependent(this);\n\n    await this._warmup();\n\n  } catch (err) {\n    // We should close the pools (if any) and reset the state to allow successive calls to connect()\n    await this.controlConnection.reset();\n    this.connected = false;\n    this.connecting = false;\n    this.emit('connected', err);\n    throw err;\n  }\n\n  this._setHostListeners();\n\n  // Set the distance of the control connection host relatively to this instance\n  this.profileManager.getDistance(this.controlConnection.host);\n  this.insightsClient.init();\n  this.connected = true;\n  this.connecting = false;\n  this.emit('connected');\n};\n\n/**\n * Executes a query on an available connection.\n * <p>The query can be prepared (recommended) or not depending on the [prepare]{@linkcode QueryOptions} flag.</p>\n * <p>\n *   Some execution failures can be handled transparently by the driver, according to the\n *   [RetryPolicy]{@linkcode module:policies/retry~RetryPolicy} or the\n *   [SpeculativeExecutionPolicy]{@linkcode module:policies/speculativeExecution} used.\n * </p>\n * <p>It returns a <code>Promise</code> when a <code>callback</code> is not provided.</p>\n * @param {String} query The query to execute.\n * @param {Array|Object} [params] Array of parameter values or an associative array (object) containing parameter names\n * as keys and its value.\n * @param {QueryOptions} [options] The query options for the execution.\n * @param {ResultCallback} [callback] Executes callback(err, result) when execution completed. When not defined, the\n * method will return a promise.\n * @example <caption>Promise-based API, using async/await</caption>\n * const query = 'SELECT name, email FROM users WHERE id = ?';\n * const result = await client.execute(query, [ id ], { prepare: true });\n * const row = result.first();\n * console.log('%s: %s', row['name'], row['email']);\n * @example <caption>Callback-based API</caption>\n * const query = 'SELECT name, email FROM users WHERE id = ?';\n * client.execute(query, [ id ], { prepare: true }, function (err, result) {\n *   assert.ifError(err);\n *   const row = result.first();\n *   console.log('%s: %s', row['name'], row['email']);\n * });\n * @see {@link ExecutionProfile} to reuse a set of options across different query executions.\n */\nClient.prototype.execute = function (query, params, options, callback) {\n  // This method acts as a wrapper for the async method _execute()\n\n  if (!callback) {\n    // Set default argument values for optional parameters\n    if (typeof options === 'function') {\n      callback = options;\n      options = null;\n    } else if (typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n  }\n\n  try {\n    const execOptions = DefaultExecutionOptions.create(options, this);\n    return promiseUtils.optionalCallback(this._execute(query, params, execOptions), callback);\n  }\n  catch (err) {\n    // There was an error when parsing the user options\n    if (callback) {\n      return callback(err);\n    }\n\n    return Promise.reject(err);\n  }\n};\n\n/**\n * Executes a graph query.\n * <p>It returns a <code>Promise</code> when a <code>callback</code> is not provided.</p>\n * @param {String} query The gremlin query.\n * @param {Object|null} [parameters] An associative array containing the key and values of the parameters.\n * @param {GraphQueryOptions|null} [options] The graph query options.\n * @param {Function} [callback] Function to execute when the response is retrieved, taking two arguments:\n * <code>err</code> and <code>result</code>. When not defined, the method will return a promise.\n * @example <caption>Promise-based API, using async/await</caption>\n * const result = await client.executeGraph('g.V()');\n * // Get the first item (vertex, edge, scalar value, ...)\n * const vertex = result.first();\n * console.log(vertex.label);\n * @example <caption>Callback-based API</caption>\n * client.executeGraph('g.V()', (err, result) => {\n *   const vertex = result.first();\n *   console.log(vertex.label);\n * });\n * @example <caption>Iterating through the results</caption>\n * const result = await client.executeGraph('g.E()');\n * for (let edge of result) {\n *   console.log(edge.label); // created\n * });\n * @example <caption>Using result.forEach()</caption>\n * const result = await client.executeGraph('g.V().hasLabel(\"person\")');\n * result.forEach(function(vertex) {\n *   console.log(vertex.type); // vertex\n *   console.log(vertex.label); // person\n * });\n * @see {@link ExecutionProfile} to reuse a set of options across different query executions.\n */\nClient.prototype.executeGraph = function (query, parameters, options, callback) {\n  callback = callback || (options ? options : parameters);\n\n  if (typeof callback === 'function') {\n    parameters = typeof parameters !== 'function' ? parameters : null;\n    return promiseUtils.toCallback(this._graphExecutor.send(query, parameters, options), callback);\n  }\n\n  return this._graphExecutor.send(query, parameters, options);\n};\n\n/**\n * Executes the query and calls <code>rowCallback</code> for each row as soon as they are received. Calls the final\n * <code>callback</code> after all rows have been sent, or when there is an error.\n * <p>\n *   The query can be prepared (recommended) or not depending on the [prepare]{@linkcode QueryOptions} flag.\n * </p>\n * @param {String} query The query to execute\n * @param {Array|Object} [params] Array of parameter values or an associative array (object) containing parameter names\n * as keys and its value.\n * @param {QueryOptions} [options] The query options.\n * @param {function} rowCallback Executes <code>rowCallback(n, row)</code> per each row received, where n is the row\n * index and row is the current Row.\n * @param {function} [callback] Executes <code>callback(err, result)</code> after all rows have been received.\n * <p>\n *   When dealing with paged results, [ResultSet#nextPage()]{@link module:types~ResultSet#nextPage} method can be used\n *   to retrieve the following page. In that case, <code>rowCallback()</code> will be again called for each row and\n *   the final callback will be invoked when all rows in the following page has been retrieved.\n * </p>\n * @example <caption>Using per-row callback and arrow functions</caption>\n * client.eachRow(query, params, { prepare: true }, (n, row) => console.log(n, row), err => console.error(err));\n * @example <caption>Overloads</caption>\n * client.eachRow(query, rowCallback);\n * client.eachRow(query, params, rowCallback);\n * client.eachRow(query, params, options, rowCallback);\n * client.eachRow(query, params, rowCallback, callback);\n * client.eachRow(query, params, options, rowCallback, callback);\n */\nClient.prototype.eachRow = function (query, params, options, rowCallback, callback) {\n  if (!callback && rowCallback && typeof options === 'function') {\n    callback = utils.validateFn(rowCallback, 'rowCallback');\n    rowCallback = options;\n  } else {\n    callback = callback || utils.noop;\n    rowCallback = utils.validateFn(rowCallback || options || params, 'rowCallback');\n  }\n\n  params = typeof params !== 'function' ? params : null;\n\n  let execOptions;\n  try {\n    execOptions = DefaultExecutionOptions.create(options, this, rowCallback);\n  }\n  catch (e) {\n    return callback(e);\n  }\n\n  let rowLength = 0;\n\n  const nextPage = () => promiseUtils.toCallback(this._execute(query, params, execOptions), pageCallback);\n\n  function pageCallback (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    // Next requests in case paging (auto or explicit) is used\n    rowLength += result.rowLength;\n\n    if (result.rawPageState !== undefined) {\n      // Use new page state as next request page state\n      execOptions.setPageState(result.rawPageState);\n      if (execOptions.isAutoPage()) {\n        // Issue next request for the next page\n        return nextPage();\n      }\n      // Allows for explicit (manual) paging, in case the caller needs it\n      result.nextPage = nextPage;\n    }\n\n    // Finished auto-paging\n    result.rowLength = rowLength;\n    callback(null, result);\n  }\n\n  promiseUtils.toCallback(this._execute(query, params, execOptions), pageCallback);\n};\n\n/**\n * Executes the query and pushes the rows to the result stream as soon as they received.\n * <p>\n * The stream is a [ReadableStream]{@linkcode https://nodejs.org/api/stream.html#stream_class_stream_readable} object\n *  that emits rows.\n *  It can be piped downstream and provides automatic pause/resume logic (it buffers when not read).\n * </p>\n * <p>\n *   The query can be prepared (recommended) or not depending on {@link QueryOptions}.prepare flag. Retries on multiple\n *   hosts if needed.\n * </p>\n * @param {String} query The query to prepare and execute.\n * @param {Array|Object} [params] Array of parameter values or an associative array (object) containing parameter names\n * as keys and its value\n * @param {QueryOptions} [options] The query options.\n * @param {function} [callback] executes callback(err) after all rows have been received or if there is an error\n * @returns {ResultStream}\n */\nClient.prototype.stream = function (query, params, options, callback) {\n  callback = callback || utils.noop;\n  // NOTE: the nodejs stream maintains yet another internal buffer\n  // we rely on the default stream implementation to keep memory\n  // usage reasonable.\n  const resultStream = new types.ResultStream({ objectMode: 1 });\n  function onFinish(err, result) {\n    if (err) {\n      resultStream.emit('error', err);\n    }\n    if (result && result.nextPage ) {\n      // allows for throttling as per the\n      // default nodejs stream implementation\n      resultStream._valve(function pageValve() {\n        try {\n          result.nextPage();\n        }\n        catch( ex ) {\n          resultStream.emit('error', ex );\n        }\n      });\n      return;\n    }\n    // Explicitly dropping the valve (closure)\n    resultStream._valve(null);\n    resultStream.add(null);\n    callback(err);\n  }\n  let sync = true;\n  this.eachRow(query, params, options, function rowCallback(n, row) {\n    resultStream.add(row);\n  }, function eachRowFinished(err, result) {\n    if (sync) {\n      // Prevent sync callback\n      return setImmediate(function eachRowFinishedImmediate() {\n        onFinish(err, result);\n      });\n    }\n    onFinish(err, result);\n  });\n  sync = false;\n  return resultStream;\n};\n\n/**\n * Executes batch of queries on an available connection to a host.\n * <p>It returns a <code>Promise</code> when a <code>callback</code> is not provided.</p>\n * @param {Array.<string>|Array.<{query, params}>} queries The queries to execute as an Array of strings or as an array\n * of object containing the query and params\n * @param {QueryOptions} [options] The query options.\n * @param {ResultCallback} [callback] Executes callback(err, result) when the batch was executed\n */\nClient.prototype.batch = function (queries, options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n\n  return promiseUtils.optionalCallback(this._batch(queries, options), callback);\n};\n\n/**\n * Async-only version of {@link Client#batch()} .\n * @param {Array.<string>|Array.<{query, params}>}queries\n * @param {QueryOptions} options\n * @returns {Promise<ResultSet>}\n * @private\n */\nClient.prototype._batch = async function (queries, options) {\n  if (!Array.isArray(queries)) {\n    throw new errors.ArgumentError('Queries should be an Array');\n  }\n\n  if (queries.length === 0) {\n    throw new errors.ArgumentError('Queries array should not be empty');\n  }\n\n  await this._connect();\n\n  const execOptions = DefaultExecutionOptions.create(options, this);\n  let queryItems;\n\n  if (execOptions.isPrepared()) {\n    // use keyspace from query options if protocol supports per-query keyspace, otherwise use connection keyspace.\n    const version = this.controlConnection.protocolVersion;\n    const queryKeyspace = types.protocolVersion.supportsKeyspaceInRequest(version) && options.keyspace || this.keyspace;\n    queryItems = await PrepareHandler.getPreparedMultiple(\n      this, execOptions.getLoadBalancingPolicy(), queries, queryKeyspace);\n  } else {\n    queryItems = new Array(queries.length);\n\n    for (let i = 0; i < queries.length; i++) {\n      const item = queries[i];\n      if (!item) {\n        throw new errors.ArgumentError(`Invalid query at index ${i}`);\n      }\n\n      const query = typeof item === 'string' ? item : item.query;\n      if (!query) {\n        throw new errors.ArgumentError(`Invalid query at index ${i}`);\n      }\n\n      queryItems[i] = { query, params: item.params };\n    }\n  }\n\n  const request = await this._createBatchRequest(queryItems, execOptions);\n  return await RequestHandler.send(request, execOptions, this);\n};\n\n/**\n * Gets the host that are replicas of a given token.\n * @param {String} keyspace\n * @param {Buffer} token\n * @returns {Array<Host>}\n */\nClient.prototype.getReplicas = function (keyspace, token) {\n  return this.metadata.getReplicas(keyspace, token);\n};\n\n/**\n * Gets a snapshot containing information on the connections pools held by this Client at the current time.\n * <p>\n *   The information provided in the returned object only represents the state at the moment this method was called and\n *   it's not maintained in sync with the driver metadata.\n * </p>\n * @returns {ClientState} A [ClientState]{@linkcode module:metadata~ClientState} instance.\n */\nClient.prototype.getState = function () {\n  return ClientState.from(this);\n};\n\nClient.prototype.log = utils.log;\n\n/**\n * Closes all connections to all hosts.\n * <p>It returns a <code>Promise</code> when a <code>callback</code> is not provided.</p>\n * @param {Function} [callback] Optional callback to be invoked when finished closing all connections.\n */\nClient.prototype.shutdown = function (callback) {\n  return promiseUtils.optionalCallback(this._shutdown(), callback);\n};\n\n/** @private */\nClient.prototype._shutdown = async function () {\n  this.log('info', 'Shutting down');\n\n  if (!this.hosts || !this.connected) {\n    // not initialized\n    this.connected = false;\n    return;\n  }\n\n  if (this.connecting) {\n    this.log('warning', 'Shutting down while connecting');\n    // wait until finish connecting for easier troubleshooting\n    await promiseUtils.fromEvent(this, 'connected');\n  }\n\n  this.connected = false;\n  this.isShuttingDown = true;\n  const hosts = this.hosts.values();\n\n  this.insightsClient.shutdown();\n\n  // Shutdown the ControlConnection before shutting down the pools\n  this.controlConnection.shutdown();\n  this.options.policies.speculativeExecution.shutdown();\n\n  if (this.options.requestTracker) {\n    this.options.requestTracker.shutdown();\n  }\n\n  // go through all the host and shut down their pools\n  await Promise.all(hosts.map(h => h.shutdown(false)));\n};\n\n/**\n * Waits until that the schema version in all nodes is the same or the waiting time passed.\n * @param {Connection} connection\n * @returns {Promise<boolean>}\n * @ignore\n */\nClient.prototype._waitForSchemaAgreement = async function (connection) {\n  if (this.hosts.length === 1) {\n    return true;\n  }\n\n  const start = process.hrtime();\n  const maxWaitSeconds = this.options.protocolOptions.maxSchemaAgreementWaitSeconds;\n\n  this.log('info', 'Waiting for schema agreement');\n\n  let versionsMatch;\n\n  while (!versionsMatch && process.hrtime(start)[0] < maxWaitSeconds) {\n    versionsMatch = await this.metadata.compareSchemaVersions(connection);\n\n    if (versionsMatch) {\n      this.log('info', 'Schema versions match');\n      break;\n    }\n\n    // Let some time pass before the next check\n    await promiseUtils.delay(500);\n  }\n\n  return versionsMatch;\n};\n\n/**\n * Waits for schema agreements and schedules schema metadata refresh.\n * @param {Connection} connection\n * @param event\n * @returns {Promise<boolean>}\n * @ignore\n * @internal\n */\nClient.prototype.handleSchemaAgreementAndRefresh = async function (connection, event) {\n  let agreement = false;\n\n  try {\n    agreement = await this._waitForSchemaAgreement(connection);\n  } catch (err) {\n    //we issue a warning but we continue with the normal flow\n    this.log('warning', 'There was an error while waiting for the schema agreement between nodes', err);\n  }\n\n  if (!this.options.isMetadataSyncEnabled) {\n    return agreement;\n  }\n\n  // Refresh metadata immediately\n  try {\n    await this.controlConnection.handleSchemaChange(event, true);\n  } catch (err) {\n    this.log('warning', 'There was an error while handling schema change', err);\n  }\n\n  return agreement;\n};\n\n/**\n * Connects and handles the execution of prepared and simple statements.\n * @param {string} query\n * @param {Array} params\n * @param {ExecutionOptions} execOptions\n * @returns {Promise<ResultSet>}\n * @private\n */\nClient.prototype._execute = async function (query, params, execOptions) {\n  const version = this.controlConnection.protocolVersion;\n\n  if (!execOptions.isPrepared() && params && !Array.isArray(params) &&\n    !types.protocolVersion.supportsNamedParameters(version)) {\n    // Only Cassandra 2.1 and above supports named parameters\n    throw new errors.ArgumentError('Named parameters for simple statements are not supported, use prepare flag');\n  }\n\n  let request;\n\n  if (!this.connected) {\n    // Micro optimization to avoid an async execution for a simple check\n    await this._connect();\n  }\n\n  if (!execOptions.isPrepared()) {\n    request = await this._createQueryRequest(query, execOptions, params);\n  } else {\n    const lbp = execOptions.getLoadBalancingPolicy();\n\n    // Use keyspace from query options if protocol supports per-query keyspace, otherwise use connection keyspace.\n    const queryKeyspace = types.protocolVersion.supportsKeyspaceInRequest(version) &&\n      execOptions.getKeyspace() || this.keyspace;\n\n    const { queryId, meta } = await PrepareHandler.getPrepared(this, lbp, query, queryKeyspace);\n    request = await this._createExecuteRequest(query, queryId, execOptions, params, meta);\n  }\n\n  return await RequestHandler.send(request, execOptions, this);\n};\n\n/**\n * Sets the listeners for the nodes.\n * @private\n */\nClient.prototype._setHostListeners = function () {\n  function getHostUpListener(emitter, h) {\n    return () => emitter.emit('hostUp', h);\n  }\n\n  function getHostDownListener(emitter, h) {\n    return () => emitter.emit('hostDown', h);\n  }\n\n  const self = this;\n\n  // Add status listeners when new nodes are added and emit hostAdd\n  this.hosts.on('add', function hostAddedListener(h) {\n    h.on('up', getHostUpListener(self, h));\n    h.on('down', getHostDownListener(self, h));\n    self.emit('hostAdd', h);\n  });\n\n  // Remove all listeners and emit hostRemove\n  this.hosts.on('remove', function hostRemovedListener(h) {\n    h.removeAllListeners();\n    self.emit('hostRemove', h);\n  });\n\n  // Add status listeners for existing hosts\n  this.hosts.forEach(function (h) {\n    h.on('up', getHostUpListener(self, h));\n    h.on('down', getHostDownListener(self, h));\n  });\n};\n\n/**\n * Sets the distance to each host and when warmup is true, creates all connections to local hosts.\n * @returns {Promise}\n * @private\n */\nClient.prototype._warmup = function () {\n  const hosts = this.hosts.values();\n\n  return promiseUtils.times(hosts.length, warmupLimit, async (index) => {\n    const h = hosts[index];\n    const distance = this.profileManager.getDistance(h);\n\n    if (distance === types.distance.ignored) {\n      return;\n    }\n\n    if (this.options.pooling.warmup && distance === types.distance.local) {\n      try {\n        await h.warmupPool(this.keyspace);\n      } catch (err) {\n        // An error while trying to create a connection to one of the hosts.\n        // Warn the user and move on.\n        this.log('warning', `Connection pool to host ${h.address} could not be created: ${err}`, err);\n      }\n    } else {\n      h.initializePool();\n    }\n  });\n};\n\n/**\n * @returns {Encoder}\n * @private\n */\nClient.prototype._getEncoder = function () {\n  const encoder = this.controlConnection.getEncoder();\n  if (!encoder) {\n    throw new errors.DriverInternalError('Encoder is not defined');\n  }\n  return encoder;\n};\n\n/**\n * Returns a BatchRequest instance and fills the routing key information in the provided options.\n * @private\n */\nClient.prototype._createBatchRequest = async function (queryItems, info) {\n  const firstQuery = queryItems[0];\n  if (!firstQuery.meta) {\n    return new requests.BatchRequest(queryItems, info);\n  }\n\n  await this._setRoutingInfo(info, firstQuery.params, firstQuery.meta);\n  return new requests.BatchRequest(queryItems, info);\n};\n\n/**\n * Returns an ExecuteRequest instance and fills the routing key information in the provided options.\n * @private\n */\nClient.prototype._createExecuteRequest = async function(query, queryId, info, params, meta) {\n  params = utils.adaptNamedParamsPrepared(params, meta.columns);\n  await this._setRoutingInfo(info, params, meta);\n  return new requests.ExecuteRequest(query, queryId, params, info, meta);\n};\n\n/**\n * Returns a QueryRequest instance and fills the routing key information in the provided options.\n * @private\n */\nClient.prototype._createQueryRequest = async function (query, execOptions, params) {\n  await this.metadata.adaptUserHints(this.keyspace, execOptions.getHints());\n  const paramsInfo = utils.adaptNamedParamsWithHints(params, execOptions);\n  this._getEncoder().setRoutingKeyFromUser(paramsInfo.params, execOptions, paramsInfo.keyIndexes);\n\n  return new requests.QueryRequest(query, paramsInfo.params, execOptions, paramsInfo.namedParameters);\n};\n\n/**\n * Sets the routing key based on the parameter values or the provided routing key components.\n * @param {ExecutionOptions} execOptions\n * @param {Array} params\n * @param meta\n * @private\n */\nClient.prototype._setRoutingInfo = async function (execOptions, params, meta) {\n  const encoder = this._getEncoder();\n\n  if (!execOptions.getKeyspace() && meta.keyspace) {\n    execOptions.setKeyspace(meta.keyspace);\n  }\n  if (execOptions.getRoutingKey()) {\n    // Routing information provided by the user\n    return encoder.setRoutingKeyFromUser(params, execOptions);\n  }\n  if (Array.isArray(meta.partitionKeys)) {\n    // The partition keys are provided as part of the metadata for modern protocol versions\n    execOptions.setRoutingIndexes(meta.partitionKeys);\n    return encoder.setRoutingKeyFromMeta(meta, params, execOptions);\n  }\n\n  // Older versions of the protocol (v3 and below) don't provide routing information\n  try {\n    const tableInfo = await this.metadata.getTable(meta.keyspace, meta.table);\n\n    if (!tableInfo) {\n      // The schema data is not there, maybe it is being recreated, avoid setting the routing information\n      return;\n    }\n\n    execOptions.setRoutingIndexes(tableInfo.partitionKeys.map(c => meta.columnsByName[c.name]));\n    // Skip parsing metadata next time\n    meta.partitionKeys = execOptions.getRoutingIndexes();\n    encoder.setRoutingKeyFromMeta(meta, params, execOptions);\n  } catch (err) {\n    this.log('warning', util.format('Table %s.%s metadata could not be retrieved', meta.keyspace, meta.table));\n  }\n};\n\n/**\n * Callback used by execution methods.\n * @callback ResultCallback\n * @param {Error} err Error occurred in the execution of the query.\n * @param {ResultSet} [result] Result of the execution of the query.\n */\n\nmodule.exports = Client;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst EventEmitter = require('events');\n\n/**\n * Represents a tree node where the key is composed by 1 or more strings.\n * @ignore\n */\nclass Node extends EventEmitter {\n  /**\n   * Creates a new instance of {@link Node}.\n   * @param {Array<String>} key\n   * @param {Object} value\n   * @param {Array} [edges]\n   */\n  constructor(key, value, edges) {\n    super();\n    this.key = key;\n    this.value = value;\n    this.edges = edges || [];\n  }\n}\n\n/**\n * A radix tree where each node contains a key, a value and edges.\n * @ignore\n */\nclass Tree extends Node {\n  constructor() {\n    super([], null);\n    this.length = 0;\n  }\n\n  /**\n   * Gets the existing item in the tree or creates a new one with the value provided by valueHandler\n   * @param {Iterator} keyIterator\n   * @param {Function} valueHandler\n   * @return {Object}\n   */\n  getOrCreate(keyIterator, valueHandler) {\n    if (typeof keyIterator.next !== 'function') {\n      keyIterator = keyIterator[Symbol.iterator]();\n    }\n    let node = this;\n    let isMatch = false;\n    let item = keyIterator.next();\n    while (true) {\n      let newBranch;\n      // Check node keys at position 1 and above\n      for (let i = 1; i < node.key.length; i++) {\n        if (item.done || node.key[i] !== item.value) {\n          // We should branch out\n          newBranch = this._createBranch(node, i, item.done, valueHandler);\n          break;\n        }\n        item = keyIterator.next();\n      }\n\n      if (item.done) {\n        isMatch = true;\n        break;\n      }\n\n      if (newBranch !== undefined) {\n        break;\n      }\n\n      const edges = node.edges;\n      let nextNode;\n      for (let i = 0; i < edges.length; i++) {\n        const e = edges[i];\n        if (e.key[0] === item.value) {\n          // its a match\n          nextNode = e;\n          item = keyIterator.next();\n          break;\n        }\n      }\n\n      if (nextNode === undefined) {\n        // Current node is the root for a new leaf\n        break;\n      }\n      else {\n        node = nextNode;\n      }\n    }\n\n    if (!isMatch) {\n      // Create using \"node\" as the root\n      const value = valueHandler();\n      node.edges.push(new Node(iteratorToArray(item.value, keyIterator), value));\n      this._onItemAdded();\n      return value;\n    }\n    return node.value;\n  }\n\n  _createBranch(node, index, useNewValue, valueHandler) {\n    const newBranch = new Node(node.key.slice(index), node.value, node.edges);\n    node.key = node.key.slice(0, index);\n    node.edges = [ newBranch ];\n    if (useNewValue) {\n      // The previous node value has moved to a leaf\n      // The node containing the new leaf should use the new value\n      node.value = valueHandler();\n      this._onItemAdded();\n    }\n    else {\n      // Clear the value as it was copied in the branch\n      node.value = null;\n    }\n    return newBranch;\n  }\n\n  _onItemAdded() {\n    this.length++;\n    this.emit('add', this.length);\n  }\n}\n\nfunction iteratorToArray(value, iterator) {\n  const values = [ value ];\n  let item = iterator.next();\n  while (!item.done) {\n    values.push(item.value);\n    item = iterator.next();\n  }\n  return values;\n}\n\nmodule.exports = Tree;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst errors = require('../errors');\n\n/**\n * Represents a CQL query operator, like >=, IN, <, ...\n * @ignore\n */\nclass QueryOperator {\n  /**\n   * Creates a new instance of <code>QueryOperator</code>.\n   * @param {String} key\n   * @param value\n   * @param [hasChildValues]\n   * @param [isInOperator]\n   */\n  constructor(key, value, hasChildValues, isInOperator) {\n    /**\n     * The CQL key representing the operator\n     * @type {string}\n     */\n    this.key = key;\n\n    /**\n     * The value to be used as parameter.\n     */\n    this.value = value;\n\n    /**\n     * Determines whether a query operator can have child values or operators (AND, OR)\n     */\n    this.hasChildValues = hasChildValues;\n\n    /**\n     * Determines whether this instance represents CQL \"IN\" operator.\n     */\n    this.isInOperator = isInOperator;\n  }\n}\n\n/**\n * Represents a CQL assignment operation, like col = col + x.\n * @ignore\n */\nclass QueryAssignment {\n  constructor(sign, value, inverted) {\n    /**\n     * Gets the sign of the assignment operation.\n     */\n    this.sign = sign;\n\n    /**\n     * Gets the value to be assigned.\n     */\n    this.value = value;\n\n    /**\n     * Determines whether the assignment should be inverted (prepends), e.g: col = x + col\n     * @type {boolean}\n     */\n    this.inverted = !!inverted;\n  }\n}\n\n/**\n * Contains functions that represents operators in a query.\n * @alias module:mapping~q\n * @type {Object}\n * @property {function} in_ Represents the CQL operator \"IN\".\n * @property {function} gt Represents the CQL operator greater than \">\".\n * @property {function} gte Represents the CQL operator greater than or equals to \">=\" .\n * @property {function} lt Represents the CQL operator less than \"<\" .\n * @property {function} lte Represents the CQL operator less than or equals to \"<=\" .\n * @property {function} notEq Represents the CQL operator not equals to \"!=\" .\n * @property {function} and When applied to a property, it represents two CQL conditions on the same column separated\n * by the logical AND operator, e.g: \"col1 >= x col < y\"\n * @property {function} incr Represents the CQL increment assignment used for counters, e.g: \"col = col + x\"\n * @property {function} decr Represents the CQL decrement assignment used for counters, e.g: \"col = col - x\"\n * @property {function} append Represents the CQL append assignment used for collections, e.g: \"col = col + x\"\n * @property {function} prepend Represents the CQL prepend assignment used for lists, e.g: \"col = x + col\"\n * @property {function} remove Represents the CQL remove assignment used for collections, e.g: \"col = col - x\"\n */\nconst q = {\n  in_: function in_(arr) {\n    if (!Array.isArray(arr)) {\n      throw new errors.ArgumentError('IN operator supports only Array values');\n    }\n    return new QueryOperator('IN', arr, false, true);\n  },\n\n  gt: function gt(value) {\n    return new QueryOperator('>', value);\n  },\n\n  gte: function gte(value) {\n    return new QueryOperator('>=', value);\n  },\n\n  lt: function lt(value) {\n    return new QueryOperator('<', value);\n  },\n\n  lte: function lte(value) {\n    return new QueryOperator('<=', value);\n  },\n\n  notEq: function notEq(value) {\n    return new QueryOperator('!=', value);\n  },\n\n  and: function (condition1, condition2) {\n    return new QueryOperator('AND', [ condition1, condition2 ], true);\n  },\n\n  incr: function incr(value) {\n    return new QueryAssignment('+', value);\n  },\n\n  decr: function decr(value) {\n    return new QueryAssignment('-', value);\n  },\n\n  append: function append(value) {\n    return new QueryAssignment('+', value);\n  },\n\n  prepend: function prepend(value) {\n    return new QueryAssignment('+', value, true);\n  },\n\n  remove: function remove(value) {\n    return new QueryAssignment('-', value);\n  }\n};\n\nexports.q = q;\nexports.QueryAssignment = QueryAssignment;\nexports.QueryOperator = QueryOperator;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst qModule = require('./q');\nconst QueryOperator = qModule.QueryOperator;\nconst QueryAssignment = qModule.QueryAssignment;\n\n/**\n * Provides utility methods for obtaining a caching keys based on the specifics of the Mapper methods.\n * @ignore\n */\nclass Cache {\n  /**\n   * Gets an iterator of keys to uniquely identify a document shape for a select query.\n   * @param {Array<String>} docKeys\n   * @param {Object} doc\n   * @param {{fields, limit, orderBy}} docInfo\n   * @returns {Iterator}\n   */\n  static *getSelectKey(docKeys, doc, docInfo) {\n    yield* Cache._yieldKeyAndOperators(docKeys, doc);\n\n    yield* Cache._getSelectDocInfo(docInfo);\n  }\n  /**\n   * Gets an iterator of keys to uniquely identify a shape for a select all query.\n   * @param {{fields, limit, orderBy}} docInfo\n   * @returns {Iterator}\n   */\n  static *getSelectAllKey(docInfo) {\n    yield 'root';\n\n    yield* Cache._getSelectDocInfo(docInfo);\n  }\n\n  /**\n   * Gets the parts of the key for a select query related to the docInfo.\n   * @param {{fields, limit, orderBy}} docInfo\n   * @private\n   */\n  static *_getSelectDocInfo(docInfo) {\n    if (docInfo) {\n      if (docInfo.fields && docInfo.fields.length > 0) {\n        // Use a separator from properties\n        yield '|f|';\n        yield* docInfo.fields;\n      }\n\n      if (typeof docInfo.limit === 'number') {\n        yield '|l|';\n      }\n\n      if (docInfo.orderBy) {\n        yield '|o|';\n\n        // orderBy is uses property names as keys and 'asc'/'desc' as values\n        const keys = Object.keys(docInfo.orderBy);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          yield key;\n          yield docInfo.orderBy[key];\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets an iterator of keys to uniquely identify a document shape for an insert query.\n   * @param {Array<String>} docKeys\n   * @param {{ifNotExists, ttl, fields}} docInfo\n   * @returns {Iterator}\n   */\n  static *getInsertKey(docKeys, docInfo) {\n    // No operator supported on INSERT values\n    yield* docKeys;\n\n    if (docInfo) {\n      if (docInfo.fields && docInfo.fields.length > 0) {\n        // Use a separator from properties\n        yield '|f|';\n        yield* docInfo.fields;\n      }\n\n      if (typeof docInfo.ttl === 'number') {\n        yield '|t|';\n      }\n\n      if (docInfo.ifNotExists) {\n        yield '|e|';\n      }\n    }\n  }\n\n  /**\n   * Gets an iterator of keys to uniquely identify a document shape for an UPDATE query.\n   * @param {Array<String>} docKeys\n   * @param {Object} doc\n   * @param {{ifExists, when, ttl, fields}} docInfo\n   */\n  static *getUpdateKey(docKeys, doc, docInfo) {\n    yield* Cache._yieldKeyAndAllQs(docKeys, doc);\n\n    if (docInfo) {\n      if (docInfo.fields && docInfo.fields.length > 0) {\n        // Use a separator from properties\n        yield '|f|';\n        yield* docInfo.fields;\n      }\n\n      if (typeof docInfo.ttl === 'number') {\n        yield '|t|';\n      }\n\n      if (docInfo.ifExists) {\n        yield '|e|';\n      }\n\n      if (docInfo.when) {\n        yield* Cache._yieldKeyAndOperators(Object.keys(docInfo.when), docInfo.when);\n      }\n    }\n  }\n\n  /**\n   * Gets an iterator of keys to uniquely identify a document shape for a DELETE query.\n   * @param {Array<String>} docKeys\n   * @param {Object} doc\n   * @param {{ifExists, when, fields, deleteOnlyColumns}} docInfo\n   * @returns {Iterator}\n   */\n  static *getRemoveKey(docKeys, doc, docInfo) {\n    yield* Cache._yieldKeyAndOperators(docKeys, doc);\n\n    if (docInfo) {\n      if (docInfo.fields && docInfo.fields.length > 0) {\n        // Use a separator from properties\n        yield '|f|';\n        yield* docInfo.fields;\n      }\n\n      if (docInfo.ifExists) {\n        yield '|e|';\n      }\n\n      if (docInfo.deleteOnlyColumns) {\n        yield '|dc|';\n      }\n\n      if (docInfo.when) {\n        yield* Cache._yieldKeyAndOperators(Object.keys(docInfo.when), docInfo.when);\n      }\n    }\n  }\n\n  static *_yieldKeyAndOperators(keys, obj) {\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      yield key;\n      yield* Cache._yieldOperators(obj[key]);\n    }\n  }\n\n  static *_yieldOperators(value) {\n    if (value !== null && value !== undefined && value instanceof QueryOperator) {\n      yield value.key;\n      if (value.hasChildValues) {\n        yield* Cache._yieldOperators(value.value[0]);\n        yield '|/|';\n        yield* Cache._yieldOperators(value.value[1]);\n      }\n    }\n  }\n\n  static *_yieldKeyAndAllQs(keys, obj) {\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      yield key;\n      const value = obj[key];\n      if (value !== null && value !== undefined) {\n        if (value instanceof QueryOperator) {\n          yield* Cache._yieldOperators(value);\n        }\n        else if (value instanceof QueryAssignment) {\n          yield value.sign;\n          yield value.inverted;\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Cache;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst Cache = require('./cache');\n\n/**\n * Represents a query or a set of queries used to perform a mutation in a batch.\n * @alias module:mapping~ModelBatchItem\n */\nclass ModelBatchItem {\n  /**\n   * @param {Object} doc\n   * @param {Object} docInfo\n   * @param {MappingHandler} handler\n   * @param {Tree} cache\n   */\n  constructor(doc, docInfo, handler, cache) {\n    this.doc = doc;\n    this.docInfo = docInfo;\n    this.handler = handler;\n    this.cache = cache;\n  }\n\n  /**\n   * @ignore\n   * @returns <Promise<Array>>\n   */\n  getQueries() {\n    const docKeys = Object.keys(this.doc);\n    const cacheItem = this.cache.getOrCreate(this.getCacheKey(docKeys), () => ({ queries: null }));\n\n    if (cacheItem.queries === null) {\n      cacheItem.queries = this.createQueries(docKeys);\n    }\n\n    return cacheItem.queries;\n  }\n\n  /**\n   * Gets the cache key for this item.\n   * @abstract\n   * @param {Array} docKeys\n   * @returns {Iterator}\n   */\n  getCacheKey(docKeys) {\n    throw new Error('getCacheKey must be implemented');\n  }\n\n  /**\n   * Gets the Promise to create the queries.\n   * @abstract\n   * @param {Array} docKeys\n   * @returns {Promise<Array>}\n   */\n  createQueries(docKeys) {\n    throw new Error('getCacheKey must be implemented');\n  }\n\n  /**\n   * Pushes the queries and parameters represented by this instance to the provided array.\n   * @internal\n   * @ignore\n   * @param {Array} arr\n   * @return {Promise<{isIdempotent, isCounter}>}\n   */\n  pushQueries(arr) {\n    let isIdempotent = true;\n    let isCounter;\n\n    return this.getQueries().then(queries => {\n      queries.forEach(q => {\n        // It's idempotent if all the queries contained are idempotent\n        isIdempotent = isIdempotent && q.isIdempotent;\n\n        // Either all queries are counter mutation or we let it fail at server level\n        isCounter = q.isCounter;\n\n        arr.push({ query: q.query, params: q.paramsGetter(this.doc, this.docInfo, this.getMappingInfo()) });\n      });\n\n      return { isIdempotent, isCounter };\n    });\n  }\n\n  /**\n   * Gets the mapping information for this batch item.\n   * @internal\n   * @ignore\n   */\n  getMappingInfo() {\n    return this.handler.info;\n  }\n}\n\n/**\n * Represents a single or a set of INSERT queries in a batch.\n * @ignore\n * @internal\n */\nclass InsertModelBatchItem extends ModelBatchItem {\n  /**\n   * @param {Object} doc\n   * @param {Object} docInfo\n   * @param {MappingHandler} handler\n   * @param {Tree} cache\n   */\n  constructor(doc, docInfo, handler, cache) {\n    super(doc, docInfo, handler, cache);\n  }\n\n  /** @override */\n  getCacheKey(docKeys) {\n    return Cache.getInsertKey(docKeys, this.docInfo);\n  }\n\n  /** @override */\n  createQueries(docKeys) {\n    return this.handler.createInsertQueries(docKeys, this.doc, this.docInfo);\n  }\n}\n\n/**\n * Represents a single or a set of UPDATE queries in a batch.\n * @ignore\n * @internal\n */\nclass UpdateModelBatchItem extends ModelBatchItem {\n  /**\n   * @param {Object} doc\n   * @param {Object} docInfo\n   * @param {MappingHandler} handler\n   * @param {Tree} cache\n   */\n  constructor(doc, docInfo, handler, cache) {\n    super(doc, docInfo, handler, cache);\n  }\n\n  /** @override */\n  getCacheKey(docKeys) {\n    return Cache.getUpdateKey(docKeys, this.doc, this.docInfo);\n  }\n\n  /** @override */\n  createQueries(docKeys) {\n    return this.handler.createUpdateQueries(docKeys, this.doc, this.docInfo);\n  }\n}\n\n/**\n * Represents a single or a set of DELETE queries in a batch.\n * @ignore\n * @internal\n */\nclass RemoveModelBatchItem extends ModelBatchItem {\n  /**\n   * @param {Object} doc\n   * @param {Object} docInfo\n   * @param {MappingHandler} handler\n   * @param {Tree} cache\n   */\n  constructor(doc, docInfo, handler, cache) {\n    super(doc, docInfo, handler, cache);\n  }\n\n  /** @override */\n  getCacheKey(docKeys) {\n    return Cache.getRemoveKey(docKeys, this.doc, this.docInfo);\n  }\n\n  /** @override */\n  createQueries(docKeys) {\n    return this.handler.createDeleteQueries(docKeys, this.doc, this.docInfo);\n  }\n}\n\nmodule.exports = { ModelBatchItem, InsertModelBatchItem, UpdateModelBatchItem, RemoveModelBatchItem };","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst Tree = require('./tree');\nconst moduleBatchItemModule = require('./model-batch-item');\nconst InsertModelBatchItem = moduleBatchItemModule.InsertModelBatchItem;\nconst UpdateModelBatchItem = moduleBatchItemModule.UpdateModelBatchItem;\nconst RemoveModelBatchItem = moduleBatchItemModule.RemoveModelBatchItem;\n\n/**\n * Provides utility methods to group multiple mutations on a single batch.\n * @alias module:mapping~ModelBatchMapper\n */\nclass ModelBatchMapper {\n  /**\n   * Creates a new instance of model batch mapper.\n   * <p>\n   *   An instance of this class is exposed as a singleton in the <code>batching</code> field of the\n   *   [ModelMapper]{@link module:mapping~ModelMapper}. Note that new instances should not be create with this\n   *   constructor.\n   * </p>\n   * @param {MappingHandler} handler\n   * @ignore\n   */\n  constructor(handler) {\n    this._handler = handler;\n    this._cache = {\n      insert: new Tree(),\n      update: new Tree(),\n      remove: new Tree()\n    };\n  }\n\n  /**\n   * Gets a [ModelBatchItem]{@link module:mapping~ModelBatchItem} containing the queries for the INSERT mutation to be\n   * used in a batch execution.\n   * @param {Object} doc An object containing the properties to insert.\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * INSERT cql statements generated. If specified, it must include the columns to insert and the primary keys.\n   * @param {Number} [docInfo.ttl] Specifies an optional Time To Live (in seconds) for the inserted values.\n   * @param {Boolean} [docInfo.ifNotExists] When set, it only inserts if the row does not exist prior to the insertion.\n   * <p>Please note that using IF NOT EXISTS will incur a non negligible performance cost so this should be used\n   * sparingly.</p>\n   * @returns {ModelBatchItem} A [ModelBatchItem]{@link module:mapping~ModelBatchItem} instance representing a query\n   * or a set of queries to be included in a batch.\n   */\n  insert(doc, docInfo) {\n    return new InsertModelBatchItem(doc, docInfo, this._handler, this._cache.insert);\n  }\n\n  /**\n   * Gets a [ModelBatchItem]{@link module:mapping~ModelBatchItem} containing the queries for the UPDATE mutation to be\n   * used in a batch execution.\n   * @param {Object} doc An object containing the properties to update.\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * UPDATE cql statements generated. If specified, it must include the columns to update and the primary keys.\n   * @param {Number} [docInfo.ttl] Specifies an optional Time To Live (in seconds) for the inserted values.\n   * @param {Boolean} [docInfo.ifExists] When set, it only updates if the row already exists on the server.\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Object} [docInfo.when] A document that act as the condition that has to be met for the UPDATE to occur.\n   * Use this property only in the case you want to specify a conditional clause for lightweight transactions (CAS).\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @returns {ModelBatchItem} A [ModelBatchItem]{@link module:mapping~ModelBatchItem} instance representing a query\n   * or a set of queries to be included in a batch.\n   */\n  update(doc, docInfo) {\n    return new UpdateModelBatchItem(doc, docInfo, this._handler, this._cache.update);\n  }\n\n  /**\n   * Gets a [ModelBatchItem]{@link module:mapping~ModelBatchItem}  containing the queries for the DELETE mutation to be\n   * used in a batch execution.\n   * @param {Object} doc A document containing the primary keys values of the document to delete.\n   * @param {Object} [docInfo] An object containing the additional doc information.\n   * @param {Object} [docInfo.when] A document that act as the condition that has to be met for the DELETE to occur.\n   * Use this property only in the case you want to specify a conditional clause for lightweight transactions (CAS).\n   * When the CQL query is generated, this would be used to generate the `IF` clause.\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Boolean} [docInfo.ifExists] When set, it only issues the DELETE command if the row already exists on the\n   * server.\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * DELETE cql statement generated. If specified, it must include the columns to delete and the primary keys.\n   * @param {Boolean} [docInfo.deleteOnlyColumns] Determines that, when more document properties are specified\n   * besides the primary keys, the generated DELETE statement should be used to delete some column values but leave\n   * the row. When this is enabled and more properties are specified, a DELETE statement will have the following form:\n   * \"DELETE col1, col2 FROM table1 WHERE pk1 = ? AND pk2 = ?\"\n   * @returns {ModelBatchItem} A [ModelBatchItem]{@link module:mapping~ModelBatchItem} instance representing a query\n   * or a set of queries to be included in a batch.\n   */\n  remove(doc, docInfo) {\n    return new RemoveModelBatchItem(doc, docInfo, this._handler, this._cache.update);\n  }\n}\n\nmodule.exports = ModelBatchMapper;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst ModelBatchMapper = require('./model-batch-mapper');\n\n/**\n * Represents an object mapper for a specific model.\n * @alias module:mapping~ModelMapper\n */\nclass ModelMapper {\n  constructor(name, handler) {\n    /**\n     * Gets the name identifier of the model.\n     * @type {String}\n     */\n    this.name = name;\n    this._handler = handler;\n    /**\n     * Gets a [ModelBatchMapper]{@link module:mapping~ModelBatchMapper} instance containing utility methods to group\n     * multiple doc mutations in a single batch.\n     * @type {ModelBatchMapper}\n     */\n    this.batching = new ModelBatchMapper(this._handler);\n  }\n\n  /**\n   * Gets the first document matching the provided filter or null when not found.\n   * <p>\n   *   Note that all partition and clustering keys must be defined in order to use this method.\n   * </p>\n   * @param {Object} doc The object containing the properties that map to the primary keys.\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * SELECT cql statement generated, in order to restrict the amount of columns retrieved.\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @return {Promise<Object>}\n   * @example <caption>Get a video by id</caption>\n   * videoMapper.get({ id })\n   * @example <caption>Get a video by id, selecting specific columns</caption>\n   * videoMapper.get({ id }, fields: ['name', 'description'])\n   */\n  get(doc, docInfo, executionOptions) {\n    if (executionOptions === undefined && typeof docInfo === 'string') {\n      executionOptions = docInfo;\n      docInfo = null;\n    }\n\n    return this._handler.getSelectExecutor(doc, docInfo, true)\n      .then(executor => executor(doc, docInfo, executionOptions))\n      .then(result => result.first());\n  }\n\n  /**\n   * Executes a SELECT query based on the filter and returns the result as an iterable of documents.\n   * @param {Object} doc An object containing the properties that map to the primary keys to filter.\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * SELECT cql statement generated, in order to restrict the amount of columns retrieved.\n   * @param {Object<String, String>} [docInfo.orderBy] An associative array containing the column names as key and\n   * the order string (asc or desc) as value used to set the order of the results server-side.\n   * @param {Number} [docInfo.limit] Restricts the result of the query to a maximum number of rows on the\n   * server.\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Number} [executionOptions.fetchSize] The amount of rows to retrieve per page.\n   * @param {Number} [executionOptions.pageState] A Buffer instance or a string token representing the paging state.\n   * <p>When provided, the query will be executed starting from a given paging state.</p>\n   * @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n   * @example <caption>Get user's videos</caption>\n   * const result = await videoMapper.find({ userId });\n   * for (let video of result) {\n   *   console.log(video.name);\n   * }\n   * @example <caption>Get user's videos from a certain date</caption>\n   * videoMapper.find({ userId, addedDate: q.gte(date)});\n   * @example <caption>Get user's videos in reverse order</caption>\n   * videoMapper.find({ userId }, { orderBy: { addedDate: 'desc' }});\n   */\n  find(doc, docInfo, executionOptions) {\n    if (executionOptions === undefined && typeof docInfo === 'string') {\n      executionOptions = docInfo;\n      docInfo = null;\n    }\n\n    return this._handler.getSelectExecutor(doc, docInfo, false)\n      .then(executor => executor(doc, docInfo, executionOptions));\n  }\n\n  /**\n   * Executes a SELECT query without a filter and returns the result as an iterable of documents.\n   * <p>\n   *   This is only recommended to be used for tables with a limited amount of results. Otherwise, breaking up the\n   *   token ranges on the client side should be used.\n   * </p>\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * SELECT cql statement generated, in order to restrict the amount of columns retrieved.\n   * @param {Object<String, String>} [docInfo.orderBy] An associative array containing the column names as key and\n   * the order string (asc or desc) as value used to set the order of the results server-side.\n   * @param {Number} [docInfo.limit] Restricts the result of the query to a maximum number of rows on the\n   * server.\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Number} [executionOptions.fetchSize] The mount of rows to retrieve per page.\n   * @param {Number} [executionOptions.pageState] A Buffer instance or a string token representing the paging state.\n   * <p>When provided, the query will be executed starting from a given paging state.</p>\n   * @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n   */\n  findAll(docInfo, executionOptions) {\n    if (executionOptions === undefined && typeof docInfo === 'string') {\n      executionOptions = docInfo;\n      docInfo = null;\n    }\n\n    const executor = this._handler.getSelectAllExecutor(docInfo);\n    return executor(docInfo, executionOptions);\n  }\n\n  /**\n   * Inserts a document.\n   * <p>\n   *   When the model is mapped to multiple tables, it will insert a row in each table when all the primary keys\n   *   are specified.\n   * </p>\n   * @param {Object} doc An object containing the properties to insert.\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * INSERT cql statements generated. If specified, it must include the columns to insert and the primary keys.\n   * @param {Number} [docInfo.ttl] Specifies an optional Time To Live (in seconds) for the inserted values.\n   * @param {Boolean} [docInfo.ifNotExists] When set, it only inserts if the row does not exist prior to the insertion.\n   * <p>Please note that using IF NOT EXISTS will incur a non negligible performance cost so this should be used\n   * sparingly.</p>\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times without\n   * changing the result beyond the initial application.\n   * <p>\n   *   By default all generated INSERT statements are considered idempotent, except in the case of lightweight\n   *   transactions. Lightweight transactions at client level with transparent retries can\n   *   break linearizability. If that is not an issue for your application, you can manually set this field to true.\n   * </p>\n   * @param {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the\n   * unix epoch (00:00:00, January 1st, 1970).\n   * <p>When provided, this will replace the client generated and the server side assigned timestamp.</p>\n   * @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n   * @example <caption>Insert a video</caption>\n   * videoMapper.insert({ id, name });\n   */\n  insert(doc, docInfo, executionOptions) {\n    if (executionOptions === undefined && typeof docInfo === 'string') {\n      executionOptions = docInfo;\n      docInfo = null;\n    }\n\n    return this._handler.getInsertExecutor(doc, docInfo)\n      .then(executor => executor(doc, docInfo, executionOptions));\n  }\n\n  /**\n   * Updates a document.\n   * <p>\n   *   When the model is mapped to multiple tables, it will update a row in each table when all the primary keys\n   *   are specified.\n   * </p>\n   * @param {Object} doc An object containing the properties to update.\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * UPDATE cql statements generated. If specified, it must include the columns to update and the primary keys.\n   * @param {Number} [docInfo.ttl] Specifies an optional Time To Live (in seconds) for the inserted values.\n   * @param {Boolean} [docInfo.ifExists] When set, it only updates if the row already exists on the server.\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Object} [docInfo.when] A document that act as the condition that has to be met for the UPDATE to occur.\n   * Use this property only in the case you want to specify a conditional clause for lightweight transactions (CAS).\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times without\n   * changing the result beyond the initial application.\n   * <p>\n   *   The mapper uses the generated queries to determine the default value. When an UPDATE is generated with a\n   *   counter column or appending/prepending to a list column, the execution is marked as not idempotent.\n   * </p>\n   * <p>\n   *   Additionally, the mapper uses the safest approach for queries with lightweight transactions (Compare and\n   *   Set) by considering them as non-idempotent. Lightweight transactions at client level with transparent retries can\n   *   break linearizability. If that is not an issue for your application, you can manually set this field to true.\n   * </p>\n   * @param {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the\n   * unix epoch (00:00:00, January 1st, 1970).\n   * <p>When provided, this will replace the client generated and the server side assigned timestamp.</p>\n   * @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n   * @example <caption>Update the name of a video</caption>\n   * videoMapper.update({ id, name });\n   */\n  update(doc, docInfo, executionOptions) {\n    if (executionOptions === undefined && typeof docInfo === 'string') {\n      executionOptions = docInfo;\n      docInfo = null;\n    }\n\n    return this._handler.getUpdateExecutor(doc, docInfo)\n      .then(executor => executor(doc, docInfo, executionOptions));\n  }\n\n  /**\n   * Deletes a document.\n   * @param {Object} doc A document containing the primary keys values of the document to delete.\n   * @param {Object} [docInfo] An object containing the additional doc information.\n   * @param {Object} [docInfo.when] A document that act as the condition that has to be met for the DELETE to occur.\n   * Use this property only in the case you want to specify a conditional clause for lightweight transactions (CAS).\n   * When the CQL query is generated, this would be used to generate the `IF` clause.\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Boolean} [docInfo.ifExists] When set, it only issues the DELETE command if the row already exists on the\n   * server.\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * DELETE cql statement generated. If specified, it must include the columns to delete and the primary keys.\n   * @param {Boolean} [docInfo.deleteOnlyColumns] Determines that, when more document properties are specified\n   * besides the primary keys, the generated DELETE statement should be used to delete some column values but leave\n   * the row. When this is enabled and more properties are specified, a DELETE statement will have the following form:\n   * \"DELETE col1, col2 FROM table1 WHERE pk1 = ? AND pk2 = ?\"\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times without\n   * changing the result beyond the initial application.\n   * <p>\n   *   By default all generated DELETE statements are considered idempotent, except in the case of lightweight\n   *   transactions. Lightweight transactions at client level with transparent retries can\n   *   break linearizability. If that is not an issue for your application, you can manually set this field to true.\n   * </p>\n   * @param {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the\n   * unix epoch (00:00:00, January 1st, 1970).\n   * <p>When provided, this will replace the client generated and the server side assigned timestamp.</p>\n   * @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n   * @example <caption>Delete a video</caption>\n   * videoMapper.remove({ id });\n   */\n  remove(doc, docInfo, executionOptions) {\n    if (executionOptions === undefined && typeof docInfo === 'string') {\n      executionOptions = docInfo;\n      docInfo = null;\n    }\n\n    return this._handler.getDeleteExecutor(doc, docInfo)\n      .then(executor => executor(doc, docInfo, executionOptions));\n  }\n\n  /**\n   * Uses the provided query and param getter function to execute a query and map the results.\n   * Gets a function that takes the document, executes the query and returns the mapped results.\n   * @param {String} query The query to execute.\n   * @param {Function} paramsHandler The function to execute to extract the parameters of a document.\n   * @param {Object|String} [executionOptions] When provided, the options for all executions generated with this\n   * method will use the provided options and it will not consider the executionOptions per call.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Number} [executionOptions.fetchSize] Amount of rows to retrieve per page.\n   * @param {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times\n   * without changing the result beyond the initial application.\n   * @param {Number} [executionOptions.pageState] Buffer or string token representing the paging state.\n   * <p>When provided, the query will be executed starting from a given paging state.</p>\n   * @param {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the\n   * unix epoch (00:00:00, January 1st, 1970).\n   * <p>When provided, this will replace the client generated and the server side assigned timestamp.</p>\n   * @return {Function} Returns a function that takes the document and execution options as parameters and returns a\n   * Promise the resolves to a [Result]{@link module:mapping~Result} instance.\n   */\n  mapWithQuery(query, paramsHandler, executionOptions) {\n    return this._handler.getExecutorFromQuery(query, paramsHandler, executionOptions);\n  }\n}\n\nmodule.exports = ModelMapper;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst vm = require('vm');\nconst qModule = require('./q');\nconst QueryOperator = qModule.QueryOperator;\nconst QueryAssignment = qModule.QueryAssignment;\nconst types = require('../types');\nconst dataTypes = types.dataTypes;\n\nconst vmFileName = 'gen-param-getter.js';\n\n/**\n * Provides methods to generate a query and parameter handlers.\n * @ignore\n */\nclass QueryGenerator {\n  /**\n   * Gets the SELECT query given the doc.\n   * @param {String} tableName\n   * @param {String} keyspace\n   * @param {Array} propertiesInfo\n   * @param {Array} fieldsInfo\n   * @param {Array} orderByColumns\n   * @param {Number|undefined} limit\n   * @return {string}\n   */\n  static getSelect(tableName, keyspace, propertiesInfo, fieldsInfo, orderByColumns, limit) {\n    let query = 'SELECT ';\n    query += fieldsInfo.length > 0 ? fieldsInfo.map(p => p.columnName).join(', ') : '*';\n    query += ` FROM ${keyspace}.${tableName}`;\n\n    if (propertiesInfo.length > 0) {\n      query += ' WHERE ';\n      query += QueryGenerator._getConditionWithOperators(propertiesInfo);\n    }\n\n    if (orderByColumns.length > 0) {\n      query += ' ORDER BY ';\n      query += orderByColumns.map(order => order[0] + ' ' + order[1]).join(', ');\n    }\n\n    if (typeof limit === 'number') {\n      query += ' LIMIT ?';\n    }\n\n    return query;\n  }\n\n  static selectParamsGetter(propertiesInfo, limit) {\n    let scriptText = '(function getParametersSelect(doc, docInfo, mappingInfo) {\\n';\n    scriptText += '  return [';\n\n    scriptText += QueryGenerator._valueGetterExpression(propertiesInfo);\n\n    if (typeof limit === 'number') {\n      if (propertiesInfo.length > 0) {\n        scriptText += ', ';\n      }\n      scriptText += `docInfo['limit']`;\n    }\n\n    // Finish return statement\n    scriptText += '];\\n})';\n\n    const script = new vm.Script(scriptText, { filename: vmFileName });\n    return script.runInThisContext();\n  }\n\n  /**\n   * Gets the INSERT query and function to obtain the parameters, given the doc.\n   * @param {TableMetadata} table\n   * @param {String} keyspace\n   * @param {Array} propertiesInfo\n   * @param {Object} docInfo\n   * @param {Boolean|undefined} ifNotExists\n   * @return {{query: String, paramsGetter: Function, isIdempotent: Boolean}}\n   */\n  static getInsert(table, keyspace, propertiesInfo, docInfo, ifNotExists) {\n    const ttl = docInfo && docInfo.ttl;\n\n    // Not all columns are contained in the table\n    const filteredPropertiesInfo = propertiesInfo\n      .filter(pInfo => table.columnsByName[pInfo.columnName] !== undefined);\n\n    return ({\n      query: QueryGenerator._getInsertQuery(table.name, keyspace, filteredPropertiesInfo, ifNotExists, ttl),\n      paramsGetter: QueryGenerator._insertParamsGetter(filteredPropertiesInfo, docInfo),\n      isIdempotent: !ifNotExists\n    });\n  }\n\n  /**\n   * Gets the query for an insert statement.\n   * @param {String} tableName\n   * @param {String} keyspace\n   * @param {Array} propertiesInfo\n   * @param {Boolean} ifNotExists\n   * @param {Number|undefined} ttl\n   * @return {String}\n   */\n  static _getInsertQuery(tableName, keyspace, propertiesInfo, ifNotExists, ttl) {\n    let query = `INSERT INTO ${keyspace}.${tableName} (`;\n    query += propertiesInfo.map(pInfo => pInfo.columnName).join(', ');\n    query += ') VALUES (';\n    query += propertiesInfo.map(() => '?').join(', ');\n    query += ')';\n\n    if (ifNotExists === true) {\n      query += ' IF NOT EXISTS';\n    }\n\n    if (typeof ttl === 'number') {\n      query += ' USING TTL ?';\n    }\n    return query;\n  }\n\n  static _insertParamsGetter(propertiesInfo, docInfo) {\n    let scriptText = '(function getParametersInsert(doc, docInfo, mappingInfo) {\\n';\n    scriptText += '  return [';\n\n    scriptText += QueryGenerator._valueGetterExpression(propertiesInfo);\n\n    if (docInfo && typeof docInfo.ttl === 'number') {\n      scriptText += `, docInfo['ttl']`;\n    }\n\n    // Finish return statement\n    scriptText += '];\\n})';\n\n    const script = new vm.Script(scriptText, { filename: vmFileName });\n    return script.runInThisContext();\n  }\n\n  /**\n   * Gets the UPDATE query and function to obtain the parameters, given the doc.\n   * @param {TableMetadata} table\n   * @param {String} keyspace\n   * @param {Array} propertiesInfo\n   * @param {Object} docInfo\n   * @param {Array} when\n   * @param {Boolean|undefined} ifExists\n   * @return {{query: String, paramsGetter: Function, isIdempotent: Boolean, isCounter}}\n   */\n  static getUpdate(table, keyspace, propertiesInfo, docInfo, when, ifExists) {\n    const ttl = docInfo && docInfo.ttl;\n    const primaryKeys = new Set(table.partitionKeys.concat(table.clusteringKeys).map(c => c.name));\n    let isIdempotent = true;\n    let isCounter = false;\n\n    // Not all columns are contained in the table\n    const filteredPropertiesInfo = propertiesInfo.filter(pInfo => {\n      const column = table.columnsByName[pInfo.columnName];\n      if (column === undefined) {\n        return false;\n      }\n\n      if (column.type.code === dataTypes.list && pInfo.value instanceof QueryAssignment) {\n        // Its not idempotent when list append/prepend\n        isIdempotent = false;\n      } else if (column.type.code === dataTypes.counter) {\n        // Any update on a counter table is not idempotent\n        isIdempotent = false;\n        isCounter = true;\n      }\n\n      return true;\n    });\n\n    return {\n      query: QueryGenerator._getUpdateQuery(\n        table.name, keyspace, primaryKeys, filteredPropertiesInfo, when, ifExists, ttl),\n      isIdempotent: isIdempotent && when.length === 0 && !ifExists,\n      paramsGetter: QueryGenerator._updateParamsGetter(primaryKeys, filteredPropertiesInfo, when, ttl),\n      isCounter\n    };\n  }\n\n  /**\n   * Gets the query for an UPDATE statement.\n   * @param {String} tableName\n   * @param {String} keyspace\n   * @param {Set} primaryKeys\n   * @param {Array} propertiesInfo\n   * @param {Object} when\n   * @param {Boolean} ifExists\n   * @param {Number|undefined} ttl\n   */\n  static _getUpdateQuery(tableName, keyspace, primaryKeys, propertiesInfo, when, ifExists, ttl) {\n    let query = `UPDATE ${keyspace}.${tableName} `;\n\n    if (typeof ttl === 'number') {\n      query += 'USING TTL ? ';\n    }\n\n    query += 'SET ';\n\n    query += propertiesInfo\n      .filter(p => !primaryKeys.has(p.columnName))\n      .map(p => {\n        if (p.value instanceof QueryAssignment) {\n          if (p.value.inverted) {\n            // e.g: prepend \"col1 = ? + col1\"\n            return `${p.columnName} = ? ${p.value.sign} ${p.columnName}`;\n          }\n          // e.g: increment \"col1 = col1 + ?\"\n          return `${p.columnName} = ${p.columnName} ${p.value.sign} ?`;\n        }\n\n        return p.columnName + ' = ?';\n      })\n      .join(', ');\n\n    query += ' WHERE ';\n    query += propertiesInfo.filter(p => primaryKeys.has(p.columnName)).map(p => p.columnName + ' = ?').join(' AND ');\n\n    if (ifExists === true) {\n      query += ' IF EXISTS';\n    }\n    else if (when.length > 0) {\n      query += ' IF ' + QueryGenerator._getConditionWithOperators(when);\n    }\n\n    return query;\n  }\n\n  /**\n   * Returns a function to obtain the parameter values from a doc for an UPDATE statement.\n   * @param {Set} primaryKeys\n   * @param {Array} propertiesInfo\n   * @param {Array} when\n   * @param {Number|undefined} ttl\n   * @returns {Function}\n   */\n  static _updateParamsGetter(primaryKeys, propertiesInfo, when, ttl) {\n    let scriptText = '(function getParametersUpdate(doc, docInfo, mappingInfo) {\\n';\n    scriptText += '  return [';\n\n    if (typeof ttl === 'number') {\n      scriptText += `docInfo['ttl'], `;\n    }\n\n    // Assignment clause\n    scriptText += QueryGenerator._assignmentGetterExpression(propertiesInfo.filter(p => !primaryKeys.has(p.columnName)));\n    scriptText += ', ';\n\n    // Where clause\n    scriptText += QueryGenerator._valueGetterExpression(propertiesInfo.filter(p => primaryKeys.has(p.columnName)));\n\n    // Condition clause\n    if (when.length > 0) {\n      scriptText += ', ' + QueryGenerator._valueGetterExpression(when, 'docInfo.when');\n    }\n\n    // Finish return statement\n    scriptText += '];\\n})';\n\n    const script = new vm.Script(scriptText, { filename: vmFileName });\n    return script.runInThisContext();\n  }\n\n  /**\n   * Gets the DELETE query and function to obtain the parameters, given the doc.\n   * @param {TableMetadata} table\n   * @param {String} keyspace\n   * @param {Array} propertiesInfo\n   * @param {Object} docInfo\n   * @param {Array} when\n   * @param {Boolean|undefined} ifExists\n   * @return {{query: String, paramsGetter: Function, isIdempotent}}\n   */\n  static getDelete(table, keyspace, propertiesInfo, docInfo, when, ifExists) {\n    const deleteOnlyColumns = docInfo && docInfo.deleteOnlyColumns;\n    const primaryKeys = new Set(table.partitionKeys.concat(table.clusteringKeys).map(c => c.name));\n\n    const filteredPropertiesInfo = propertiesInfo\n      .filter(pInfo => table.columnsByName[pInfo.columnName] !== undefined);\n\n\n    return ({\n      query: QueryGenerator._getDeleteQuery(\n        table.name, keyspace, primaryKeys, filteredPropertiesInfo, when, ifExists, deleteOnlyColumns),\n      paramsGetter: QueryGenerator._deleteParamsGetter(primaryKeys, filteredPropertiesInfo, when),\n      isIdempotent: when.length === 0 && !ifExists\n    });\n  }\n\n  /**\n   * Gets the query for an UPDATE statement.\n   * @param {String} tableName\n   * @param {String} keyspace\n   * @param {Set} primaryKeys\n   * @param {Array} propertiesInfo\n   * @param {Array} when\n   * @param {Boolean} ifExists\n   * @param {Boolean} deleteOnlyColumns\n   * @private\n   * @return {String}\n   */\n  static _getDeleteQuery(tableName, keyspace, primaryKeys, propertiesInfo, when, ifExists, deleteOnlyColumns) {\n    let query = 'DELETE';\n\n    if (deleteOnlyColumns) {\n      const columnsToDelete = propertiesInfo.filter(p => !primaryKeys.has(p.columnName))\n        .map(p => p.columnName)\n        .join(', ');\n\n      if (columnsToDelete !== '') {\n        query += ' ' + columnsToDelete;\n      }\n    }\n\n    query += ` FROM ${keyspace}.${tableName} WHERE `;\n    query += propertiesInfo.filter(p => primaryKeys.has(p.columnName)).map(p => p.columnName + ' = ?').join(' AND ');\n\n    if (ifExists === true) {\n      query += ' IF EXISTS';\n    }\n    else if (when.length > 0) {\n      query += ' IF ' + QueryGenerator._getConditionWithOperators(when);\n    }\n\n    return query;\n  }\n  /**\n   * Returns a function to obtain the parameter values from a doc for an UPDATE statement.\n   * @param {Set} primaryKeys\n   * @param {Array} propertiesInfo\n   * @param {Array} when\n   * @returns {Function}\n   */\n  static _deleteParamsGetter(primaryKeys, propertiesInfo, when) {\n    let scriptText = '(function getParametersDelete(doc, docInfo, mappingInfo) {\\n';\n    scriptText += '  return [';\n\n    // Where clause\n    scriptText += QueryGenerator._valueGetterExpression(propertiesInfo.filter(p => primaryKeys.has(p.columnName)));\n\n    // Condition clause\n    if (when.length > 0) {\n      scriptText += ', ' + QueryGenerator._valueGetterExpression(when, 'docInfo.when');\n    }\n\n    // Finish return statement\n    scriptText += '];\\n})';\n\n    const script = new vm.Script(scriptText, { filename: vmFileName });\n    return script.runInThisContext();\n  }\n\n  /**\n   * Gets a string containing the doc properties to get.\n   * @param {Array} propertiesInfo\n   * @param {String} [objectName='doc']\n   * @return {string}\n   * @private\n   */\n  static _valueGetterExpression(propertiesInfo, objectName) {\n    objectName = objectName || 'doc';\n\n    return propertiesInfo\n      .map(p =>\n        QueryGenerator._valueGetterSingle(`${objectName}['${p.propertyName}']`, p.propertyName, p.value, p.fromModel))\n      .join(', ');\n  }\n\n  static _valueGetterSingle(prefix, propName, value, fromModelFn) {\n    let valueGetter = prefix;\n\n    if (value instanceof QueryOperator) {\n      if (value.hasChildValues) {\n        return `${QueryGenerator._valueGetterSingle(`${prefix}.value[0]`, propName, value.value[0], fromModelFn)}` +\n          `, ${QueryGenerator._valueGetterSingle(`${prefix}.value[1]`, propName, value.value[1], fromModelFn)}`;\n      }\n\n      valueGetter = `${prefix}.value`;\n\n      if (value.isInOperator && fromModelFn) {\n        // Transform each individual value\n        return `${valueGetter}.map(v => ${QueryGenerator._getMappingFunctionCall(propName, 'v')})`;\n      }\n    }\n\n    return !fromModelFn ? valueGetter : QueryGenerator._getMappingFunctionCall(propName, valueGetter);\n  }\n\n  /**\n   * Gets a string containing the doc properties to SET, considering QueryAssignment instances.\n   * @param {Array} propertiesInfo\n   * @param {String} [prefix='doc']\n   * @return {string}\n   * @private\n   */\n  static _assignmentGetterExpression(propertiesInfo, prefix) {\n    prefix = prefix || 'doc';\n\n    return propertiesInfo\n      .map(p => {\n        const valueGetter = `${prefix}['${p.propertyName}']${p.value instanceof QueryAssignment ? '.value' : ''}`;\n        if (p.fromModel) {\n          return QueryGenerator._getMappingFunctionCall(p.propertyName, valueGetter);\n        }\n        return valueGetter;\n      })\n      .join(', ');\n  }\n\n  static _getConditionWithOperators(propertiesInfo) {\n    return propertiesInfo\n      .map(p => QueryGenerator._getSingleCondition(p.columnName, p.value))\n      .join(' AND ');\n  }\n\n  static _getMappingFunctionCall(propName, valueGetter) {\n    return `mappingInfo.getFromModelFn('${propName}')(${valueGetter})`;\n  }\n\n  static _getSingleCondition(columnName, value) {\n    if (value instanceof QueryOperator) {\n      if (value.hasChildValues) {\n        return `${QueryGenerator._getSingleCondition(columnName, value.value[0])}` +\n          ` ${value.key} ${QueryGenerator._getSingleCondition(columnName, value.value[1])}`;\n      }\n      return `${columnName} ${value.key} ?`;\n    }\n    return `${columnName} = ?`;\n  }\n}\n\nmodule.exports = QueryGenerator;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst vm = require('vm');\nconst utils = require('../utils');\nconst types = require('../types');\n\n/**\n * @ignore\n */\nclass ResultMapper {\n  /**\n   * Gets a generated function to adapt the row to a document.\n   * @param {ModelMappingInfo} info\n   * @param {ResultSet} rs\n   * @returns {Function}\n   */\n  static getSelectAdapter(info, rs) {\n    const columns = rs.columns;\n    if (!columns) {\n      throw new Error('Expected ROWS result obtained VOID');\n    }\n\n    let scriptText = '(function rowAdapter(row, info) {\\n' +\n      '  const item = info.newInstance();\\n';\n\n    for (const c of columns) {\n      scriptText += `  item['${info.getPropertyName(c.name)}'] = `;\n\n      if (!info.getToModelFn(c.name)) {\n        scriptText += `row['${c.name}'];\\n`;\n      } else {\n        scriptText += `info.getToModelFn('${c.name}')(row['${c.name}']);\\n`;\n      }\n    }\n\n    scriptText += '  return item;\\n})';\n\n    const script = new vm.Script(scriptText, { filename: 'gen-result-mapper.js'});\n    return script.runInThisContext();\n  }\n\n  /**\n   * Gets a function used to adapt VOID results or conditional updates.\n   * @param {ResultSet} rs\n   * @returns {Function}\n   */\n  static getMutationAdapter(rs) {\n    if (rs.columns === null) {\n      // VOID result\n      return utils.noop;\n    }\n\n    if (\n      rs.columns.length === 1 && rs.columns[0].name === '[applied]' &&\n      rs.columns[0].type.code === types.dataTypes.boolean) {\n      return utils.noop;\n    }\n\n    return ResultMapper._getConditionalRowAdapter(rs);\n  }\n\n  static _getConditionalRowAdapter(rs) {\n    return (function conditionalRowAdapter(row, info) {\n      const item = info.newInstance();\n\n      // Skip the first column (\"[applied]\")\n      for (let i = 1; i < rs.columns.length; i++) {\n        const c = rs.columns[i];\n        item[info.getPropertyName(c.name)] = row[c.name];\n      }\n\n      return item;\n    });\n  }\n\n  /**\n   * @param {ModelMappingInfo} info\n   * @param {ResultSet} rs\n   * @returns {{canCache: Boolean, fn: Function}}\n   */\n  static getCustomQueryAdapter(info, rs) {\n    if (rs.columns === null || rs.columns.length === 0) {\n      // VOID result\n      return { canCache: true, fn: utils.noop };\n    }\n\n    if (rs.columns[0].name === '[applied]' && rs.columns[0].type.code === types.dataTypes.boolean) {\n      // Conditional update results adapter functions should not be cached\n      return { canCache: false, fn: ResultMapper._getConditionalRowAdapter(rs) };\n    }\n\n    return { canCache: true, fn: ResultMapper.getSelectAdapter(info, rs) };\n  }\n}\n\nmodule.exports = ResultMapper;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst utils = require('../utils');\nconst inspectMethod = util.inspect.custom || 'inspect';\n\n/**\n * Represents the result of an execution as an iterable of objects in the Mapper.\n * @alias module:mapping~Result\n */\nclass Result {\n  /**\n   * Creates a new instance of Result.\n   * @param {ResultSet} rs\n   * @param {ModelMappingInfo} info\n   * @param {Function} rowAdapter\n   */\n  constructor(rs, info, rowAdapter) {\n    this._rs = rs;\n    this._info = info;\n    this._rowAdapter = rowAdapter;\n\n    /**\n     * When there is a single cell containing the result of the a LWT operation, hide the result from the user.\n     * @private\n     */\n    this._isEmptyLwt = (rs.columns !== null\n      && rs.columns.length === 1 && this._rs.rowLength === 1 && rs.columns[0].name === '[applied]');\n\n    /**\n     * Gets the amount of the documents contained in this Result instance.\n     * <p>\n     *   When the results are paged, it returns the length of the current paged results not the total amount of\n     *   rows in the table matching the query.\n     * </p>\n     * @type {Number}\n     */\n    this.length = this._isEmptyLwt ? 0 : (rs.rowLength || 0);\n\n    /**\n     * A string token representing the current page state of query.\n     * <p>\n     *   When provided, it can be used in the following executions to continue paging and retrieve the remained of the\n     *   result for the query.\n     * </p>\n     * @type {String}\n     * @default null\n     */\n    this.pageState = rs.pageState;\n  }\n\n  /**\n   * When this instance is the result of a conditional update query, it returns whether it was successful.\n   * Otherwise, it returns <code>true</code>.\n   * <p>\n   *   For consistency, this method always returns <code>true</code> for non-conditional queries (although there is\n   *   no reason to call the method in that case). This is also the case for conditional DDL statements\n   *   (CREATE KEYSPACE... IF NOT EXISTS, CREATE TABLE... IF NOT EXISTS), for which the server doesn't return\n   *   information whether it was applied or not.\n   * </p>\n   */\n  wasApplied() {\n    return this._rs.wasApplied();\n  }\n\n  /**\n   * Gets the first document in this result or null when the result is empty.\n   */\n  first() {\n    if (!this._rs.rowLength || this._isEmptyLwt) {\n      return null;\n    }\n    return this._rowAdapter(this._rs.rows[0], this._info);\n  }\n\n  /**\n   * Returns a new Iterator object that contains the document values.\n   */\n  *[Symbol.iterator]() {\n    if (this._isEmptyLwt) {\n      // Empty iterator\n      return;\n    }\n\n    for (let i = 0; i < this._rs.rows.length; i++) {\n      yield this._rowAdapter(this._rs.rows[i], this._info);\n    }\n  }\n\n  /**\n   * Converts the current instance to an Array of documents.\n   * @return {Array<Object>}\n   */\n  toArray() {\n    if (this._isEmptyLwt || !this._rs.rows) {\n      return utils.emptyArray;\n    }\n\n    return this._rs.rows.map(row => this._rowAdapter(row, this._info));\n  }\n\n  /**\n   * Executes a provided function once per result element.\n   * @param {Function} callback Function to execute for each element, taking two arguments: currentValue and index.\n   * @param {Object} [thisArg] Value to use as <code>this</code> when executing callback.\n   */\n  forEach(callback, thisArg) {\n    let index = 0;\n    thisArg = thisArg || this;\n    for (const doc of this) {\n      callback.call(thisArg, doc, index++);\n    }\n  }\n\n  [inspectMethod]() {\n    return this.toArray();\n  }\n}\n\nmodule.exports = Result;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst keyMatches = {\n  all: 1,\n  none: 0,\n  some: -1\n};\n\n/**\n * Provides utility methods to choose the correct tables and views that should be included in a statement.\n * @ignore\n */\nclass ObjectSelector {\n  /**\n   * Gets the table/view that should be used to execute the SELECT query.\n   * @param {Client} client\n   * @param {ModelMappingInfo} info\n   * @param {Boolean} allPKsDefined\n   * @param {Array} propertiesInfo\n   * @param {Array} fieldsInfo\n   * @param {Array<Array<String>>} orderByColumns\n   * @return {Promise<String>} A promise that resolves to a table names.\n   */\n  static getForSelect(client, info, allPKsDefined, propertiesInfo, fieldsInfo, orderByColumns) {\n    return Promise.all(\n      info.tables.map(t => {\n        if (t.isView) {\n          return client.metadata.getMaterializedView(info.keyspace, t.name);\n        }\n        return client.metadata.getTable(info.keyspace, t.name);\n      }))\n      .then(tables => {\n        for (let i = 0; i < tables.length; i++) {\n          const table = tables[i];\n          if (table === null) {\n            throw new Error(`Table \"${info.tables[i].name}\" could not be retrieved`);\n          }\n\n          if (keysAreIncluded(table.partitionKeys, propertiesInfo) !== keyMatches.all) {\n            // Not all the partition keys are covered\n            continue;\n          }\n\n\n          if (allPKsDefined) {\n            if (keysAreIncluded(table.clusteringKeys, propertiesInfo) !== keyMatches.all) {\n              // All clustering keys should be included as allPKsDefined flag is set\n              continue;\n            }\n          }\n\n          if (propertiesInfo.length > table.partitionKeys.length) {\n            // Check that the Where clause is composed by partition and clustering keys\n            const allPropertiesArePrimaryKeys = propertiesInfo\n              .reduce(\n                (acc, p) => acc && (\n                  contains(table.partitionKeys, c => c.name === p.columnName) ||\n                  contains(table.clusteringKeys, c => c.name === p.columnName)\n                ),\n                true);\n\n            if (!allPropertiesArePrimaryKeys) {\n              continue;\n            }\n          }\n\n          // All fields must be contained\n          const containsAllFields = fieldsInfo\n            .reduce((acc, p) => acc && table.columnsByName[p.columnName] !== undefined, true);\n\n          if (!containsAllFields) {\n            continue;\n          }\n\n          // CQL:\n          // - \"ORDER BY\" is currently only supported on the clustered columns of the PRIMARY KEY\n          // - \"ORDER BY\" currently only support the ordering of columns following their declared order in\n          //   the PRIMARY KEY\n          //\n          // In the mapper, we validate that the ORDER BY columns appear in the same order as in the clustering keys\n          const containsAllOrderByColumns = orderByColumns\n            .reduce((acc, order, index) => {\n              if (!acc) {\n                return false;\n              }\n\n              const ck = table.clusteringKeys[index];\n\n              return ck && ck.name === order[0];\n            }, true);\n\n          if (!containsAllOrderByColumns) {\n            continue;\n          }\n\n          return table.name;\n        }\n\n        let message = `No table matches the filter (${allPKsDefined ? 'all PKs have to be specified' : 'PKs'}): [${\n          propertiesInfo.map(p => p.columnName)}]`;\n\n        if (fieldsInfo.length > 0) {\n          message += `; fields: [${fieldsInfo.map(p => p.columnName)}]`;\n        }\n        if (orderByColumns.length > 0) {\n          message += `; orderBy: [${orderByColumns.map(item => item[0])}]`;\n        }\n\n        throw new Error(message);\n      });\n  }\n\n  /** Returns the name of the first table */\n  static getForSelectAll(info) {\n    return info.tables[0].name;\n  }\n\n  /**\n   * Gets the tables that should be used to execute the INSERT query.\n   * @param {Client} client\n   * @param {ModelMappingInfo} info\n   * @param {Array} propertiesInfo\n   * @return {Promise<Array<TableMetadata>>} A promise that resolves to an Array of tables.\n   */\n  static getForInsert(client, info, propertiesInfo) {\n    return Promise.all(info.tables.filter(t => !t.isView).map(t => client.metadata.getTable(info.keyspace, t.name)))\n      .then(tables => {\n        const filteredTables = tables\n          .filter((table, i) => {\n            if (table === null) {\n              throw new Error(`Table \"${info.tables[i].name}\" could not be retrieved`);\n            }\n\n            if (keysAreIncluded(table.partitionKeys, propertiesInfo) !== keyMatches.all) {\n              // Not all the partition keys are covered\n              return false;\n            }\n\n            const clusteringKeyMatches = keysAreIncluded(table.clusteringKeys, propertiesInfo);\n\n            // All clustering keys should be included or it can be inserting a static column value\n            if (clusteringKeyMatches === keyMatches.all) {\n              return true;\n            }\n\n            if (clusteringKeyMatches === keyMatches.some) {\n              return false;\n            }\n\n            const staticColumns = staticColumnCount(table);\n            return propertiesInfo.length === table.partitionKeys.length + staticColumns && staticColumns > 0;\n          });\n\n        if (filteredTables.length === 0) {\n          throw new Error(`No table matches (all PKs have to be specified) fields: [${\n            propertiesInfo.map(p => p.columnName)}]`);\n        }\n\n        return filteredTables;\n      });\n  }\n\n  /**\n   * Gets the tables that should be used to execute the UPDATE query.\n   * @param {Client} client\n   * @param {ModelMappingInfo} info\n   * @param {Array} propertiesInfo\n   * @param {Array} when\n   * @return {Promise<Array<TableMetadata>>} A promise that resolves to an Array of tables.\n   */\n  static getForUpdate(client, info, propertiesInfo, when) {\n    return Promise.all(info.tables.filter(t => !t.isView).map(t => client.metadata.getTable(info.keyspace, t.name)))\n      .then(tables => {\n        const filteredTables = tables\n          .filter((table, i) => {\n            if (table === null) {\n              throw new Error(`Table \"${info.tables[i].name}\" could not be retrieved`);\n            }\n\n            if (keysAreIncluded(table.partitionKeys, propertiesInfo) !== keyMatches.all) {\n              // Not all the partition keys are covered\n              return false;\n            }\n\n            const clusteringKeyMatches = keysAreIncluded(table.clusteringKeys, propertiesInfo);\n\n            // All clustering keys should be included or it can be updating a static column value\n            if (clusteringKeyMatches === keyMatches.some) {\n              return false;\n            }\n\n            if (clusteringKeyMatches === keyMatches.none && !hasStaticColumn(table)) {\n              return false;\n            }\n\n            const applicableColumns = propertiesInfo\n              .reduce((acc, p) => acc + (table.columnsByName[p.columnName] !== undefined ? 1 : 0), 0);\n\n            if (applicableColumns <= table.partitionKeys.length + table.clusteringKeys.length) {\n              if (!hasStaticColumn(table) || applicableColumns <= table.partitionKeys.length) {\n                // UPDATE statement does not contain columns to SET\n                return false;\n              }\n            }\n\n            // \"when\" conditions should be contained in the table\n            return when.reduce((acc, p) => acc && table.columnsByName[p.columnName] !== undefined, true);\n          });\n\n        if (filteredTables.length === 0) {\n          let message = `No table matches (all PKs and columns to set have to be specified) fields: [${\n            propertiesInfo.map(p => p.columnName)}]`;\n\n          if (when.length > 0) {\n            message += `; condition: [${when.map(p => p.columnName)}]`;\n          }\n\n          throw new Error(message);\n        }\n\n        return filteredTables;\n      });\n  }\n\n  /**\n   * Gets the tables that should be used to execute the DELETE query.\n   * @param {Client} client\n   * @param {ModelMappingInfo} info\n   * @param {Array} propertiesInfo\n   * @param {Array} when\n   * @return {Promise<Array<TableMetadata>>} A promise that resolves to an Array of tables.\n   */\n  static getForDelete(client, info, propertiesInfo, when) {\n    return Promise.all(info.tables.filter(t => !t.isView).map(t => client.metadata.getTable(info.keyspace, t.name)))\n      .then(tables => {\n        const filteredTables = tables\n          .filter((table, i) => {\n            if (table === null) {\n              throw new Error(`Table \"${info.tables[i].name}\" could not be retrieved`);\n            }\n\n            // All partition and clustering keys from the table should be included in the document\n            const keyNames = table.partitionKeys.concat(table.clusteringKeys).map(k => k.name);\n            const columns = propertiesInfo.map(p => p.columnName);\n\n            for (let i = 0; i < keyNames.length; i++) {\n              if (columns.indexOf(keyNames[i]) === -1) {\n                return false;\n              }\n            }\n\n            // \"when\" conditions should be contained in the table\n            return when.reduce((acc, p) => acc && table.columnsByName[p.columnName] !== undefined, true);\n          });\n\n        if (filteredTables.length === 0) {\n          let message = `No table matches (all PKs have to be specified) fields: [${\n            propertiesInfo.map(p => p.columnName)}]`;\n\n          if (when.length > 0) {\n            message += `; condition: [${when.map(p => p.columnName)}]`;\n          }\n\n          throw new Error(message);\n        }\n\n        return filteredTables;\n      });\n  }\n}\n\nfunction contains(arr, fn) {\n  return arr.filter(fn).length > 0;\n}\n\n/**\n * Returns the amount of matches for a given key\n * @private\n * @param {Array} keys\n * @param {Array} propertiesInfo\n */\nfunction keysAreIncluded(keys, propertiesInfo) {\n  if (keys.length === 0) {\n    return keyMatches.all;\n  }\n\n  // Filtering by name might look slow / ineffective to using hash maps\n  // but we expect `keys` and `propertiesInfo` to contain only few items\n  const matches = propertiesInfo.reduce((acc, p) => acc + (contains(keys, k => p.columnName === k.name) ? 1 : 0), 0);\n  if (matches === 0) {\n    return keyMatches.none;\n  }\n\n  return matches === keys.length ? keyMatches.all : keyMatches.some;\n}\n\nfunction hasStaticColumn(table) {\n  return staticColumnCount(table) > 0;\n}\n\nfunction staticColumnCount(table) {\n  return table.columns.reduce((acc, column) => acc + (column.isStatic ? 1 : 0), 0);\n}\n\nmodule.exports = ObjectSelector;\n","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst errors = require('../errors');\nconst utils = require('../utils');\n\n/**\n * Provides utility methods to adapt and map user provided docInfo and executionOptions to a predictable object format.\n * @ignore\n */\nclass DocInfoAdapter {\n  /**\n   * Returns an Array where each item contains the property name, the column name and the property value (to obtain\n   * the operator).\n   * When docInfo.fields is specified, it uses that array to obtain the information.\n   * @param {Array<String>} docKeys\n   * @param {null|{fields}} docInfo\n   * @param {Object} doc\n   * @param {ModelMappingInfo} mappingInfo\n   * @returns {Array}\n   */\n  static getPropertiesInfo(docKeys, docInfo, doc, mappingInfo) {\n    let propertyKeys = docKeys;\n    if (docInfo && docInfo.fields && docInfo.fields.length > 0) {\n      propertyKeys = docInfo.fields;\n    }\n\n    return propertyKeys.map(propertyName => ({\n      propertyName,\n      columnName: mappingInfo.getColumnName(propertyName),\n      value: doc[propertyName],\n      fromModel: mappingInfo.getFromModelFn(propertyName)\n    }));\n  }\n\n  /**\n   * @param {{orderBy}} docInfo\n   * @param {ModelMappingInfo} mappingInfo\n   * @returns {Array<String>}\n   */\n  static adaptOrderBy(docInfo, mappingInfo){\n    if (!docInfo || !docInfo.orderBy) {\n      return utils.emptyArray;\n    }\n    return Object.keys(docInfo.orderBy).map(key => {\n      const value = docInfo.orderBy[key];\n      const ordering = typeof value === 'string' ? value.toUpperCase() : value;\n      if (ordering !== 'ASC' && ordering !== 'DESC') {\n        throw new errors.ArgumentError('Order must be either \"ASC\" or \"DESC\", obtained: ' + value);\n      }\n      return [ mappingInfo.getColumnName(key), ordering ];\n    });\n  }\n\n  /**\n   * Returns the QueryOptions for an INSERT/UPDATE/DELETE statement.\n   * @param {Object|String|undefined} executionOptions\n   * @param {Boolean} isIdempotent\n   */\n  static adaptOptions(executionOptions, isIdempotent) {\n    const options = {\n      prepare: true,\n      executionProfile: undefined,\n      timestamp: undefined,\n      isIdempotent: isIdempotent\n    };\n\n    if (typeof executionOptions === 'string') {\n      options.executionProfile = executionOptions;\n    }\n    else if (executionOptions !== null && executionOptions !== undefined) {\n      options.executionProfile = executionOptions.executionProfile;\n      options.timestamp = executionOptions.timestamp;\n\n      if (executionOptions.isIdempotent !== undefined) {\n        options.isIdempotent = executionOptions.isIdempotent;\n      }\n    }\n    return options;\n  }\n\n  /**\n   * Returns the QueryOptions for a SELECT statement.\n   * @param {Object|String|undefined} executionOptions\n   * @param {Boolean} [overrideIdempotency]\n   */\n  static adaptAllOptions(executionOptions, overrideIdempotency) {\n    const options = {\n      prepare: true,\n      executionProfile: undefined,\n      fetchSize: undefined,\n      pageState: undefined,\n      timestamp: undefined,\n      isIdempotent: undefined\n    };\n\n    if (typeof executionOptions === 'string') {\n      options.executionProfile = executionOptions;\n    }\n    else if (executionOptions !== null && executionOptions !== undefined) {\n      options.executionProfile = executionOptions.executionProfile;\n      options.fetchSize = executionOptions.fetchSize;\n      options.pageState = executionOptions.pageState;\n      options.timestamp = executionOptions.timestamp;\n      options.isIdempotent = executionOptions.isIdempotent;\n    }\n\n    if (overrideIdempotency) {\n      options.isIdempotent = true;\n    }\n\n    return options;\n  }\n\n  /**\n   * Returns the QueryOptions for a batch statement.\n   * @param {Object|String|undefined} executionOptions\n   * @param {Boolean} isIdempotent\n   * @param {Boolean} isCounter\n   */\n  static adaptBatchOptions(executionOptions, isIdempotent, isCounter) {\n    const options = {\n      prepare: true,\n      executionProfile: undefined,\n      timestamp: undefined,\n      logged: undefined,\n      isIdempotent: isIdempotent,\n      counter: isCounter\n    };\n\n    if (typeof executionOptions === 'string') {\n      options.executionProfile = executionOptions;\n    }\n    else if (executionOptions !== null && executionOptions !== undefined) {\n      options.executionProfile = executionOptions.executionProfile;\n      options.timestamp = executionOptions.timestamp;\n      options.logged = executionOptions.logged !== false;\n\n      if (executionOptions.isIdempotent !== undefined) {\n        options.isIdempotent = executionOptions.isIdempotent;\n      }\n    }\n    return options;\n  }\n}\n\nmodule.exports = DocInfoAdapter;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst utils = require('../utils');\nconst QueryGenerator = require('./query-generator');\nconst ResultMapper = require('./result-mapper');\nconst Result = require('./result');\nconst Cache = require('./cache');\nconst Tree = require('./tree');\nconst ObjectSelector = require('./object-selector');\nconst DocInfoAdapter = require('./doc-info-adapter');\n\nconst cacheHighWaterMark = 100;\n\n/**\n * @ignore\n */\nclass MappingHandler {\n  /**\n   * @param {Client} client\n   * @param {ModelMappingInfo} mappingInfo\n   */\n  constructor(client, mappingInfo) {\n    this._client = client;\n    this._cache = {\n      select: new Tree().on('add', length => this._validateCacheLength(length)),\n      selectAll: new Tree().on('add', length => this._validateCacheLength(length)),\n      insert: new Tree().on('add', length => this._validateCacheLength(length)),\n      update: new Tree().on('add', length => this._validateCacheLength(length)),\n      remove: new Tree().on('add', length => this._validateCacheLength(length)),\n      customQueries: new Map()\n    };\n\n    /**\n     * Gets the mapping information of the document.\n     * @type {ModelMappingInfo}\n     */\n    this.info = mappingInfo;\n  }\n\n  /**\n   * Gets a function to be used to execute SELECT the query using the document.\n   * @param {Object} doc\n   * @param {{fields, orderBy, limit}} docInfo\n   * @param {Boolean} allPKsDefined Determines whether all primary keys must be defined in the doc for the query to\n   * be valid.\n   * @return {Promise<Function>}\n   */\n  getSelectExecutor(doc, docInfo, allPKsDefined) {\n    const docKeys = Object.keys(doc);\n    if (docKeys.length === 0) {\n      return Promise.reject(new Error('Expected object with keys'));\n    }\n\n    const cacheKey = Cache.getSelectKey(docKeys, doc, docInfo);\n    // Cache the executor and the result mapper under the same key\n    // That way, those can get evicted together\n    const cacheItem = this._cache.select.getOrCreate(cacheKey, () => ({ executor: null, resultAdapter: null }));\n\n    if (cacheItem.executor !== null) {\n      return Promise.resolve(cacheItem.executor);\n    }\n\n    const propertiesInfo = DocInfoAdapter.getPropertiesInfo(docKeys, null, doc, this.info);\n    const fieldsInfo = DocInfoAdapter.getPropertiesInfo(utils.emptyArray, docInfo, doc, this.info);\n    const orderByColumns = DocInfoAdapter.adaptOrderBy(docInfo, this.info);\n    const limit = docInfo && docInfo.limit;\n\n    return this._client.connect()\n      .then(() =>\n        ObjectSelector.getForSelect(this._client, this.info, allPKsDefined, propertiesInfo, fieldsInfo, orderByColumns))\n      .then(tableName => {\n        // Part of the closure\n        const query = QueryGenerator.getSelect(tableName, this.info.keyspace, propertiesInfo, fieldsInfo,\n          orderByColumns, limit);\n        const paramsGetter = QueryGenerator.selectParamsGetter(propertiesInfo, limit);\n        const self = this;\n\n        cacheItem.executor = function selectExecutor(doc, docInfo, executionOptions) {\n          return self._executeSelect(query, paramsGetter, doc, docInfo, executionOptions, cacheItem);\n        };\n\n        return cacheItem.executor;\n      });\n  }\n\n  getSelectAllExecutor(docInfo) {\n    const cacheKey = Cache.getSelectAllKey(docInfo);\n    const cacheItem = this._cache.selectAll.getOrCreate(cacheKey, () => ({ executor: null, resultAdapter: null }));\n\n    if (cacheItem.executor !== null) {\n      return cacheItem.executor;\n    }\n\n    const fieldsInfo = DocInfoAdapter.getPropertiesInfo(utils.emptyArray, docInfo, utils.emptyObject, this.info);\n    const orderByColumns = DocInfoAdapter.adaptOrderBy(docInfo, this.info);\n    const limit = docInfo && docInfo.limit;\n\n    const tableName = ObjectSelector.getForSelectAll(this.info);\n\n    // Part of the closure\n    const query = QueryGenerator.getSelect(\n      tableName, this.info.keyspace, utils.emptyArray, fieldsInfo, orderByColumns, limit);\n    const paramsGetter = QueryGenerator.selectParamsGetter(utils.emptyArray, limit);\n    const self = this;\n\n    cacheItem.executor = function selectAllExecutor(docInfo, executionOptions) {\n      return self._executeSelect(query, paramsGetter, null, docInfo, executionOptions, cacheItem);\n    };\n\n    return cacheItem.executor;\n  }\n\n  /**\n   * Executes a SELECT query and returns the adapted results.\n   * When a result adapter is not yet created, it gets a new one and caches it.\n   * @private\n   */\n  _executeSelect(query, paramsGetter, doc, docInfo, executionOptions, cacheItem) {\n    const options = DocInfoAdapter.adaptAllOptions(executionOptions, true);\n\n    return this._client.execute(query, paramsGetter(doc, docInfo, this.info), options)\n      .then(rs => {\n        if (cacheItem.resultAdapter === null) {\n          cacheItem.resultAdapter = ResultMapper.getSelectAdapter(this.info, rs);\n        }\n        return new Result(rs, this.info, cacheItem.resultAdapter);\n      });\n  }\n\n  /**\n   * Gets a function to be used to execute INSERT the query using the document.\n   * @param {Object} doc\n   * @param {{ifNotExists, ttl, fields}} docInfo\n   * @return {Promise<Function>}\n   */\n  getInsertExecutor(doc, docInfo) {\n    const docKeys = Object.keys(doc);\n    if (docKeys.length === 0) {\n      return Promise.reject(new Error('Expected object with keys'));\n    }\n\n    const cacheKey = Cache.getInsertKey(docKeys, docInfo);\n    const cacheItem = this._cache.insert.getOrCreate(cacheKey, () => ({ executor: null }));\n\n    if (cacheItem.executor !== null) {\n      return Promise.resolve(cacheItem.executor);\n    }\n\n    return this.createInsertQueries(docKeys, doc, docInfo)\n      .then(queries => {\n        if (queries.length === 1) {\n          return this._setSingleExecutor(cacheItem, queries[0]);\n        }\n\n        return this._setBatchExecutor(cacheItem, queries);\n      });\n  }\n\n  /**\n   * Creates an Array containing the query and the params getter function for each table affected by the INSERT.\n   * @param {Array<String>} docKeys\n   * @param {Object} doc\n   * @param {{ifNotExists, ttl, fields}} docInfo\n   * @returns {Promise<Array<{query, paramsGetter}>>}\n   */\n  createInsertQueries(docKeys, doc, docInfo) {\n    const propertiesInfo = DocInfoAdapter.getPropertiesInfo(docKeys, docInfo, doc, this.info);\n    const ifNotExists = docInfo && docInfo.ifNotExists;\n\n    // Get all the tables affected\n    return this._client.connect()\n      .then(() => ObjectSelector.getForInsert(this._client, this.info, propertiesInfo))\n      .then(tables => {\n\n        if (tables.length > 1 && ifNotExists) {\n          throw new Error('Batch with ifNotExists conditions cannot span multiple tables');\n        }\n\n        // For each tables affected, Generate query and parameter getters\n        return tables.map(table =>\n          QueryGenerator.getInsert(table, this.info.keyspace, propertiesInfo, docInfo,ifNotExists));\n      });\n  }\n\n  /**\n   * Gets a function to be used to execute the UPDATE queries with the provided document.\n   * @param {Object} doc\n   * @param {{ifExists, when, ttl, fields}} docInfo\n   * @return {Promise<Function>}\n   */\n  getUpdateExecutor(doc, docInfo) {\n    const docKeys = Object.keys(doc);\n    if (docKeys.length === 0) {\n      return Promise.reject(new Error('Expected object with keys'));\n    }\n\n    const cacheKey = Cache.getUpdateKey(docKeys, doc, docInfo);\n    const cacheItem = this._cache.update.getOrCreate(cacheKey, () => ({ executor: null }));\n\n    if (cacheItem.executor !== null) {\n      return Promise.resolve(cacheItem.executor);\n    }\n\n    return this.createUpdateQueries(docKeys, doc, docInfo)\n      .then(queries => {\n        if (queries.length === 1) {\n          return this._setSingleExecutor(cacheItem, queries[0]);\n        }\n\n        return this._setBatchExecutor(cacheItem, queries);\n      });\n  }\n\n  /**\n   * Creates an Array containing the query and the params getter function for each table affected by the UPDATE.\n   * @param {Array<String>} docKeys\n   * @param {Object} doc\n   * @param {Object} docInfo\n   * @returns {Promise<Array<{query, paramsGetter, isIdempotent}>>}\n   */\n  createUpdateQueries(docKeys, doc, docInfo) {\n    const propertiesInfo = DocInfoAdapter.getPropertiesInfo(docKeys, docInfo, doc, this.info);\n    const ifExists = docInfo && docInfo.ifExists;\n    const when = docInfo && docInfo.when\n      ? DocInfoAdapter.getPropertiesInfo(Object.keys(docInfo.when), null, docInfo.when, this.info)\n      : utils.emptyArray;\n\n    if (when.length > 0 && ifExists) {\n      throw new Error('Both when and ifExists conditions can not be applied to the same statement');\n    }\n\n    // Get all the tables affected\n    return this._client.connect()\n      .then(() => ObjectSelector.getForUpdate(this._client, this.info, propertiesInfo, when))\n      .then(tables => {\n\n        if (tables.length > 1 && (when.length > 0 || ifExists)) {\n          throw new Error('Batch with when or ifExists conditions cannot span multiple tables');\n        }\n\n        // For each table affected, Generate query and parameter getters\n        return tables.map(table =>\n          QueryGenerator.getUpdate(table, this.info.keyspace, propertiesInfo, docInfo, when, ifExists));\n      });\n  }\n\n  /**\n   * Gets a function to be used to execute the DELETE queries with the provided document.\n   * @param {Object} doc\n   * @param {{when, ifExists, fields, deleteOnlyColumns}} docInfo\n   * @return {Promise<Function>}\n   */\n  getDeleteExecutor(doc, docInfo) {\n    const docKeys = Object.keys(doc);\n    if (docKeys.length === 0) {\n      return Promise.reject(new Error('Expected object with keys'));\n    }\n\n    const cacheKey = Cache.getRemoveKey(docKeys, doc, docInfo);\n    const cacheItem = this._cache.remove.getOrCreate(cacheKey, () => ({ executor: null }));\n\n    if (cacheItem.executor !== null) {\n      return Promise.resolve(cacheItem.executor);\n    }\n\n    return this.createDeleteQueries(docKeys, doc, docInfo)\n      .then(queries => {\n        if (queries.length === 1) {\n          return this._setSingleExecutor(cacheItem, queries[0]);\n        }\n\n        return this._setBatchExecutor(cacheItem, queries);\n      });\n  }\n\n  /**\n   * Creates an Array containing the query and the params getter function for each table affected by the DELETE.\n   * @param {Array<String>} docKeys\n   * @param {Object} doc\n   * @param {{when, ifExists, fields, deleteOnlyColumns}} docInfo\n   * @returns {Promise<Array<{query, paramsGetter}>>}\n   */\n  createDeleteQueries(docKeys, doc, docInfo) {\n    const propertiesInfo = DocInfoAdapter.getPropertiesInfo(docKeys, docInfo, doc, this.info);\n    const ifExists = docInfo && docInfo.ifExists;\n    const when = docInfo && docInfo.when\n      ? DocInfoAdapter.getPropertiesInfo(Object.keys(docInfo.when), null, docInfo.when, this.info)\n      : utils.emptyArray;\n\n    if (when.length > 0 && ifExists) {\n      throw new Error('Both when and ifExists conditions can not be applied to the same statement');\n    }\n\n    // Get all the tables affected\n    return this._client.connect()\n      .then(() => ObjectSelector.getForDelete(this._client, this.info, propertiesInfo, when))\n      .then(tables => {\n\n        if (tables.length > 1 && (when.length > 0 || ifExists)) {\n          throw new Error('Batch with when or ifExists conditions cannot span multiple tables');\n        }\n\n        // For each tables affected, Generate query and parameter getters\n        return tables.map(table =>\n          QueryGenerator.getDelete(table, this.info.keyspace, propertiesInfo, docInfo, when, ifExists));\n      });\n  }\n\n  getExecutorFromQuery(query, paramsHandler, commonExecutionOptions) {\n    // Use the current instance in the closure\n    // as there is no guarantee of how the returned function will be invoked\n    const self = this;\n    const commonOptions = commonExecutionOptions ? DocInfoAdapter.adaptAllOptions(commonExecutionOptions) : null;\n\n    return (function queryMappedExecutor(doc, executionOptions) {\n      // When the executionOptions were already specified,\n      // use it and skip the ones provided in each invocation\n      const options = commonOptions\n        ? commonOptions\n        : DocInfoAdapter.adaptAllOptions(executionOptions);\n\n      return self._client.execute(query, paramsHandler(doc), options).then(rs => {\n        // Cache the resultAdapter based on the query\n        let resultAdapter = self._cache.customQueries.get(query);\n\n        if (resultAdapter === undefined) {\n          const resultAdapterInfo = ResultMapper.getCustomQueryAdapter(self.info, rs);\n          resultAdapter = resultAdapterInfo.fn;\n          if (resultAdapterInfo.canCache) {\n            // Avoid caching conditional updates results as the amount of columns change\n            // depending on the parameter values.\n            self._cache.customQueries.set(query, resultAdapter);\n\n            if (self._cache.customQueries.size === cacheHighWaterMark) {\n              self._client.log('warning',\n                `Custom queries cache reached ${cacheHighWaterMark} items, this could be caused by ` +\n                `hard-coding parameter values inside the query, which should be avoided`);\n            }\n          }\n        }\n\n        return new Result(rs, self.info, resultAdapter);\n      });\n    });\n  }\n\n  _setSingleExecutor(cacheItem, queryInfo) {\n    // Parameters and this instance are part of the closure\n    const self = this;\n\n    // Set the function to execute the request in the cache\n    cacheItem.executor = function singleExecutor(doc, docInfo, executionOptions) {\n      const options = DocInfoAdapter.adaptOptions(executionOptions, queryInfo.isIdempotent);\n\n      return self._client.execute(queryInfo.query, queryInfo.paramsGetter(doc, docInfo, self.info), options)\n        .then(rs => new Result(rs, self.info, ResultMapper.getMutationAdapter(rs)));\n    };\n\n    return cacheItem.executor;\n  }\n\n  _setBatchExecutor(cacheItem, queries) {\n    // Parameters and the following fields are part of the closure\n    const self = this;\n    const isIdempotent = queries.reduce((acc, q) => acc && q.isIdempotent, true);\n\n    // Set the function to execute the batch request in the cache\n    cacheItem.executor = function batchExecutor(doc, docInfo, executionOptions) {\n      // Use the params getter function to obtain the parameters each time\n      const queryAndParams = queries.map(q => ({\n        query: q.query,\n        params: q.paramsGetter(doc, docInfo, self.info)\n      }));\n\n      const options = DocInfoAdapter.adaptOptions(executionOptions, isIdempotent);\n\n      // Execute using a Batch\n      return self._client.batch(queryAndParams, options)\n        .then(rs => new Result(rs, self.info, ResultMapper.getMutationAdapter(rs)));\n    };\n\n    return cacheItem.executor;\n  }\n\n  _validateCacheLength(length) {\n    if (length !== cacheHighWaterMark) {\n      return;\n    }\n\n    this._client.log('warning', `ModelMapper cache reached ${cacheHighWaterMark} items, this could be caused by ` +\n      `building the object to map in different ways (with different shapes) each time. Use the same or few object ` +\n      `structures for a model and represent unset values with undefined or types.unset`);\n  }\n}\n\nmodule.exports = MappingHandler;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\n/**\n * Contains a set of methods to represent a row into a document and a document into a row.\n * @alias module:mapping~TableMappings\n * @interface\n */\nclass TableMappings {\n  /**\n   * Method that is called by the mapper to create the instance of the document.\n   * @return {Object}\n   */\n  newObjectInstance() {\n    return {};\n  }\n\n  /**\n   * Gets the name of the column based on the document property name.\n   * @param {String} propName The name of the property.\n   * @returns {String}\n   */\n  getColumnName(propName) {\n    return propName;\n  }\n\n  /**\n   * Gets the name of the document property based on the column name.\n   * @param {String} columnName The name of the column.\n   * @returns {String}\n   */\n  getPropertyName(columnName) {\n    return columnName;\n  }\n}\n\n/**\n * A [TableMappings]{@link module:mapping~TableMappings} implementation that converts CQL column names in all-lowercase\n * identifiers with underscores (snake case) to camel case (initial lowercase letter) property names.\n * <p>\n *   The conversion is performed without any checks for the source format, you should make sure that the source\n *   format is snake case for CQL identifiers and camel case for properties.\n * </p>\n * @alias module:mapping~UnderscoreCqlToCamelCaseMappings\n * @implements {module:mapping~TableMappings}\n */\nclass UnderscoreCqlToCamelCaseMappings extends TableMappings {\n  /**\n   * Creates a new instance of {@link UnderscoreCqlToCamelCaseMappings}\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Converts a property name in camel case to snake case.\n   * @param {String} propName Name of the property to convert to snake case.\n   * @return {String}\n   */\n  getColumnName(propName) {\n    return propName.replace(/[a-z][A-Z]/g, (match, offset) => match.charAt(0) + '_' + match.charAt(1)).toLowerCase();\n  }\n\n  /**\n   * Converts a column name in snake case to camel case.\n   * @param {String} columnName The column name to convert to camel case.\n   * @return {String}\n   */\n  getPropertyName(columnName) {\n    return columnName.replace(/_[a-z]/g, (match, offset) => ((offset === 0) ? match : match.substr(1).toUpperCase()));\n  }\n}\n\n/**\n * Default implementation of [TableMappings]{@link module:mapping~TableMappings} that doesn't perform any conversion.\n * @alias module:mapping~DefaultTableMappings\n * @implements {module:mapping~TableMappings}\n */\nclass DefaultTableMappings extends TableMappings {\n  /**\n   * Creates a new instance of {@link DefaultTableMappings}.\n   */\n  constructor() {\n    super();\n  }\n\n  /**  @override */\n  getColumnName(propName) {\n    return super.getColumnName(propName);\n  }\n\n  /** @override */\n  getPropertyName(columnName) {\n    return super.getPropertyName(columnName);\n  }\n\n  /**\n   * Creates a new object instance, using object initializer.\n   */\n  newObjectInstance() {\n    return super.newObjectInstance();\n  }\n}\n\nexports.TableMappings = TableMappings;\nexports.UnderscoreCqlToCamelCaseMappings = UnderscoreCqlToCamelCaseMappings;\nexports.DefaultTableMappings = DefaultTableMappings;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst tableMappingsModule = require('./table-mappings');\nconst TableMappings = tableMappingsModule.TableMappings;\nconst DefaultTableMappings = tableMappingsModule.DefaultTableMappings;\n\n/**\n * Represents the parsed user information of the table mappings of a model.\n * @ignore\n */\nclass ModelMappingInfo {\n  /**\n   * @param {String} keyspace\n   * @param {Array<{name, isView}>} tables\n   * @param {TableMappings} mappings\n   * @param {Map<String,ModelColumnInfo>} columns\n   */\n  constructor(keyspace, tables, mappings, columns) {\n    this.keyspace = keyspace;\n    this.tables = tables;\n    this._mappings = mappings;\n    this._columns = columns;\n\n    // Define a map of column information per property name\n    /** @type {Map<String, ModelColumnInfo>} */\n    this._documentProperties = new Map();\n    for (const modelColumnInfo of columns.values()) {\n      this._documentProperties.set(modelColumnInfo.propertyName, modelColumnInfo);\n    }\n  }\n\n  getColumnName(propName) {\n    const modelColumnInfo = this._documentProperties.get(propName);\n    if (modelColumnInfo !== undefined) {\n      // There is an specific name transformation between the column name and the property name\n      return modelColumnInfo.columnName;\n    }\n    // Rely on the TableMappings (i.e. maybe there is a convention defined for this property)\n    return this._mappings.getColumnName(propName);\n  }\n\n  getPropertyName(columnName) {\n    const modelColumnInfo = this._columns.get(columnName);\n    if (modelColumnInfo !== undefined) {\n      // There is an specific name transformation between the column name and the property name\n      return modelColumnInfo.propertyName;\n    }\n    // Rely on the TableMappings (i.e. maybe there is a convention defined for this column)\n    return this._mappings.getPropertyName(columnName);\n  }\n\n  getFromModelFn(propName) {\n    const modelColumnInfo = this._documentProperties.get(propName);\n    return modelColumnInfo !== undefined ? modelColumnInfo.fromModel : null;\n  }\n\n  getToModelFn(columnName) {\n    const modelColumnInfo = this._columns.get(columnName);\n    return modelColumnInfo !== undefined ? modelColumnInfo.toModel : null;\n  }\n\n  newInstance() {\n    return this._mappings.newObjectInstance();\n  }\n\n  /**\n   * Parses the user options into a map of model names and ModelMappingInfo.\n   * @param {MappingOptions} options\n   * @param {String} currentKeyspace\n   * @returns {Map<String, ModelMappingInfo>}\n   */\n  static parse(options, currentKeyspace) {\n    const result = new Map();\n    if (!options || !options.models) {\n      return result;\n    }\n\n    Object.keys(options.models).forEach(modelName => {\n      const modelOptions = options.models[modelName];\n      result.set(modelName, ModelMappingInfo._create(modelName, currentKeyspace, modelOptions));\n    });\n\n    return result;\n  }\n\n  static _create(modelName, currentKeyspace, modelOptions) {\n    if (!currentKeyspace && (!modelOptions || !modelOptions.keyspace)) {\n      throw new Error(\n        'You should specify the keyspace of the model in the MappingOptions when the Client is not using a keyspace');\n    }\n\n    if (!modelOptions) {\n      return ModelMappingInfo.createDefault(modelName, currentKeyspace);\n    }\n\n    let tables;\n\n    if (modelOptions.tables && modelOptions.tables.length > 0) {\n      tables = modelOptions.tables.map(item => {\n        const table = { name: null, isView: false };\n        if (typeof item === 'string') {\n          table.name = item;\n        } else if (item) {\n          table.name = item.name;\n          table.isView = !!item.isView;\n        }\n\n        if (!table.name) {\n          throw new Error(`Table name not specified for model '${modelName}'`);\n        }\n\n        return table;\n      });\n    } else {\n      tables = [ { name: modelName, isView: false }];\n    }\n\n    if (modelOptions.mappings && !(modelOptions.mappings instanceof TableMappings)) {\n      throw new Error('mappings should be an instance of TableMappings');\n    }\n\n    const columns = new Map();\n    if (modelOptions.columns !== null && typeof modelOptions.columns === 'object') {\n      Object.keys(modelOptions.columns).forEach(columnName => {\n        columns.set(columnName, ModelColumnInfo.parse(columnName, modelOptions.columns[columnName]));\n      });\n    }\n\n    return new ModelMappingInfo(\n      modelOptions.keyspace || currentKeyspace,\n      tables,\n      modelOptions.mappings || new DefaultTableMappings(),\n      columns\n    );\n  }\n\n  static createDefault(modelName, currentKeyspace) {\n    return new ModelMappingInfo(\n      currentKeyspace,\n      [ { name: modelName, isView: false }],\n      new DefaultTableMappings(),\n      new Map());\n  }\n}\n\nclass ModelColumnInfo {\n  constructor(columnName, propertyName, toModel, fromModel) {\n    this.columnName = columnName;\n    this.propertyName = propertyName;\n\n    if (toModel && typeof toModel !== 'function') {\n      throw new TypeError(`toModel type for property '${propertyName}' should be a function (obtained ${\n        typeof toModel})`);\n    }\n\n    if (fromModel && typeof fromModel !== 'function') {\n      throw new TypeError(`fromModel type for property '${propertyName}' should be a function (obtained ${\n        typeof fromModel})`);\n    }\n\n    this.toModel = toModel;\n    this.fromModel = fromModel;\n  }\n\n  static parse(columnName, value) {\n    if (!value) {\n      return new ModelColumnInfo(columnName, columnName);\n    }\n\n    if (typeof value === 'string') {\n      return new ModelColumnInfo(columnName, value);\n    }\n\n    return new ModelColumnInfo(columnName, value.name || columnName, value.toModel, value.fromModel);\n  }\n}\n\nmodule.exports = ModelMappingInfo;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst ModelMapper = require('./model-mapper');\nconst MappingHandler = require('./mapping-handler');\nconst DocInfoAdapter = require('./doc-info-adapter');\nconst errors = require('../errors');\nconst Result = require('./result');\nconst ResultMapper = require('./result-mapper');\nconst ModelMappingInfo = require('./model-mapping-info');\nconst { ModelBatchItem } = require('./model-batch-item');\n\n/**\n * Represents an object mapper for Apache Cassandra and DataStax Enterprise.\n * @alias module:mapping~Mapper\n * @example <caption>Creating a Mapper instance with some options for the model 'User'</caption>\n * const mappingOptions = {\n *   models: {\n *     'User': {\n *       tables: ['users'],\n *       mappings: new UnderscoreCqlToCamelCaseMappings(),\n *       columnNames: {\n *         'userid': 'id'\n *       }\n *     }\n *   }\n * };\n * const mapper = new Mapper(client, mappingOptions);\n * @example <caption>Creating a Mapper instance with other possible options for a model</caption>\n * const mappingOptions = {\n *   models: {\n *     'Video': {\n *       tables: ['videos', 'user_videos', 'latest_videos', { name: 'my_videos_view', isView: true }],\n *       mappings: new UnderscoreCqlToCamelCaseMappings(),\n *       columnNames: {\n *         'videoid': 'id'\n *       },\n *       keyspace: 'ks1'\n *     }\n *   }\n * };\n * const mapper = new Mapper(client, mappingOptions);\n */\nclass Mapper {\n  /**\n   * Creates a new instance of Mapper.\n   * @param {Client} client The Client instance to use to execute the queries and fetch the metadata.\n   * @param {MappingOptions} [options] The [MappingOptions]{@link module:mapping~MappingOptions} containing the\n   * information of the models and table mappings.\n   */\n  constructor(client, options) {\n    if (!client) {\n      throw new Error('client must be defined');\n    }\n\n    /**\n     * The Client instance used to create this Mapper instance.\n     * @type {Client}\n     */\n    this.client = client;\n\n    this._modelMappingInfos = ModelMappingInfo.parse(options, client.keyspace);\n    this._modelMappers = new Map();\n  }\n\n  /**\n   * Gets a [ModelMapper]{@link module:mapping~ModelMapper} that is able to map documents of a certain model into\n   * CQL rows.\n   * @param {String} name The name to identify the model. Note that the name is case-sensitive.\n   * @returns {ModelMapper} A [ModelMapper]{@link module:mapping~ModelMapper} instance.\n   */\n  forModel(name) {\n    let modelMapper = this._modelMappers.get(name);\n\n    if (modelMapper === undefined) {\n      let mappingInfo = this._modelMappingInfos.get(name);\n\n      if (mappingInfo === undefined) {\n        if (!this.client.keyspace) {\n          throw new Error(`No mapping information found for model '${name}'. ` +\n            `Mapper is unable to create default mappings without setting the keyspace`);\n        }\n\n        mappingInfo = ModelMappingInfo.createDefault(name, this.client.keyspace);\n        this.client.log('info', `Mapping information for model '${name}' not found, creating default mapping. ` +\n          `Keyspace: ${mappingInfo.keyspace}; Table: ${mappingInfo.tables[0].name}.`);\n      } else {\n        this.client.log('info', `Creating model mapper for '${name}' using mapping information. Keyspace: ${\n          mappingInfo.keyspace}; Table${mappingInfo.tables.length > 1? 's' : ''}: ${\n          mappingInfo.tables.map(t => t.name)}.`);\n      }\n\n      modelMapper = new ModelMapper(name, new MappingHandler(this.client, mappingInfo));\n      this._modelMappers.set(name, modelMapper);\n    }\n\n    return modelMapper;\n  }\n\n  /**\n   * Executes a batch of queries represented in the items.\n   * @param {Array<ModelBatchItem>} items\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times without\n   * changing the result beyond the initial application.\n   * <p>\n   *   The mapper uses the generated queries to determine the default value. When an UPDATE is generated with a\n   *   counter column or appending/prepending to a list column, the execution is marked as not idempotent.\n   * </p>\n   * <p>\n   *   Additionally, the mapper uses the safest approach for queries with lightweight transactions (Compare and\n   *   Set) by considering them as non-idempotent. Lightweight transactions at client level with transparent retries can\n   *   break linearizability. If that is not an issue for your application, you can manually set this field to true.\n   * </p>\n   * @param {Boolean} [executionOptions.logged=true] Determines whether the batch should be written to the batchlog.\n   * @param {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the\n   * unix epoch (00:00:00, January 1st, 1970).\n   * @returns {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result}.\n   */\n  batch(items, executionOptions) {\n    if (!Array.isArray(items) || !(items.length > 0)) {\n      return Promise.reject(\n        new errors.ArgumentError('First parameter items should be an Array with 1 or more ModelBatchItem instances'));\n    }\n\n    const queries = [];\n    let isIdempotent = true;\n    let isCounter;\n\n    return Promise\n      .all(items\n        .map(item => {\n          if (!(item instanceof ModelBatchItem)) {\n            return Promise.reject(new Error(\n              'Batch items must be instances of ModelBatchItem, use modelMapper.batching object to create each item'));\n          }\n\n          return item.pushQueries(queries)\n            .then(options => {\n              // The batch is idempotent when all the queries contained are idempotent\n              isIdempotent = isIdempotent && options.isIdempotent;\n\n              // Let it fail at server level when there is a mix of counter and normal mutations\n              isCounter = options.isCounter;\n            });\n        }))\n      .then(() =>\n        this.client.batch(queries, DocInfoAdapter.adaptBatchOptions(executionOptions, isIdempotent, isCounter)))\n      .then(rs => {\n        // Results should only be adapted when the batch contains LWT (single table)\n        const info = items[0].getMappingInfo();\n        return new Result(rs, info, ResultMapper.getMutationAdapter(rs));\n      });\n  }\n}\n\n/**\n * Represents the mapping options.\n * @typedef {Object} module:mapping~MappingOptions\n * @property {Object<String, ModelOptions>} models An associative array containing the\n * name of the model as key and the table and column information as value.\n */\n\n/**\n * Represents a set of options that applies to a certain model.\n * @typedef {Object} module:mapping~ModelOptions\n * @property {Array<String>|Array<{name, isView}>} tables An Array containing the name of the tables or An Array\n * containing the name and isView property to describe the table.\n * @property {TableMappings} mappings The TableMappings implementation instance that is used to convert from column\n * names to property names and the other way around.\n * @property {Object.<String, String>} [columnNames] An associative array containing the name of the columns and\n * properties that doesn't follow the convention defined in the <code>TableMappings</code>.\n * @property {String} [keyspace] The name of the keyspace. Only mandatory when the Client is not using a keyspace.\n */\n\nmodule.exports = Mapper;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\n/**\n * Module containing classes and fields related to the Mapper.\n * @module mapping\n */\n\nexports.Mapper = require('./mapper');\nexports.ModelMapper = require('./model-mapper');\nexports.ModelBatchMapper = require('./model-batch-mapper');\nexports.ModelBatchItem = require('./model-batch-item').ModelBatchItem;\nexports.Result = require('./result');\nconst tableMappingsModule = require('./table-mappings');\nexports.TableMappings = tableMappingsModule.TableMappings;\nexports.DefaultTableMappings = tableMappingsModule.DefaultTableMappings;\nexports.UnderscoreCqlToCamelCaseMappings = tableMappingsModule.UnderscoreCqlToCamelCaseMappings;\nexports.q = require('./q').q;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst { Stream } = require('stream');\nconst utils = require('../utils');\n\n/**\n * Utilities for concurrent query execution with the DataStax Node.js Driver.\n * @module concurrent\n */\n\n/**\n * Executes multiple queries concurrently at the defined concurrency level.\n * @static\n * @param {Client} client The {@link Client} instance.\n * @param {String|Array<{query, params}>} query The query to execute per each parameter item.\n * @param {Array<Array>|Stream|Object} parameters An {@link Array} or a readable {@link Stream} composed of {@link Array}\n * items representing each individual set of parameters. Per each item in the {@link Array} or {@link Stream}, an\n * execution is going to be made.\n * @param {Object} [options] The execution options.\n * @param {String} [options.executionProfile] The execution profile to be used.\n * @param {Number} [options.concurrencyLevel=100] The concurrency level to determine the maximum amount of in-flight\n * operations at any given time\n * @param {Boolean} [options.raiseOnFirstError=true] Determines whether execution should stop after the first failed\n * execution and the corresponding exception will be raised.\n * @param {Boolean} [options.collectResults=false] Determines whether each individual\n * [ResultSet]{@link module:types~ResultSet} instance should be collected in the grouped result.\n * @param {Number} [options.maxErrors=100] The maximum amount of errors to be collected before ignoring the rest of\n * the error results.\n * @returns {Promise<ResultSetGroup>} A <code>Promise</code> of {@link ResultSetGroup} that is resolved when all the\n * executions completed and it's rejected when <code>raiseOnFirstError</code> is <code>true</code> and there is one\n * or more failures.\n * @example <caption>Using a fixed query and an Array of Arrays as parameters</caption>\n * const query = 'INSERT INTO table1 (id, value) VALUES (?, ?)';\n * const parameters = [[1, 'a'], [2, 'b'], [3, 'c'], ]; // ...\n * const result = await executeConcurrent(client, query, parameters);\n * @example <caption>Using a fixed query and a readable stream</caption>\n * const stream = csvStream.pipe(transformLineToArrayStream);\n * const result = await executeConcurrent(client, query, stream);\n * @example <caption>Using a different queries</caption>\n * const queryAndParameters = [\n *   { query: 'INSERT INTO videos (id, name, user_id) VALUES (?, ?, ?)',\n *     params: [ id, name, userId ] },\n *   { query: 'INSERT INTO user_videos (user_id, id, name) VALUES (?, ?, ?)',\n *     params: [ userId, id, name ] },\n *   { query: 'INSERT INTO latest_videos (id, name, user_id) VALUES (?, ?, ?)',\n *     params: [ id, name, userId ] },\n * ];\n *\n * const result = await executeConcurrent(client, queryAndParameters);\n */\nfunction executeConcurrent(client, query, parameters, options) {\n  if (!client) {\n    throw new TypeError('Client instance is not defined');\n  }\n\n  if (typeof query === 'string') {\n    if (Array.isArray(parameters)) {\n      return new ArrayBasedExecutor(client, query, parameters, options).execute();\n    }\n\n    if (parameters instanceof Stream) {\n      return new StreamBasedExecutor(client, query, parameters, options).execute();\n    }\n\n    throw new TypeError('parameters should be an Array or a Stream instance');\n  }\n\n  if (Array.isArray(query)) {\n    options = parameters;\n    return new ArrayBasedExecutor(client, null, query, options).execute();\n  }\n\n  throw new TypeError('A string query or query and parameters array should be provided');\n}\n\n/**\n * Wraps the functionality to execute given an Array.\n * @ignore\n */\nclass ArrayBasedExecutor {\n\n  /**\n   * @param {Client} client\n   * @param {String} query\n   * @param {Array<Array>|Array<{query, params}>} parameters\n   * @param {Object} [options] The execution options.\n   * @private\n   */\n  constructor(client, query, parameters, options) {\n    this._client = client;\n    this._query = query;\n    this._parameters = parameters;\n    options = options || utils.emptyObject;\n    this._raiseOnFirstError = options.raiseOnFirstError !== false;\n    this._concurrencyLevel = Math.min(options.concurrencyLevel || 100, this._parameters.length);\n    this._queryOptions = { prepare: true, executionProfile: options.executionProfile };\n    this._result = new ResultSetGroup(options);\n    this._stop = false;\n  }\n\n  execute() {\n    const promises = new Array(this._concurrencyLevel);\n\n    for (let i = 0; i < this._concurrencyLevel; i++) {\n      promises[i] = this._executeOneAtATime(i, 0);\n    }\n\n    return Promise.all(promises).then(() => this._result);\n  }\n\n  _executeOneAtATime(initialIndex, iteration) {\n    const index = initialIndex + this._concurrencyLevel * iteration;\n\n    if (index >= this._parameters.length || this._stop) {\n      return Promise.resolve();\n    }\n\n    const item = this._parameters[index];\n    let query;\n    let params;\n\n    if (this._query === null) {\n      query = item.query;\n      params = item.params;\n    } else {\n      query = this._query;\n      params = item;\n    }\n\n    return this._client.execute(query, params, this._queryOptions)\n      .then(rs => this._result.setResultItem(index, rs))\n      .catch(err => this._setError(index, err))\n      .then(() => this._executeOneAtATime(initialIndex, iteration + 1));\n  }\n\n  _setError(index, err) {\n    this._result.setError(index, err);\n\n    if (this._raiseOnFirstError) {\n      this._stop = true;\n      throw err;\n    }\n  }\n}\n\n/**\n * Wraps the functionality to execute given a Stream.\n * @ignore\n */\nclass StreamBasedExecutor {\n\n  /**\n   * @param {Client} client\n   * @param {String} query\n   * @param {Stream} stream\n   * @param {Object} [options] The execution options.\n   * @private\n   */\n  constructor(client, query, stream, options) {\n    this._client = client;\n    this._query = query;\n    this._stream = stream;\n    options = options || utils.emptyObject;\n    this._raiseOnFirstError = options.raiseOnFirstError !== false;\n    this._concurrencyLevel = options.concurrencyLevel || 100;\n    this._queryOptions = { prepare: true, executionProfile: options.executionProfile };\n    this._inFlight = 0;\n    this._index = 0;\n    this._result = new ResultSetGroup(options);\n    this._resolveCallback = null;\n    this._rejectCallback = null;\n    this._readEnded = false;\n  }\n\n  execute() {\n    return new Promise((resolve, reject) => {\n      this._resolveCallback = resolve;\n      this._rejectCallback = reject;\n\n      this._stream\n        .on('data', params => this._executeOne(params))\n        .on('error', err => this._setReadEnded(err))\n        .on('end', () => this._setReadEnded());\n    });\n  }\n\n  _executeOne(params) {\n    if (!Array.isArray(params)) {\n      return this._setReadEnded(new TypeError('Stream should be in objectMode and should emit Array instances'));\n    }\n\n    if (this._readEnded) {\n      // Read ended abruptly because of incorrect format or error event being emitted.\n      // We shouldn't consider additional items.\n      return;\n    }\n\n    const index = this._index++;\n    this._inFlight++;\n\n    this._client.execute(this._query, params, this._queryOptions)\n      .then(rs => {\n        this._result.setResultItem(index, rs);\n        this._inFlight--;\n      })\n      .catch(err => {\n        this._inFlight--;\n        this._setError(index, err);\n      })\n      .then(() => {\n        if (this._stream.isPaused()) {\n          this._stream.resume();\n        }\n\n        if (this._readEnded && this._inFlight === 0) {\n          // When read ended and there are no more in-flight requests\n          // We yield the result to the user.\n          // It could have ended prematurely when there is a read error\n          // or there was an execution error and raiseOnFirstError is true\n          // In that case, calling the resolve callback has no effect\n          this._resolveCallback(this._result);\n        }\n      });\n\n    if (this._inFlight >= this._concurrencyLevel) {\n      this._stream.pause();\n    }\n  }\n\n  /**\n   * Marks the stream read process as ended.\n   * @param {Error} [err] The stream read error.\n   * @private\n   */\n  _setReadEnded(err) {\n    if (!this._readEnded) {\n      this._readEnded = true;\n\n      if (err) {\n        // There was an error while reading from the input stream.\n        // This should be surfaced as a failure\n        this._rejectCallback(err);\n      } else if (this._inFlight === 0) {\n        // Ended signaled and there are no more pending messages.\n        this._resolveCallback(this._result);\n      }\n    }\n  }\n\n  _setError(index, err) {\n    this._result.setError(index, err);\n\n    if (this._raiseOnFirstError) {\n      this._readEnded = true;\n      this._rejectCallback(err);\n    }\n  }\n}\n\n/**\n * Represents results from different related executions.\n */\nclass ResultSetGroup {\n\n  /**\n   * Creates a new instance of {@link ResultSetGroup}.\n   * @ignore\n   */\n  constructor(options) {\n    this._collectResults = options.collectResults;\n    this._maxErrors = options.maxErrors || 100;\n    this.totalExecuted = 0;\n    this.errors = [];\n\n    if (this._collectResults) {\n      /**\n       * Gets an {@link Array} containing the [ResultSet]{@link module:types~ResultSet} instances from each execution.\n       * <p>\n       *   Note that when <code>collectResults</code> is set to <code>false</code>, accessing this property will\n       *   throw an error.\n       * </p>\n       * @type {Array}\n       */\n      this.resultItems = [];\n    } else {\n      Object.defineProperty(this, 'resultItems', { enumerable: false, get: () => {\n        throw new Error('Property resultItems can not be accessed when collectResults is set to false');\n      }});\n    }\n  }\n\n  /** @ignore */\n  setResultItem(index, rs) {\n    this.totalExecuted++;\n\n    if (this._collectResults) {\n      this.resultItems[index] = rs;\n    }\n  }\n\n  /**\n   * Internal method to set the error of an execution.\n   * @ignore\n   */\n  setError(index, err) {\n    this.totalExecuted++;\n\n    if (this.errors.length < this._maxErrors) {\n      this.errors.push(err);\n    }\n\n    if (this._collectResults) {\n      this.resultItems[index] = err;\n    }\n  }\n}\n\nexports.executeConcurrent = executeConcurrent;\nexports.ResultSetGroup = ResultSetGroup;","/*\n * Copyright DataStax, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\n/**\n * DataStax module.\n * <p>\n *   Contains modules and classes to represent functionality that is specific to DataStax products.\n * </p>\n * @module datastax\n */\n\nexports.graph = require('./graph');\nexports.search = require('./search');","\n// runtime\nimport regeneratorRuntime from 'regenerator-runtime';\n\n// set global\nglobal.regeneratorRuntime = regeneratorRuntime;\n\n// import events\nimport fs from 'fs-extra';\nimport polka from 'polka';\nimport Events from 'events';\nimport cassandra from 'cassandra-driver';\n\n// local dependencies\nimport config from './config';\n\n// events\nclass NFTBackend extends Events {\n\n  /**\n   * constructor\n   */\n  constructor() {\n    // run super\n    super();\n\n    // run build\n    this.building = this.build();\n  }\n\n  /**\n   * build\n   */\n  async build() {\n    // await database\n    await this.__server();\n    await this.__database();\n  }\n\n  /**\n   * setup server\n   */\n  async __server() {\n    // listen\n    this.server = polka().listen(9696);\n  }\n\n  /**\n   * build database\n   */\n  async __database() {\n    return;\n    // Log building to debug\n    logger.log('debug', 'connecting cassandra', {\n      class : 'NFTBackend',\n    });\n\n    const db = config.get('db');\n\n    // Replace Username and Password with your cluster settings\n    const authProvider = new cassandra.auth.PlainTextAuthProvider(db.username, db.password);\n\n    // ssl options\n    const sslOptions = {\n      cert               : fs.readFileSync(`${global.appRoot}/AmazonRootCA1.pem`),\n      host               : db.hostname,\n      rejectUnauthorized : true,\n    };\n\n    // Replace PublicIP with the IP addresses of your clusters\n    const contactPoints = [db.host];\n\n    // setup client\n    this.client = new cassandra.Client({\n      contactPoints,\n      authProvider,\n      sslOptions,\n\n      keyspace        : db.keyspace,\n      localDataCenter : db.region,\n\n      pooling : {\n        heartBeatInterval        : 15 * 1000,\n        maxRequestsPerConnection : 2048 * 24,\n\n        maxConnectionsPerHost : {\n          [cassandra.types.distance.local]  : 10 * 4,\n          [cassandra.types.distance.remote] : 10 * 4,\n        },\n        coreConnectionsPerHost : {\n          [cassandra.types.distance.local]  : 10 * 4,\n          [cassandra.types.distance.remote] : 10 * 4,\n        },\n      },\n\n      queryOptions : {\n        consistency : cassandra.types.consistencies.localQuorum,\n      },\n    });\n\n    // Log building to debug\n    logger.log('debug', 'connected cassandra', {\n      class : 'NFTBackend',\n    });\n  }\n}\n\n// export default\nconst backend = new NFTBackend();\n\n// export default\nexport default backend;"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","undefined","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","object","reverse","length","pop","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","arr","cb","len","match","parse","exec","require$$0","Trouter","opts","routes","handlers","all","add","bind","get","head","patch","options","connect","trace","post","put","pattern","fns","url","params","old","trouter","req","_parsedUrl","_raw","query","search","href","path","pathname","idx","indexOf","substring","http","Router","require$$1","require$$2","parser","require$$3","lead","x","charCodeAt","y","mutate","str","onError","res","code","statusCode","status","end","message","STATUS_CODES","Polka","apps","wares","bwares","server","handler","onNoMatch","base","toLowerCase","concat","r","_","nxt","createServer","on","listen","apply","arguments","find","originalUrl","num","loop","finished","polka","util","DriverError","captureStackTrace","inherits","NoHostAvailableError","innerErrors","hostList","host","format","ResponseError","DriverInternalError","AuthenticationError","ArgumentError","OperationTimedOutError","NotSupportedError","BusyConnectionError","address","maxRequestsPerConnection","connectionLength","errors","delay","ms","setTimeout","fromEvent","emitter","eventName","once","fromCallback","getCallback","invokeSequentially","index","counter","newQueryPlan","lbp","keyspace","executionOptions","optionalCallback","promise","callback","toCallback","times","count","limit","promises","Array","toBackground","process","nextTick","promiseUtils","net","EventEmitter","require$$4","maxInt","maxInt32","emptyObject","freeze","emptyArray","noop","allocBuffer","Buffer","alloc","allocBufferFillDeprecated","allocBufferUnsafe","allocUnsafe","allocBufferDeprecated","allocBufferFromString","Int8Array","from","allocBufferFromStringDeprecated","allocBufferFromArray","allocBufferFromArrayDeprecated","size","b","fill","text","encoding","inspect","isArray","callbackOnce","wrapperCallback","copyBuffer","buf","targetBuffer","copy","fixStack","stackTrace","stack","substr","log","furtherInfo","logEmitter","totalLength","total","item","extend","target","sources","source","toLowerCaseProperties","k","deepExtend","prop","targetProp","targetType","isDate","propCompare","propName","a","funcCompare","argArray","valA","valB","arrayIterator","iteratorToArray","binarySearch","compareFunc","low","high","mid","midVal","cmp","insertSorted","position","splice","validateFn","adaptNamedParamsPrepared","columns","paramsArray","adaptNamedParamsWithHints","execOptions","namedParameters","keyIndexes","hints","userHints","getHints","setHints","stringRepeat","val","join","objectValues","promiseWrapper","originalCallback","factory","promiseFactory","defaultPromiseFactory","handlerWrapper","executor","handlerCallback","ifUndefined","v1","v2","ifUndefined3","v3","shuffleArray","j","Math","floor","random","temp","HashSet","items","contains","remove","toArray","AddressResolver","nameOrIp","dns","_resolve4","promisify","resolve4","_nameOrIp","_isIp","isIP","_index","_addresses","_refreshing","_resolve","setMaxListeners","emit","each","completed","eachSeries","sync","forEachOf","mapEach","map","useIndex","invokeWithIndex","invokeWithoutIndex","mapItemCallback","transformed","mapSeries","parallel","series","iteratorFunc","timesLimit","min","captureIndex","timesSeries","iteratorFunction","whilst","condition","utils","AddressTranslator","translate","port","EC2MultiRegionTranslator","newAddress","hostNames","lookup","lookupAddress","logError","addressResolution","global","require","this","Long","unsigned","isLong","INT_CACHE","UINT_CACHE","fromInt","cachedObj","fromNumber","isFinite","ZERO","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","negate","TWO_PWR_32_DBL","fromBits","lowBits","highBits","fromString","radix","p","radixToPower","pow","parseInt","power","multiply","fromValue","TWO_PWR_16_DBL","TWO_PWR_24_DBL","TWO_PWR_24","UZERO","ONE","UONE","NEG_ONE","toInt","toNumber","toString","RangeError","isZero","rem","isNegative","equals","radixLong","div","divide","subtract","remDiv","intval","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","isPositive","isOdd","isEven","other","eq","notEquals","neq","lessThan","compare","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","thisNeg","otherNeg","not","neg","addend","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","subtrahend","sub","multiplier","mul","divisor","approx","halfThis","shiftRight","shiftLeft","max","log2","ceil","LN2","delta","approxRes","approxRem","modulo","mod","and","or","xor","numBits","shl","shr","shiftRightUnsigned","shru","toSigned","toUnsigned","crypto","Uuid","buffer","replace","getRandomBytes","createUuidFromBuffer","getBuffer","hexValue","getHex","toJSON","uuid","randomBytes","_unixToGregorian","_ticksInMs","minNodeId","minClockId","maxNodeId","maxClockId","_ticks","_ticksForCurrentTime","_lastTimestamp","TimeUuid","ticks","nodeId","clockId","generateBuffer","fromDate","date","getOrGenerateRandom","timeUuid","e","now","getDatePrecision","timeLow","readUInt32BE","timeHigh","ticksInMsLong","time","Date","getDate","getNodeId","getClockId","getNodeIdString","writeTime","writeUInt32BE","writeUInt16BE","getTicks","getTimeWithTicks","getTime","id","timeWithTicks","_versionPattern","VersionNumber","major","minor","dsePatch","preReleases","build","preRelease","thisPatch","otherPatch","version","split","versionNumber","v200","v210","v220","v300","v510","v600","protocolVersion","v4","v5","v6","dseV1","dseV2","maxSupported","minSupported","isDse","isSupportedCassandra","isSupported","supportsPrepareFlags","supportsKeyspaceInRequest","supportsResultMetadataId","supportsPreparedPartitionKey","supportsSchemaChangeFullMetadata","supportsContinuousPaging","supportsPaging","supportsTimestamp","supportsNamedParameters","supportsUnset","supportsFailureReasonMap","uses2BytesStreamIds","uses4BytesCollectionLength","uses4BytesQueryFlags","canStartupResponseErrorBeWrapped","getLowerSupported","getHighestCommon","connection","hosts","maxVersion","v3Requirement","maxVersionWith3OrMore","h","dseVersion","cassandraVersion","addendum","isBeta","protocolVersion_1","Integer","bits","sign","bits_","sign_","top","IntCache_","TWO_PWR_32_DBL_","opt_radix","fromBuffer","offset","byte","readInt32BE","toBuffer","unshift","group","writeInt32BE","TWO_PWR_24_","getBitsUnsigned","getBits","getSign","diff","shorten","arr_index","bit_index","sigBits","carry","a1","a0","b1","b0","c0","c1","carry16_","arr_delta","bit_delta","abs","integer","BigDecimal","unscaledValue","scale","_intVal","_scale","unscaledValueBuffer","scaleBuffer","trim","scaleIndex","textValue","toFixed","first","diffScale","intString","signSymbol","separatorIndex","parseFloat","bigDecimal","reusableBuffers","months","days","nanoseconds","longOneThousand","nanosPerMicro","nanosPerMilli","nanosPerSecond","nanosPerMinute","nanosPerHour","daysPerWeek","monthsPerYear","standardRegex","iso8601Regex","iso8601WeekRegex","iso8601AlternateRegex","Duration","lengthMonths","VIntCoding","writeVInt","lengthDays","lengthNanoseconds","append","dividend","unit","append64","remainder","nanos","readVInt","input","parseIso8601WeekFormat","parseIso8601AlternativeFormat","parseIso8601Format","parseStandardFormat","builder","Builder","lastIndex","matches","addYears","addMonths","addDays","addHours","addMinutes","addSeconds","addWeeks","_isNegative","_unitIndex","_months","_days","_nanoseconds","_addMethods","addMillis","addMicros","addNanos","_unitByIndex","_validateOrder","unitIndex","_getUnitName","_validateMonths","units","monthsPerUnit","_validate32","_validateDays","daysPerUnit","_validateNanos","nanosPerUnit","_validate64","unitName","symbol","addMethod","years","weeks","hours","minutes","seconds","millis","micros","encodeZigZag64","n","decodeZigZag64","writeUnsignedVInt","computeUnsignedVIntSize","encodeVInt","magnitude","numberOfLeadingZeros","extraBytes","intValue","intBytes","encodeExtraBytesToRead","extraBytesToRead","readUnsignedVInt","firstByte","sByteInt","fromSignedByteToInt","numberOfExtraBytesToRead","firstByteValueMask","ii","numberOfLeadingZerosInt32","duration","InetAddress","ipv4Pattern","ipv6Pattern","parts","test","filling","applied","embeddedIp4","writeItem","uIntValue","writeUInt8","isValidIPv4Mapped","start","longest","checkLongest","inetAddress","millisecondsPerDay","dateCenter","LocalDate","year","month","day","setUTCHours","setUTCFullYear","_value","getUTCFullYear","getUTCMonth","getUTCDate","utcNow","getFullYear","getMonth","dashCount","thisValue","otherValue","daysSinceEpoch","fillZeros","amount","localDate","maxNanos","nanoSecInSec","nanoSecInMillis","millisInDay","LocalTime","totalNanoseconds","hour","_getParts","minute","second","nanosecond","secParts","fromMilliseconds","getTimezoneOffset","milliseconds","getTotalNanoseconds","formatTime","_partsCache","secs","lastPosition","localTime","ResultSet","response","triedHosts","speculativeExecutions","consistency","isSchemaInAgreement","queriedHost","achievedConsistency","traceId","warnings","customPayload","flags","rows","rowLength","pageState","nextPage","nextPageAsync","meta","getPageState","getColumns","wasApplied","firstRow","getIterator","getAsyncGenerator","rawPageState","rs","isPaged","resultSet","Readable","clientOptions","ResultStream","opt","paused","_cancelAllowed","_handlersObject","_highWaterMarkRows","_readableState","reading","shift","_checkBelowHighWaterMark","_readNext","readNext","chunk","read","_checkAboveHighWaterMark","resumeReadingHandler","cancelHandler","continuousPaging","highWaterMarkRows","continuousPageDefaultHighWaterMark","resultStream","Row","columnName","__columns","valuesArray","keysArray","row","Tuple","args","elements","fromArray","reduce","tuple","require$$5","require$$6","consistencies","any","one","two","three","quorum","localQuorum","eachQuorum","serial","localSerial","localOne","consistencyToString","dataTypes","custom","ascii","bigint","blob","decimal","timestamp","varchar","varint","timeuuid","inet","smallint","tinyint","list","set","udt","getByName","listMatches","mapMatches","udtMatches","tupleMatches","typeInfo","_dataTypesByCode","distance","local","remote","ignored","opcodes","startup","ready","authenticate","credentials","supported","prepare","execute","register","event","batch","authChallenge","authResponse","authSuccess","cancel","isInRange","protocolEvents","topologyChange","statusChange","schemaChange","responseErrorCodes","serverError","protocolError","badCredentials","unavailableException","overloaded","isBootstrapping","truncateError","writeTimeout","readTimeout","readFailure","functionFailure","writeFailure","syntaxError","unauthorized","invalid","configError","alreadyExists","unprepared","clientWriteFailure","resultKind","voidResult","setKeyspace","prepared","frameFlags","compression","tracing","warning","unset","_longOneThousand","_timestampTicks","msecs","node","clockseq","nsecs","getDataTypeNameByCode","typeName","t","FrameHeader","streamId","opcode","bodyLength","getProtocolVersion","readUInt8","readInt8","readInt16BE","writeInt8","writeInt16BE","generateTimestamp","microseconds","longMicro","QueryParserError","super_","internalError","TimeoutError","types","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","doneIteratorObject","newlyUpInterval","LoadBalancingPolicy","init","client","getDistance","getOptions","Map","RoundRobinPolicy","planIndex","DCAwareRoundRobinPolicy","localDc","localHostsArray","_cleanHostCache","setLocalDc","datacenter","_resolveLocalHosts","planLocalIndex","TokenAwarePolicy","childPolicy","routingKey","getRoutingKey","getKeyspace","replicas","getReplicas","TokenAwareIterator","iterate","localReplicas","replicaIndex","replicaMap","childIterator","startIndex","computeNext","AllowListPolicy","allowList","_contains","_filter","WhiteListPolicy","DefaultLoadBalancingPolicy","_client","_hosts","_filteredHosts","_preferredHost","filter","_defaultFilter","isHostNewlyUp","_isHostNewlyUp","healthCheck","_healthCheck","_compare","_getReplicas","preferredHost","getPreferredHost","_getLocalHosts","_getReplicasAndLocalHosts","_getPreferredHostFirst","_getFilteredLocalHosts","initialIndex","_getIndex","canBeYield","isUp","filteredReplicas","newlyUpReplica","newlyUpReplicaTimestamp","Number","MIN_SAFE_INTEGER","unhealthyReplicas","isUpSince","yieldReplicasFirst","_sendUnhealthyToTheBack","getInFlight","getResponseCount","h1","h2","targetIndex","localDataCenter","dcs","getDataCenters","has","Set","loadBalancing","ReconnectionPolicy","newSchedule","ConstantReconnectionPolicy","ExponentialReconnectionPolicy","baseDelay","maxDelay","startWithNoDelay","_addJitter","minPercentage","range","reconnection","RetryPolicy","onUnavailable","required","alive","nbRetry","rethrowResult","retryResult","onReadTimeout","received","blockFor","isDataPresent","onWriteTimeout","writeType","onRequestError","useCurrentHost","decision","retryDecision","retry","rethrow","ignore","IdempotenceAwareRetryPolicy","_childPolicy","isIdempotent","FallthroughRetryPolicy","SpeculativeExecutionPolicy","shutdown","newPlan","queryInfo","NoSpeculativeExecutionPolicy","_plan","nextExecution","ConstantSpeculativeExecutionPolicy","maxSpeculativeExecutions","_delay","_maxSpeculativeExecutions","executions","speculativeExecution","_maxSafeNumberDate","TimestampGenerator","MonotonicTimestampGenerator","warningThreshold","minLogInterval","_warningThreshold","_minLogInterval","_micros","_lastDate","_lastLogDate","drifted","_generateMicroseconds","lastDate","currentLogDate","timestampGeneration","policies","defaultAddressTranslator","defaultLoadBalancingPolicy","defaultRetryPolicy","defaultReconnectionPolicy","defaultSpeculativeExecutionPolicy","defaultTimestampGenerator","RequestTracker","parameters","requestLength","responseLength","latency","requestTracker","events","nanosToMillis","defaultMessageMaxQueryLength","defaultMaxParameterValueLength","defaultMaxErrorStackTraceLength","RequestLogger","_options","logNormalRequests","logErroredRequests","slowThreshold","toMillis","_logSlow","requestSizeThreshold","_logLargeRequest","_logNormalRequest","_logLargeErrorRequest","_logErrorRequest","getPayloadSizes","getStatementInfo","maxStackTraceLength","messageMaxErrorStackTraceLength","maxQueryLength","messageMaxQueryLength","maxParameterLength","messageMaxParameterValueLength","getBatchStatementInfo","remaining","getParametersInfo","isPrepared","queries","isBatchLogged","q","queryLength","paramStringifier","formatParam","paramString","maxLength","formatSize","round","requestLogger","tracker","ClientMetrics","clientMetrics","DefaultMetrics","authentication","clientTimeout","unavailable","retries","ignoredErrors","responses","success","defaultMetrics","metrics","AuthProvider","newAuthenticator","endpoint","Authenticator","initialResponse","evaluateChallenge","challenge","onAuthenticationSuccess","token","provider","PlainTextAuthProvider","username","password","PlainTextAuthenticator","initialToken","plainTextAuthProvider","dseAuthenticatorName","BaseDseAuthenticator","authenticatorName","getMechanism","getInitialServerChallenge","_isDseAuthenticator","baseDseAuthenticator","GssapiClient","authorizationId","service","kerberosModule","StandardGssClient","initializeClient","kerberos","transitionIndex","uri","gssFlags","GSS_C_MUTUAL_FLAG","kerberosClient","step","charPointerChallenge","unwrap","wrapped","user","gssapiClient","mechanism","initialServerChallenge","emptyBuffer","DseGssapiAuthProvider","gssOptions","_kerberos","newErr","hostNameResolver","lookupServiceResolver","GssapiAuthenticator","ip","lookupService","reverseDnsResolver","hostname","names","useIpResolver","createNew","getHostName","initClient","dseGssapiAuthProvider","separatorBuffer","DsePlainTextAuthProvider","authenticatorId","dsePlainTextAuthProvider","dseAuthenticator","NoAuthProvider","TransitionalModePlainTextAuthenticator","NoAuthAuthenticator","noAuthProvider","auth","coreConnectionsPerHostV2","coreConnectionsPerHostV3","maxRequestsPerConnectionV2","maxRequestsPerConnectionV3","continuousPageUnitBytes","continuousPageDefaultSize","defaultOptions","queryOptions","fetchSize","protocolOptions","maxSchemaAgreementWaitSeconds","noCompact","pooling","heartBeatInterval","warmup","socketOptions","connectTimeout","defunctReadTimeoutThreshold","keepAlive","keepAliveDelay","tcpNoDelay","coalescingThreshold","authProvider","maxPrepared","refreshSchemaDelay","isMetadataSyncEnabled","prepareOnAllHosts","rePrepareOnUp","useUndefinedAsUnset","monitorReporting","enabled","baseOptions","userOptions","cloud","contactPoints","hostName","sni","validateCloudOptions","validatePoliciesOptions","validateProtocolOptions","validateSocketOptions","validateAuthenticationOptions","validateEncodingOptions","profiles","validateApplicationInfo","validateMonitorReporting","bundle","secureConnectBundle","URL","sslOptions","policiesOptions","encodingOptions","mapConstructor","setConstructor","useBigIntAsLong","useBigIntAsVarint","BigInt","validateString","o","setMetadataDependent","controlConnection","coreConnectionsPerHost","metadata","isDbaas","ExecutionProfile","graphOptions","serialConsistency","language","results","readConsistency","writeConsistency","ProfileManager","_profiles","_defaultConfiguredRetryPolicy","_setDefault","_loadBalancingPolicies","_profilesMap","_customPayloadCache","_graphOptionsCache","_defaultProfile","d","setDistance","profile","createHandler","executionProfile","FrameWriter","buffers","bytes","writeInt","writeShort","byteLength","write","writeString","payload","writeBytes","header","headerBuffer","WriteQueue","netClient","encoder","isRunning","queue","canWrite","run","operation","writePushError","callbacks","canBeWritten","data","request","setWriteError","setImmediate","isSocketError","requestNotWritten","innerError","writers","proxyExecuteKey","ExecutionOptions","routingIndexes","DefaultExecutionOptions","rowCallback","_queryOptions","_rowCallback","_routingKey","_hints","_keyspace","_routingIndexes","_pageState","_defaultQueryOptions","_profile","profileManager","getProfile","_customPayload","createCustomPayload","autoPage","logged","traceQuery","getTimestamp","routingNames","defaultQueryOptions","executeAs","packageInfo","queryFlag","skipMetadata","pageSize","withPagingState","withSerialConsistency","withDefaultTimestamp","withNameForValues","withKeyspace","withPageSizeBytes","withContinuousPaging","batchFlag","prepareFlag","batchType","unlogged","Request","newRequest","ExecuteRequest","queryId","empty","getConsistency","columnInfo","frameWriter","headerFlags","isQueryTracing","getCustomPayload","writeCustomPayload","writeShortBytes","resultId","writeQueryParameters","isQuery","getOrGenerateTimestamp","getFetchSize","getSerialConsistency","supportsKeyspace","writeByte","paramValue","encode","getParamType","writeLong","QueryRequest","writeLString","PrepareRequest","StartupRequest","startupOptions","CQL_VERSION","cqlVersion","DRIVER_NAME","description","DRIVER_VERSION","clientId","applicationName","applicationVersion","writeStringMap","RegisterRequest","writeStringList","AuthResponseRequest","CredentialsRequest","BatchRequest","isBatchCounter","eachQuery","param","CancelRequest","operationId","OptionsRequest","requests","ClientState","openConnections","inFlightQueries","_openConnections","_inFlightQueries","hostArray","pool","connections","clientState","MutableLong","_arr","toImmutable","_compareBits","toZero","remainingBits","pos","clone","low32Bits","high32Bits","mutableLong","_Murmur3TokenType","_RandomTokenType","_OrderedTokenType","Token","Murmur3Token","RandomToken","ByteOrderedToken","toUpperCase","TokenRange","tokenizer","numberOfSplits","isEmpty","tokenRanges","splitPoints","_tokenizer","splitStart","splitEnd","splitIndex","minToken","isWrappedAround","isAfterStart","isBeforeEnd","compareStart","dateRegex","multipleBoundariesRegex","unbounded","DateRangeBound","dateRangeType","singleValue","closedRange","openRangeHigh","openRangeLow","openBoth","openSingle","dateRangePrecision","millisecond","DateRange","lowerBound","upperBound","_type","boundary","writeDate","precision","dateRangeString","toLowerBound","toUpperBound","date1","readDate","date2","long","isoString","toISOString","char","firstChar","toRemoveIndex","datesEqual","d1","d2","t1","t2","isUnbounded","boundaryString","BoundaryBuilder","bound","rounded","setUTCMonth","setUTCDate","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","_sign","_values","Int32Array","stringDate","numValue","dateRange","dateRangeModule","endianness","Geometry","Point2D","LineString","Polygon","getEndianness","readInt32","readInt32LE","readDouble","readDoubleBE","readDoubleLE","writeInt32","useBESerialization","writeInt32LE","writeDouble","writeDoubleBE","writeDoubleLE","writeEndianness","geometry","Point","wktRegex","coordinates","point","points","parseSegments","pointParts","xyText","element","lineString","ringPoints","rings","ringsLength","ringsArray","ringIndex","pointsLength","ring","construct","validateWkt","ringsText","ringStart","c","argsArray","F","totalRingsLength","r1","r2","ringStrings","polygon","geo","uuidRegex","int16Zero","int32Zero","int8Zero","int8One","int8MaxValue","isBigIntSupported","bigInt32","bigInt8","bigInt0","bigIntMinus1","bigInt32BitsOn","bigInt8BitsOn","complexTypeNames","frozen","reversed","composite","collection","cqlNames","singleTypeNames","singleFqTypeNamesLength","previous","current","customTypeNames","nullValueBuffer","unsetValueBuffer","zeroLengthTypesSupported","Encoder","defineInstanceMembers","setProtocolVersion","setEncoders","handleBuffer","handleBufferCopy","handleBufferRef","decodeCollectionLength","decodeCollectionLengthV3","getLengthBuffer","getLengthBufferV3","collectionLengthSize","decodeCollectionLengthV2","getLengthBufferV2","customDecoders","decodeDuration","decodeLineString","decodePoint","decodePolygon","decodeDateRange","customEncoders","encodeDuration","encodeLineString","encodePoint","encodePolygon","encodeDateRange","decodeBlob","decodeCustom","decodeUtf8String","decodeAsciiString","decodeBoolean","decodeDouble","decodeFloat","readFloatBE","decodeInt","decodeSmallint","decodeTinyint","_decodeCqlLongAsLong","_decodeCqlLongAsBigInt","asIntN","decodeLong","_decodeVarintAsInteger","_decodeVarintAsBigInt","decodeVarintAsBigInt","decodeVarint","decodeDecimal","decodeTimestamp","decodeDate","decodeTime","decodeList","subtype","totalItems","decode","decodeSet","decodeMap","subtypes","readValues","thisArg","keyLength","valueLength","decodeUuid","decodeTimeUuid","decodeInet","decodeUdt","udtInfo","fields","field","decodeTuple","tupleInfo","encodeFloat","writeFloatBE","encodeDouble","encodeTimestamp","originalValue","encodeLong","encodeDate","encodeTime","encodeUuid","encodeInet","_encodeBigIntFromLong","_encodeBigIntFromBigInt","_encodeVarintFromInteger","_encodeVarintFromBigInt","encodeVarint","encodeDecimal","encodeString","encodeUtf8String","encodeAsciiString","encodeBlob","encodeCustom","encodeBoolean","encodeInt","encodeSmallint","encodeTinyint","encodeList","encodeSet","encodeMap","propCounter","keySubtype","valueSubtype","addItem","keyBuffer","valueBuffer","encodeUdt","lengthBuffer","encodeTuple","setRoutingKeyFromUser","userRoutingKey","setRoutingKey","concatRoutingKey","getRoutingIndexes","getRoutingNames","encodeParam","_encodeRoutingKeyParts","setRoutingKeyFromMeta","paramIndex","parseTypeName","udtResolver","dataType","innerTypes","parseParams","_parseChildTypes","quoted","typeCode","typeNames","parseFqTypeName","_parseUdtName","parseKeyTypes","typesString","isComposite","nested","inCollectionType","hasCollections","udtParams","fieldType","decoders","encoders","decoder","guessDataType","esTypeName","readUInt16BE","open","close","paramStart","level","resultFlag","globalTablesSpec","hasMorePages","noMetadata","metadataChanged","lastContinuousPage","_writeTimeoutQueryMessage","_writeTimeoutBatchLogMessage","_writeFailureMessage","_unavailableMessage","_readTimeoutMessage","_readFailureMessage","FrameReader","body","begin","readShort","checkOffset","newLength","expectedLength","readString","readInt","keyFn","valueFn","readStringList","readType","readByte","readMap","readBytes","kind","readShortBytes","columnLength","partitionKeys","newResultId","continuousPageIndex","global_tables_spec","table","columnsByName","col","ksname","tablename","failures","reasons","readInetAddress","details","template","functionName","argTypes","eventType","added","readInet","up","parseSchemaChange","schemaChangeType","isKeyspace","signature","aggregate","readers","Transform","Writable","Protocol","clearHeaderChunks","headerSize","_transform","readItems","currentHeader","headerChunks","headerPart","frameEnded","Parser","streamOptions","frames","frameInfo","frameState","parseBody","cellBuffer","isStreaming","byRow","handleFrameBuffers","reader","flagsInfo","originalOffset","readFlagsInfo","handleParsingError","parseResult","mustAuthenticate","readError","readStringMultiMap","readEvent","currentLength","bufferLength","addFrameBuffer","getFrameBuffer","readMetadata","keyspaceSet","preparedId","emitted","remainingLength","parseRows","parsingError","rowIndex","rowOffset","byRowCompleted","setOptions","clearOptions","bufferResultCell","ResultEmitter","rowBuffer","_write","bufferAndEmit","streams","groupSize","shiftToGroup","releasableSize","maxGroupsFor2Bytes","defaultReleaseDelay","StreamIdStack","currentGroup","generateGroup","groupIndex","groups","releaseTimeout","setVersion","inUse","releaseDelay","maxGroups","_tryCreateGroup","_tryIssueRelease","clearTimeout","_releaseGroups","initialValue","streamIdStack","timedOut","cancelled","OperationState","_callback","_timeout","_state","_rowIndex","defaultReadTimeout","onTimeout","onResponse","getReadTimeout","requestTimedOut","_markAsTimedOut","_markAsCompleted","setResult","_swapCallbackAndInvoke","newCallback","operationState","tls","Connection","endpointFriendlyName","_serverName","addressResolver","getIp","portSeparatorIndex","lastIndexOf","_checkingVersion","_operations","_pendingWrites","_preparing","_idleTimeout","timedOutOperations","_streamIds","_metrics","emitDrain","connected","isSocketOpen","send","sendStream","closeAsync","openAsync","prepareOnceAsync","prepareOnce","removeAllListeners","wasConnected","protocol","objectMode","resultEmitter","handleResult","handleRow","freeStreamId","handleNodeEvent","pipe","writeQueue","Socket","highWaterMark","connectCallback","bindSocketListeners","rejectUnauthorized","servername","tlsConnectCallback","setMaxSendFragment","socketError","errorConnecting","connectTimedOut","setKeepAlive","setNoDelay","responseCallback","invalidProtocol","lowerVersion","startupCallback","decreaseVersion","decreasingVersionClosing","decreasingVersionOpening","startAuthenticating","connectionReady","destroy","onConnectionError","handleSocketError","clearAndInvokePending","clear","operations","pendingWritesCopy","authenticator","initialResponseCallback","onAuthenticationError","authResponseCallback","authError","additionalInfo","evaluateCallback","toBeKeyspace","getRowCallback","_getStreamId","setRequestTimeout","writeCallback","isByRow","_setIdleTimeout","previousTimeout","_idleTimeoutHandler","sendingIdleQuery","_writeNext","writeNextPending","setResultRow","endTimeout","hadError","localAddress","connectionIndex","connectionIndexOverflow","initial","closing","shuttingDown","shutDown","HostConnectionPool","_address","_newConnectionTimeout","_opening","_host","responseCounter","coreConnectionsLength","sum","previousConnection","maxRequests","minInFlight","_attemptNewConnection","changeKeyspace","endpointOrServerName","hostId","_addListeners","connectionErrorCallback","_createConnection","isClosing","newConnections","openConnection","clearNewConnectionAttempt","scheduleNewConnectionAttempt","removeClose","newConnectionTimeoutExpired","refresh","hasScheduledNewConnection","_afterClosing","closedConnections","wasClosed","checkShutdownTimeout","getDelayedClose","delayedClose","getDefaultOptions","checkShutdown","connectionEach","resetState","previousState","_closeAllConnections","hostConnectionPool","PrepareHandler","_loadBalancing","preparing","_prepareWithQueryPlan","getNextHost","_borrowWithKeyspace","_prepareOnAllHosts","setPreparedById","_borrowAndPrepare","getPreparedInfo","instance","_prepare","getPrepared","allPrepared","anyKeyspaceQueries","queriesByKeyspace","borrowConnection","prepareHandler","healthResponseCountInterval","Host","setDownAt","_onNewConnectionOpen","_checkPoolState","rack","tokens","workloads","_distance","_healthResponseCounter","reconnectionSchedule","reconnectionDelay","clearReconnection","attemptNewConnectionImmediate","waitForPending","_healthResponseCountTimer","clearInterval","drainAndShutdown","hasTimePassed","previousDistance","checkIsUp","setInterval","getAndResetResponseCounter","increaseSize","removeFromPool","shouldHaveConnections","setDown","_metadata","getAllPrepared","prepareAllQueries","setUp","HostMap","_items","removedHosts","v","previousItems","fromEntries","mconst1","mconst2","mlongFive","mconst3","mconst4","mconst5","mconst6","Tokenizer","ringEnd","ringLength","numberOfSplitsInt","divider","dividerPlusOne","getValue","Murmur3Tokenizer","nblocks","k1","k2","getBlock","rotl64","fromSignedByte","fmix","i8","blockOffset","left","getUint16","_minToken","_maxToken","_maxValue","_minValue","_ringLength","maxValue","minValue","maxToken","startVal","endVal","splitBase","RandomTokenizer","_crypto","hashedValue","createHash","update","digest","ByteOrderedTokenizer","zeroIndex","hash","significantBytes","number","tokenOrder","intNumberOfSplits","addedBytes","_toNumber","_toBuffer","DataCollection","bloomFilterFalsePositiveChance","caching","comment","gcGraceSeconds","compactionClass","compactionOptions","localReadRepairChance","readRepairChance","extensions","crcCheckChance","populateCacheOnFlush","defaultTtl","speculativeRetry","minIndexInterval","maxIndexInterval","clusteringKeys","clusteringOrder","nodesync","dataCollection","TableMetadata","replicateOnWrite","memtableFlushPeriod","indexInterval","isCompact","indexes","cdc","virtual","tableMetadata","Aggregate","keyspaceName","argumentTypes","stateFunction","stateType","finalFunction","initConditionRaw","initCondition","returnType","deterministic","SchemaFunction","argumentNames","calledOnNullInput","monotonic","monotonicOn","schemaFunction","composites","Index","getKindByName","isCompositesKind","isKeysKind","isCustomKind","fromRows","indexRows","fromColumnRows","columnRows","indexName","JSON","schemaIndex","MaterializedView","tableName","whereClause","includeAllColumns","materializedView","_selectAllKeyspacesV1","_selectSingleKeyspaceV1","_selectAllKeyspacesV2","_selectSingleKeyspaceV2","_selectTableV1","_selectTableV2","_selectColumnsV1","_selectColumnsV2","_selectIndexesV2","_selectUdtV1","_selectUdtV2","_selectFunctionsV1","_selectFunctionsV2","_selectAggregatesV1","_selectAggregatesV2","_selectMaterializedViewV2","_selectAllVirtualKeyspaces","_selectSingleVirtualKeyspace","_selectVirtualTable","_selectVirtualColumns","SchemaParser","cc","selectTable","selectColumns","selectIndexes","selectUdt","selectAggregates","selectFunctions","supportsVirtual","durableWrites","strategy","strategyOptions","udts","tables","functions","aggregates","views","tokenToReplica","getTokenToReplicaMapper","graphEngine","waitReconnect","cache","tableInfo","loaded","loading","virtualTable","_getFirstRow","tableRow","_getRows","_parseTableOrView","_parseUdt","_parseFunction","_parseAggregate","functionsInfo","funcs","f","SchemaParserV1","keyspaces","ksInfo","_createKeyspace","getEncoder","columnsKeyed","isStatic","order","sort","keysStoredInTableRow","comparator","initConditionValue","func","fieldNames","fieldTypes","SchemaParserV2","_parseKeyspace","viewInfo","replication","ks","isView","stringify","compaction","_asMap","_mapAsObject","_getIndexes","isDense","isSuper","isCompound","isStaticCompact","pruneStaticCompactTableColumns","pruneDenseTableColumns","SchemaParserV3","_getKeyspace","rf","getTokenToReplicaSimpleMapper","getTokenToReplicaNetworkMapper","noStrategy","primaryReplicas","replicationFactor","tokenSimpleStrategy","ringTokensAsStrings","tokenReplicas","nextReplicaIndex","nextReplica","replicationFactors","tokenNetworkStrategy","datacenters","replicasByDc","racksPlaced","skippedHosts","dc","dcRf","hostLength","dcReplicas","racksPlacedInDc","racks","addSkippedHosts","isDoneForToken","dcName","getByVersion","currentInstance","parserConstructor","schemaParser","schemaParserFactory","_selectTraceSession","_selectTraceEvents","_selectSchemaVersionPeers","_selectSchemaVersionLocal","_traceMaxAttemps","_traceAttemptDelay","Metadata","initialized","_isDbaas","_schemaParser","getUdt","_preparedQueries","PreparedQueries","partitionerName","allSorted","tokenString","_refreshKeyspace","_uninitializedError","refreshKeyspacesInternal","getKeyspaces","isBuffer","closestToken","_getKeyspaceReplicas","getTokenRanges","ranges","tokenRange","replicasForToken","components","isString","getOrAdd","getById","setById","getAll","_getUdt","_getTable","getTable","_getFunctionsWrapper","_getFunctions","functionsMap","_getSingleFunction","_getAggregates","_getMaterializedView","getMaterializedView","getFunctions","_getTrace","attempts","sessionRequest","eventsRequest","sessionResponse","sessionRow","requestType","coordinator","startedAt","clientAddress","eventsResponse","activity","elapsed","thread","_checkSchemaAgreement","compareSchemaVersions","hint","_checkUdtTypes","udtName","versions","response1","response2","logger","_maxPrepared","_mapByKey","_mapById","_logger","_getKey","_validateOverflow","toRemove","toRemoveLength","_queueOverflowThreshold","EventDebouncer","_queue","processNow","mainEvent","_slideDelay","keyspaceEvents","cqlObject","processQueue","eachKeyspace","mainEventCallback","eventDebouncer","selectPeers","selectLocal","newNodeDelay","metadataQueryAbortTimeout","schemaChangeTypes","created","updated","dropped","supportedProductTypeKey","supportedDbaas","ControlConnection","_addressTranslator","_reconnectionPolicy","_reconnectionSchedule","_isShuttingDown","_encoder","_debouncer","_profileManager","_triedHosts","_resolvedContactPoints","_contactPoints","_topologyChangeTimeout","_nodeStatusChangeTimeout","borrowHostConnection","_borrowHostConnection","createConnection","isIPv6","portNumber","standardEndpoint","resolvedAddressedByName","addressOrName","_addContactPoint","_resolveAll","addresses","addressInfo","_parseContactPoint","cp","_initializeConnection","wasRefreshCalled","removeListeners","removeListener","downOrIgnoredHandler","socketClosedHandler","startReconnecting","hostDown","_refresh","hostIterator","contactPointsIterator","contactPoint","initializing","isReconnecting","rsLocal","_setLocalInfo","rsPeers","setPeersInfo","highestCommon","reconnect","setCassandraVersion","getCassandraVersion","buildTokens","_borrowAConnection","refreshedContactPoints","getDefaultLoadBalancing","_refreshControlConnection","_refreshHosts","_registerToConnectionEvents","_setHealthListeners","_borrowFirstConnection","_getSupportedOptions","addExistingConnection","productType","setProductTypeAsDbaas","_nodeTopologyChangeHandler","_nodeStatusChangeHandler","_nodeSchemaChangeHandler","_scheduleRefreshHosts","addressToTranslate","translateCallback","endPoint","handleSchemaChange","removeKeyspace","_scheduleObjectRefresh","_scheduleKeyspaceRefresh","clearTableState","clearUdtState","clearFunctionState","clearKeyspaceState","eventReceived","refreshKeyspace","setCurrentHost","localHost","setDseParameters","setPartitioner","peers","foundDataCenters","getAddressForPeerHost","isNewHost","removeMultiple","defaultPort","peer","bindAllAddress","resolve6","ipv4Promise","ipv6Promise","family","timeout","newConnectionListener","cqlQuery","queryOnConnection","_waitForReconnection","currentHosts","getLocalAddress","retryOnCurrentHost","rethrowDecision","errorCodes","none","socketErrorBeforeRequestWritten","serverErrorUnprepared","serverErrorOverloaded","serverErrorReadTimeout","serverErrorUnavailable","serverErrorWriteTimeout","serverErrorOther","metricsHandlers","onSuccessfulResponse","onClientTimeoutError","onOtherError","onReadTimeoutError","onUnavailableError","onWriteTimeoutError","metricsRetryHandlers","onOtherErrorRetry","onClientTimeoutRetry","onReadTimeoutRetry","onUnavailableRetry","onWriteTimeoutRetry","RequestExecution","parent","_parent","_operation","_connection","_cancelled","_startTime","_retryCount","_request","_sendOnConnection","getNextConnection","handleNoHostAvailable","_handleError","_getErrorCode","hrtime","errorCode","_trackResponse","handleSchemaAgreementAndRefresh","agreement","setCompleted","_getResultSet","getPreparedById","_invokeMetricsHandler","onSuccess","getNextPageHandler","_prepareAndRetry","checkHealth","decisionInfo","_getDecision","onIgnoreError","_invokeMetricsHandlerForRetry","_retry","operationInfo","retryPolicy","getRetryPolicy","restart","requestExecution","RequestHandler","_speculativeExecutionPlan","stackContainer","_hostIterator","_resolveCallback","_rejectCallback","_newExecutionTimeout","_executions","getCaptureStackTrace","getLoadBalancingPolicy","fixedHost","getFixedHost","_startNewExecution","isSpecExec","onSpeculativeExecution","wasCancelled","execution","_scheduleSpeculativeExecution","nextPageHandler","setPageState","getActiveConnection","requestHandler","os","fs","minDse6Version","minDse51Version","dse600Version","rpc","maxStatusErrorLogs","InsightsClient","_sessionId","_enabled","_closed","_firstTimeout","_recurrentTimeout","_statusErrorLogs","_statusEventDelay","statusEventDelay","_errorCallback","errorCallback","_dseSupportsInsights","_init","_sendStartupEvent","firstDelay","_sendStatusEvent","_getStartupMessage","_getStatusEvent","acc","versionArr","getDseVersion","_getAppInfo","appInfo","insightMappingId","insightType","tags","driverName","driverVersion","sessionId","applicationNameWasGenerated","mapToObject","getResolvedContactPoints","dataCenters","_getDataCenters","initialControlConnection","executionProfiles","getExecutionProfiles","poolSizeByHostDistance","heartbeatInterval","reconnectionPolicy","getPolicyInfo","ssl","certValidation","getConstructor","otherOptions","platformInfo","platform","release","arch","cpus","model","v8","uv","openssl","configAntiPatterns","_getConfigAntiPatterns","periodicStatusInterval","sslWithoutCertValidation","remoteConnectionsLength","readPromise","main","filename","packageInfoPath","dirname","_readPackageInfoFile","readFile","getState","connectedNodes","getConnectedHosts","getOpenConnections","getInFlightQueries","insightsClient","policy","getConsistencyString","defaultProfile","getDefault","setExecutionProfileProperties","output","setExecutionProfileItem","defaultGraphOptions","valueGetter","fileSystem","originalFs","constants","LOCHDR","LOCSIG","LOCVER","LOCFLG","LOCHOW","LOCTIM","LOCCRC","LOCSIZ","LOCLEN","LOCNAM","LOCEXT","EXTSIG","EXTHDR","EXTCRC","EXTSIZ","EXTLEN","CENHDR","CENSIG","CENVEM","CENVER","CENFLG","CENHOW","CENTIM","CENCRC","CENSIZ","CENLEN","CENNAM","CENEXT","CENCOM","CENDSK","CENATT","CENATX","CENOFF","ENDHDR","ENDSIG","ENDSUB","ENDTOT","ENDSIZ","ENDOFF","ENDCOM","END64HDR","END64SIG","END64START","END64OFF","END64NUMDISKS","ZIP64SIG","ZIP64HDR","ZIP64LEAD","ZIP64SIZE","ZIP64VEM","ZIP64VER","ZIP64DSK","ZIP64DSKDIR","ZIP64SUB","ZIP64TOT","ZIP64SIZB","ZIP64OFF","ZIP64EXTRA","STORED","SHRUNK","REDUCED1","REDUCED2","REDUCED3","REDUCED4","IMPLODED","DEFLATED","ENHANCED_DEFLATED","PKWARE","BZIP2","LZMA","IBM_TERSE","IBM_LZ77","AES_ENCRYPT","FLG_ENC","FLG_COMP1","FLG_COMP2","FLG_DESC","FLG_ENH","FLG_PATCH","FLG_STR","FLG_EFS","FLG_MSK","FILE","BUFFER","NONE","EF_ID","EF_SIZE","ID_ZIP64","ID_AVINFO","ID_PFS","ID_OS2","ID_NTFS","ID_OPENVMS","ID_UNIX","ID_FORK","ID_PATCH","ID_X509_PKCS7","ID_X509_CERTID_F","ID_X509_CERTID_C","ID_STRONGENC","ID_RECORD_MGT","ID_X509_PKCS7_RL","ID_IBM1","ID_IBM2","ID_POSZIP","EF_ZIP64_OR_32","EF_ZIP64_OR_16","EF_ZIP64_SUNCOMP","EF_ZIP64_SCOMP","EF_ZIP64_RHO","EF_ZIP64_DSN","fsystem","pth","Constants","isWin","is_Obj","crcTable","Uint32Array","Utils","sep","statSync","makeDir","folder","mkdirSync","fpath","resolvedPath","stat","isFile","Errors","FILE_IN_THE_WAY","writeFileTo","content","overwrite","attr","existsSync","isDirectory","fd","openSync","chmodSync","writeSync","closeSync","writeFileToAsync","exists","exist","chmod","findFiles","findSync","dir","recursive","files","readdirSync","file","normalize","getAttributes","setAttributes","crc32update","crc","crc32","genCRCTable","off","methodToString","canonical","safeSuffix","posix","sanitize","prefix","l","basename","Uint8Array","readBigUInt64LE","swap64","INVALID_LOC","INVALID_CEN","INVALID_END","NO_DATA","BAD_CRC","UNKNOWN_METHOD","AVAIL_DATA","INVALID_DISTANCE","TO_MANY_CODES","INVALID_REPEAT_LEN","INVALID_REPEAT_FIRST","INCOMPLETE_CODES","INVALID_DYN_DISTANCE","INVALID_CODES_LEN","INVALID_STORE_BLOCK","INVALID_BLOCK_TYPE","CANT_EXTRACT_FILE","CANT_OVERRIDE","NO_ZIP","NO_ENTRY","DIRECTORY_CONTENT_ERROR","FILE_NOT_FOUND","NOT_IMPLEMENTED","INVALID_FILENAME","INVALID_FORMAT","fattr","_path","_obj","newAttr","_stat","directory","readonly","hidden","executable","mtime","atime","mode","console","warn","readOnly","decodeAttributes","encodeAttributes","isReadOnly","isHidden","isExecutable","mTime","aTime","utilModule","FileAttr","entryHeader","_verMade","_version","_flags","_method","_time","_crc","_compressedSize","_size","_fnameLen","_extraLen","_comLen","_diskStart","_inattr","_attr","_offset","_dataHeader","setTime","getHours","getMinutes","getSeconds","made","compressedSize","fileNameLength","extraLength","commentLength","diskNumStart","inAttr","fileAttr","encripted","entryHeaderSize","realDataOffset","fnameLen","extraLen","dataHeader","loadDataHeaderFromBinary","readUInt32LE","readUInt16LE","loadFromBinary","dataHeaderToBinary","writeUInt32LE","writeUInt16LE","entryHeaderToBinary","nr","mainHeader","_volumeEntries","_totalEntries","_commentLength","diskEntries","totalEntries","mainHeaderSize","ZIP64SIZ","toBinary","offs","headers","EntryHeader","MainHeader","deflater","inbuf","zlib","chunkSize","deflate","deflateRawSync","deflateAsync","tmp","createDeflateRaw","written","part","inflater","inflate","inflateRawSync","inflateAsync","createInflateRaw","randomFillSync","crctable","uMul","imul","pCrc32","bval","genSalt","salt","config","Initkeys","pw","pass","updateKeys","byteValue","make_decrypter","pwd","make_encrypter","decrypt","decrypter","_salter","encrypt","oldlike","encrypter","zipcrypto","methods","Deflater","Inflater","ZipCrypto","Headers","Methods","zipEntry","_entryHeader","_entryName","_comment","_isDirectory","uncompressedData","_extra","getCompressedDataFromZip","crc32OK","decompress","compressedData","compress","deflated","readUInt64LE","parseExtra","parseZip64ExtendedInformation","entryName","rawEntryName","lastChar","extra","getCompressedData","getCompressedDataAsync","setData","changed","getData","getDataAsync","packHeader","addpos","ZipEntry","zipFile","inBuffer","entryList","entryTable","loadedEntries","assign","noSort","readMainHeader","readEntries","iterateEntries","readNow","endStart","endOffset","commentEnd","sortEntries","localeCompare","entries","getEntryCount","getEntry","setEntry","deleteEntry","_self","getEntryChildren","child","compressToBuffer","dataBlock","entryHeaders","totalSize","dindex","entryNameLen","postHeader","dataLength","outBuffer","mh","toAsyncBuffer","onFail","onItemStart","onItemEnd","compress2Buffer","entryLists","ZipFile","get_Bool","def","get_Str","admZip","filetools","readFileSync","_zip","fixPath","zipPath","readFileAsync","readAsText","readAsTextAsync","deleteFile","addZipComment","getZipComment","addZipEntryComment","getZipEntryComment","updateFile","addLocalFile","localPath","zipName","addFile","addLocalFolder","RegExp","rx","filepath","relative","stats","addLocalFolderAsync","er0","er1","addLocalFolderPromise","props","isStat","Stats","fileattr","unix","getEntries","extractEntryTo","targetPath","maintainEntryPath","keepOriginalPermission","outFileName","children","childName","extractAllTo","utimesSync","extractAllToAsync","getPath","getError","msg","dirEntries","fileEntries","dirPath","dirAttr","er","filePath","err_1","succ","utimes","err_2","writeZip","targetFileName","zipData","ok","writeZipPromise","perm","toBufferPromise","ret","valueOf","https","AdmZip","cloudOptions","CloudOptions","parseZipFile","getMetadataServiceInfoAsync","checkServerIdentity","cert","serviceUrl","zipEntries","ca","zip","setSslOptions","setAuthProvider","getMetadataServiceInfo","regex","requestOptions","getServiceRequestError","contactInfo","abort","isParsingError","sniAddress","altNames","subjectaltname","cn","subject","CN","parsedAltNames","startsWith","hostParts","wildcard","checkParts","valid","some","reason","patternParts","hostSubdomain","patternSubdomain","patternSubdomainParts","includes","suffix","endsWith","GraphResultSet","rowParser","parsePlainJsonRow","getTraversers","traverser","bulk","parsed","GraphTypeWrapper","UdtGraphWrapper","asInt","asDouble","asFloat","asTimestamp","asUdt","wrappers","getTypeDefinitionByValue","getUdtTypeDefinitionByValue","getDefinitionByType","getUdtTypeDefinition","wrappedValue","complexTypeHelper","Element","label","Vertex","properties","Edge","outV","outVLabel","inV","inVLabel","adaptProperties","VertexProperty","Property","Path","labels","objects","structure","typeKey","valueKey","EdgeDeserializer","StringBasedTypeSerializer","UuidSerializer","LongSerializer","BigDecimalSerializer","BigIntegerSerializer","InetAddressSerializer","LocalDateSerializer","LocalTimeSerializer","InstantSerializer","BlobSerializer","PointSerializer","LineStringSerializer","PolygonSerializer","TupleSerializer","writer","adaptObject","DurationSerializer","UdtSerializer","valueRoot","definition","fieldName","udtWrapper","serializedValue","InternalSerializer","transformFn","_name","_transformFn","graphSONSerializerByCqlType","GraphTypeWrapperSerializer","s","serialize","serializersArray","getCustomSerializers","customSerializers","sConstructor","customTypeSerializers","getCustomTypeSerializers","EnumValue","elementName","direction","in_","graph","P","UnsupportedType","TextP","Traversal","Traverser","ts","TraversalStrategy","Bytecode","g","TypeSerializer","NumberSerializer","POSITIVE_INFINITY","NEGATIVE_INFINITY","NaN","DateSerializer","BytecodeSerializer","bytecode","getBytecode","resultValue","_serializeInstructions","sourceInstructions","steps","stepInstructions","instructions","PSerializer","operator","TextPSerializer","LambdaSerializer","EnumSerializer","TraverserSerializer","TraversalStrategySerializer","configuration","VertexSerializer","VertexPropertySerializer","PropertySerializer","EdgeSerializer","PathSerializer","Path3Serializer","TSerializer","DirectionSerializer","ArraySerializer","BulkSetSerializer","ix","iy","pair","MapSerializer","ListSerializer","SetSerializer","typeSerializers","GraphSON2Writer","_serializers","getDefaultSerializers","serializerConstructor","serializers","graphSON2Serializers","currentSerializer","canBeUsedFor","GraphSON3Writer","graphSON3Serializers","GraphSON2Reader","_deserializers","defaultDeserializers","getDefaultDeserializers","deserialize","graphSON2Deserializers","_deserializeObject","GraphSON3Reader","graphSON3Deserializers","graphSerializer","GraphSONWriter","GraphSONReader","consistencyNames","graphProtocol","graphson1","graphson2","graphson3","payloadKeys","getDefaultGraphOptions","getOrCreateGraphOptions","createDefaultOptions","profileOptions","graphLanguage","graphResults","graphSource","graphName","getConsistencyName","longBuffer","setPayloadKey","converter","loadConsistencyNames","propertyNames","GraphExecutionOptions","graphBaseOptions","defaultProfileRetryPolicy","_defaultGraphOptions","_graphSubProtocol","_graphLanguage","getRawQueryOptions","rowParserFactory","getGraphSubProtocol","queryWriterFactory","getGraphLanguage","graphReadConsistency","graphWriteConsistency","setCustomPayload","graphLanguageGroovyString","graphEngineCore","graphSON2Reader","graphSON2Writer","graphSON3Reader","graphSON3Writer","rowParsers","getRowParser","defaultWriters","getDefaultWriter","GraphExecutor","rawOptions","_handler","_defaultProfileRetryPolicy","getDefaultConfiguredRetryPolicy","_graphBaseOptions","getGraphSource","_getAnalyticsMaster","setPreferredHost","isQueryObject","setGraphLanguage","_setGraphProtocol","setGraphPayload","_buildGraphParameters","queryWriter","getQueryWriter","_writerFactory","_executeGraphQuery","_rowParserFactory","resultField","addressTranslator","getGraphName","setGraphSubProtocol","graphExecutor","require$$17","warmupLimit","Client","isShuttingDown","_graphExecutor","_execute","_connect","connecting","_warmup","_setHostListeners","executeGraph","eachRow","pageCallback","isAutoPage","stream","onFinish","_valve","pageValve","ex","eachRowFinished","eachRowFinishedImmediate","_batch","queryKeyspace","getPreparedMultiple","queryItems","_createBatchRequest","_shutdown","_waitForSchemaAgreement","maxWaitSeconds","versionsMatch","_createQueryRequest","_createExecuteRequest","getHostUpListener","getHostDownListener","hostAddedListener","hostRemovedListener","warmupPool","initializePool","_getEncoder","firstQuery","_setRoutingInfo","adaptUserHints","paramsInfo","setRoutingIndexes","Node","edges","Tree","keyIterator","valueHandler","isMatch","newBranch","_createBranch","nextNode","_onItemAdded","useNewValue","tree","QueryOperator","hasChildValues","isInOperator","QueryAssignment","inverted","notEq","condition1","condition2","incr","decr","prepend","q_1","qModule","Cache","docKeys","doc","docInfo","_yieldKeyAndOperators","_getSelectDocInfo","orderBy","ttl","ifNotExists","_yieldKeyAndAllQs","ifExists","when","deleteOnlyColumns","_yieldOperators","ModelBatchItem","cacheItem","getOrCreate","getCacheKey","createQueries","isCounter","getQueries","paramsGetter","getMappingInfo","InsertModelBatchItem","getInsertKey","createInsertQueries","UpdateModelBatchItem","getUpdateKey","createUpdateQueries","RemoveModelBatchItem","getRemoveKey","createDeleteQueries","modelBatchItem","moduleBatchItemModule","ModelBatchMapper","_cache","insert","modelBatchMapper","ModelMapper","batching","getSelectExecutor","getSelectAllExecutor","getInsertExecutor","getUpdateExecutor","getDeleteExecutor","paramsHandler","getExecutorFromQuery","modelMapper","vm","vmFileName","QueryGenerator","propertiesInfo","fieldsInfo","orderByColumns","_getConditionWithOperators","scriptText","_valueGetterExpression","script","Script","runInThisContext","filteredPropertiesInfo","pInfo","_getInsertQuery","_insertParamsGetter","primaryKeys","column","_getUpdateQuery","_updateParamsGetter","_assignmentGetterExpression","_getDeleteQuery","_deleteParamsGetter","columnsToDelete","objectName","_valueGetterSingle","propertyName","fromModel","fromModelFn","_getMappingFunctionCall","_getSingleCondition","queryGenerator","ResultMapper","getPropertyName","getToModelFn","_getConditionalRowAdapter","conditionalRowAdapter","newInstance","canCache","getSelectAdapter","resultMapper","inspectMethod","Result","rowAdapter","_rs","_info","_rowAdapter","_isEmptyLwt","keyMatches","ObjectSelector","allPKsDefined","keysAreIncluded","allPropertiesArePrimaryKeys","containsAllFields","containsAllOrderByColumns","ck","filteredTables","clusteringKeyMatches","staticColumns","staticColumnCount","hasStaticColumn","applicableColumns","keyNames","objectSelector","DocInfoAdapter","mappingInfo","propertyKeys","getColumnName","getFromModelFn","ordering","overrideIdempotency","docInfoAdapter","cacheHighWaterMark","MappingHandler","select","_validateCacheLength","selectAll","customQueries","cacheKey","getSelectKey","resultAdapter","getPropertiesInfo","adaptOrderBy","getForSelect","getSelect","selectParamsGetter","selectExecutor","_executeSelect","getSelectAllKey","getForSelectAll","selectAllExecutor","adaptAllOptions","_setSingleExecutor","_setBatchExecutor","getForInsert","getInsert","getForUpdate","getUpdate","getForDelete","getDelete","commonExecutionOptions","commonOptions","queryMappedExecutor","resultAdapterInfo","getCustomQueryAdapter","singleExecutor","adaptOptions","getMutationAdapter","batchExecutor","queryAndParams","mappingHandler","TableMappings","UnderscoreCqlToCamelCaseMappings","DefaultTableMappings","tableMappings","tableMappingsModule","ModelMappingInfo","mappings","_mappings","_columns","_documentProperties","modelColumnInfo","toModel","newObjectInstance","currentKeyspace","models","modelName","modelOptions","_create","createDefault","ModelColumnInfo","modelMappingInfo","Mapper","_modelMappingInfos","_modelMappers","pushQueries","adaptBatchOptions","mapper","mapping","Stream","executeConcurrent","ArrayBasedExecutor","StreamBasedExecutor","_query","_parameters","_raiseOnFirstError","raiseOnFirstError","_concurrencyLevel","concurrencyLevel","_result","ResultSetGroup","_stop","_executeOneAtATime","iteration","setResultItem","_setError","setError","_stream","_inFlight","_readEnded","_executeOne","_setReadEnded","isPaused","resume","pause","_collectResults","collectResults","_maxErrors","maxErrors","totalExecuted","resultItems","concurrent","datastax","NFTBackend","building","__server","__database","Events","backend"],"mappings":"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"}