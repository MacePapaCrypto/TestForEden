name: Frontend CI 

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: ['*']

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      matrix:
        node: ['17']
    name: Node ${{ matrix.node }} Backend 
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Npm Install 
        run: npm install
      - name: NPM lint
        run: npm run lint
      - name: Npm test 
        run: npm run test
      - name: Run Npm
        run: npm run build
  deployment-development:
    name: Deployment Development
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref_name == 'development'
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-central1 
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: docker_nodejs_demo
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA}
    - uses: imranismail/setup-kustomize@v1
    - run: |
        cd deploy/kubernetes
        kustomize edit set image app:${GITHUB_SHA}
  deployment-master:
    name: Deployment
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref_name == 'master'
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-central1 
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: docker_nodejs_demo
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA}
    - uses: imranismail/setup-kustomize@v1
    - run: |
        cd deploy/kubernetes
        kustomize edit set image app:${GITHUB_SHA}
        git add .
        git commit -m "Set `app` image tag to `${GITHUB_SHA}`"
        git push